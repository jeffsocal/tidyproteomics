% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein_collapse.R
\name{collapse}
\alias{collapse}
\title{Convert peptide quantitative data into protein quantitative data}
\usage{
collapse(
  data = NULL,
  collapse_to = "protein",
  assign_by = c("all-possible", "razor-local", "razor-global", "non-homologous"),
  top_n = Inf,
  split_abundance = FALSE,
  fasta_path = NULL,
  .verbose = TRUE,
  .function = fsum
)
}
\arguments{
\item{data}{a tidyproteomics data-object}

\item{collapse_to}{a character string}

\item{assign_by}{the method to by which to combine peptides into proteins}

\item{top_n}{a numeric to indicate the N number of peptides summed account for
the protein quantitative value, this assumes that peptides have been summed across
charge states}

\item{split_abundance}{a boolean to indicate if abundances for razor peptides should
be split according to protein prevalence}

\item{fasta_path}{if supplied, it will be used to fill in annotation values such as
description, protein_name and gene_name}

\item{.verbose}{a boolean}

\item{.function}{an assignable protein abundance summary function, fsum, fmean,
fgeomean and fmedian have constructed as NAs must be removed.
Example: fmedian <- function(x){stats::median(x, na.rm = TRUE)}
Example: fquantile <- function(x){stats::quantile(x, .75, na.rm = TRUE)}}
}
\value{
a tidyproteomics data-object
}
\description{
\code{collapse()} produces a protein based tidyproteomics data-object from a peptide based tidyproteomics data-object.
}
\examples{
library(dplyr, warn.conflicts = FALSE)
library(tidyproteomics)
# data <- hela_peptides \%>\% collapse()
# data \%>\% summary("sample")

}
