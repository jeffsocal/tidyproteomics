[{"path":"https://jeffsocal.github.io/tidyproteomics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 tidyproteomics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/annotating.html","id":"annotating-data","dir":"Articles","previous_headings":"","what":"Annotating data","title":"Annotating","text":"part Tidyproteomics workflow, need update gene_name description annotated terms data imported FragPipe. accomplish , use information parsed FASTA file. parsed FASTA file contain three columns: protein identifier, term, annotation. Updating gene_name description annotated terms allow easier interpretation analysis data. gene_name description attributes provide crucial information protein, function biological role. updating attributes information FASTA file, can ensure data accurate informative. process updating gene_name description annotated terms simple. First, parse FASTA file extract necessary information. , use information update corresponding attributes imported data FragPipe. important note parsed FASTA file must contain accurate --date information. information FASTA file outdated incorrect, updated gene_name description attributes also incorrect. Therefore, essential verify accuracy FASTA file using update imported data FragPipe.","code":"library(tidyverse) library(tidyproteomics)  # download the data url <- \"https://ftp.ebi.ac.uk/pride-archive/2016/06/PXD004163/Yan_miR_Protein_table.flatprottable.txt\" download.file(url, destfile = \"./data/combined_protein.tsv\", method = \"auto\")  # import the data data_prot <- \"./data/combined_protein.tsv\" %>% import('FragPipe', 'proteins')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/annotating.html","id":"from-a-fasta-file","dir":"Articles","previous_headings":"Annotating data","what":"From a FASTA File","title":"Annotating","text":"Read FASTA file using “un-exposed” methods tidyproteomics package. Notice gene_name annotations different FASTA FragPipe outoput. can merge annotations, can replace annotations,","code":"data_fasta <- \"~/Local/data/fasta/uniprot_human-20398_20220920.fasta\" %>%    tidyproteomics:::fasta_parse(as = \"data.frame\") %>%   select(protein = accession, gene_name, description) %>%   pivot_longer(     cols = c('gene_name', 'description'),     names_to = 'term',     values_to = 'annotation'   )  data_fasta %>% filter(protein %in% c('P68431', 'P62805')) #> # A tibble: 4 × 3 #>   protein term        annotation   #>   <chr>   <chr>       <chr>        #> 1 P62805  gene_name   H4-16        #> 2 P62805  description Histone H4   #> 3 P68431  gene_name   H3C12        #> 4 P68431  description Histone H3.1 data_prot$annotations %>% filter(protein %in% c('P68431', 'P62805')) #> # A tibble: 4 × 3 #>   protein term        annotation   #>   <chr>   <chr>       <chr>        #> 1 P62805  gene_name   H4C1         #> 2 P62805  description Histone H4   #> 3 P68431  gene_name   H3C1         #> 4 P68431  description Histone H3.1 data_new_merged <- data_prot %>% annotate(data_fasta, duplicates = 'merge')  data_new_merged$annotations %>% filter(protein %in% c('P68431', 'P62805')) #> # A tibble: 4 × 3 #>   protein term        annotation   #>   <chr>   <chr>       <chr>        #> 1 P62805  description Histone H4   #> 2 P62805  gene_name   H4C1; H4-16  #> 3 P68431  description Histone H3.1 #> 4 P68431  gene_name   H3C1; H3C12 data_new_replaced <- data_prot %>% annotate(data_fasta, duplicates = 'replace')  data_new_replaced$annotations %>% filter(protein %in% c('P68431', 'P62805')) #> # A tibble: 4 × 3 #>   protein term        annotation   #>   <chr>   <chr>       <chr>        #> 1 P62805  description Histone H4   #> 2 P62805  gene_name   H4-16        #> 3 P68431  description Histone H3.1 #> 4 P68431  gene_name   H3C12"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/annotating.html","id":"go-annotations","dir":"Articles","previous_headings":"Annotating data","what":"GO Annotations","title":"Annotating","text":"obtain GO annotations, can visit UniProt’s website search proteins interest, human proteins. found proteins, need select “Customize columns” option access several options, including Gene Ontology. selecting Gene Ontology, need choose desired values, molecular function, clicking . selected desired values, click “Save” button save changes. Finally, can download table TSV file clicking “Download” button. file contain information need selected proteins, making easier analyze interpret data. Now know obtain GO annotations, can use information enhance research analysis. UniProt’s website valuable resource obtaining information proteins, ability customize columns select desired values makes even useful researchers scientists. Read TSV file downloaded UniProt table. just need tidy data bit get format needed attaching annotations. Looks great! Take test drive subsetting data based specific annotation term. enrichment plot “ion binding” annotation molecular_function.","code":"data_go <- \"~/Local/data/uniprot-compressed_true_download_true_fields_accession_2Creviewed_2C-2023.04.13-22.27.47.76.tsv\" %>% read_tsv()  head(data_go) #> # A tibble: 6 × 8 #>   Entry      Reviewed `Entry Name` `Protein names`  `Gene Names` Organism Length #>   <chr>      <chr>    <chr>        <chr>            <chr>        <chr>     <dbl> #> 1 A0A087X1C5 reviewed CP2D7_HUMAN  Putative cytoch… CYP2D7       Homo sa…    515 #> 2 A0A0B4J2F0 reviewed PIOS1_HUMAN  Protein PIGBOS1… PIGBOS1      Homo sa…     54 #> 3 A0A0B4J2F2 reviewed SIK1B_HUMAN  Putative serine… SIK1B        Homo sa…    783 #> 4 A0A0C5B5G6 reviewed MOTSC_HUMAN  Mitochondrial-d… MT-RNR1      Homo sa…     16 #> 5 A0A0K2S4Q6 reviewed CD3CH_HUMAN  Protein CD300H … CD300H       Homo sa…    201 #> 6 A0A0U1RRE5 reviewed NBDY_HUMAN   Negative regula… NBDY LINC01… Homo sa…     68 #> # ℹ 1 more variable: `Gene Ontology (molecular function)` <chr> data_go <- data_go %>%   select(protein = Entry,          molecular_function = `Gene Ontology (molecular function)`) %>%   # separate the GO terms so we get 1/row   separate_rows(molecular_function, sep=\"\\\\;\\\\s\") %>%   # remove the [GO:accession]   mutate(molecular_function = sub(\"\\\\s\\\\[.+\", \"\", molecular_function)) %>%   # pivot to the needed format   pivot_longer(molecular_function,                names_to = 'term',                values_to = 'annotation')  head(data_go) #> # A tibble: 6 × 3 #>   protein    term               annotation                                       #>   <chr>      <chr>              <chr>                                            #> 1 A0A087X1C5 molecular_function aromatase activity                               #> 2 A0A087X1C5 molecular_function heme binding                                     #> 3 A0A087X1C5 molecular_function iron ion binding                                 #> 4 A0A087X1C5 molecular_function oxidoreductase activity, acting on paired donor… #> 5 A0A087X1C5 molecular_function steroid hydroxylase activity                     #> 6 A0A0B4J2F0 molecular_function NA data_new_go <- data_prot %>% annotate(data_go)  data_new_go$annotations %>% filter(protein %in% c('P68431', 'P62805')) #> # A tibble: 6 × 3 #>   protein term               annotation                          #>   <chr>   <chr>              <chr>                               #> 1 P62805  description        Histone H4                          #> 2 P62805  gene_name          H4C1                                #> 3 P62805  molecular_function structural constituent of chromatin #> 4 P68431  description        Histone H3.1                        #> 5 P68431  gene_name          H3C1                                #> 6 P68431  molecular_function structural constituent of chromatin data_new_go %>%    subset(molecular_function == 'structural constituent of chromatin') #> Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. #> ℹ Please explicitly name `id_cols`, like `id_cols = identifier`. #> ℹ The deprecated feature was likely used in the tidyproteomics package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #> Origin          FragPipe  #>                 proteins (23.96 kB)  #> Composition     6 files  #>                 2 samples (control, knockdown)  #> Quantitation    14 proteins  #>                 2.7 log10 dynamic range  #>                 16.7% missing values  #>  *imputed         #> Accounting      (3) num_psms num_psms_unique imputed  #> Annotations     (3) molecular_function description gene_name  #> data_new_go %>%    subset(molecular_function %like% 'ion binding') %>%    expression(knockdown/control) %>%    enrichment(knockdown/control,               .term = 'molecular_function',              .method = 'wilcoxon') %>%   plot_enrichment(     knockdown/control,      .term = 'molecular_function',     significance_max = 1   )"},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"assign_by","dir":"Articles","previous_headings":"The inputs","what":"assign_by","title":"Protein Accounting","text":"collapse() function accommodates four methods accounting variable:","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"top_n","dir":"Articles","previous_headings":"The inputs","what":"top_n","title":"Protein Accounting","text":"variable sets number peptide quantitative values include final protein quantitative value.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"split_abundance","dir":"Articles","previous_headings":"The inputs","what":"split_abundance","title":"Protein Accounting","text":"true/false variable, true, split abundances razor-peptides proportional abundance proteins. method experimental, validated peer-reviewed. fasta_path can provided calculate iBAQ based values. However, currently method supports Tryptic based peptide accounting.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Protein Accounting","text":"import data-object ProteomeDiscoverer’s protein level accounting investigate difference ProteomeDiscoverer’s protein accounting implemented tidyproteomics.","code":"# download the data url_pro <- \"https://data.caltech.edu/records/aevwq-2ps50/files/ProteomeDiscoverer_2.5_p97KD_HCT116_proteins.xlsx?download=1\" url_pep <- \"https://data.caltech.edu/records/aevwq-2ps50/files/ProteomeDiscoverer_2.5_p97KD_HCT116_peptides.xlsx?download=1\"  download.file(url_pro, destfile = \"./data/pd_proteins.xlsx\") download.file(url_pep, destfile = \"./data/pd_peptides.xlsx\")  # import the data pro_data <- \"./data/pd_proteins.xlsx\" %>% import('ProteomeDiscoverer', 'proteins') pep_data <- \"./data/pd_peptides.xlsx\" %>% import('ProteomeDiscoverer', 'peptides')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"assign-peptides-by-razor-logic","dir":"Articles","previous_headings":"Examples","what":"Assign peptides by razor logic","title":"Protein Accounting","text":"Check see two results agree … quick plot visualizing  Lets look examples outliers … take protein P45983 examine … see P45983 yielded 5 peptides, 2 shared. outlier table see ProteomeDiscoverer excluded razor peptides protein quantitation. dig , find peptide IIDFGLAR razor definition belongs protein Q16539, peptide MSYLLYQMLCGIK can assigned P45983, thus giving us larger value shown outlier table.","code":"pro_frompep_razor <- pep_data %>%    collapse(assign_by = 'razor-global', top_n = Inf) %>%   normalize(.method = c('median', 'linear', 'loess'))  pro_frompep_razor %>%    summary(\"sample\", destination = 'return') %>%    select(c('sample', 'proteins', 'peptides', 'CVs')) %>%   knitr::kable() tbl_merged_razor <- pro_frompep_razor$quantitative %>% select('sample','replicate','protein', 'abundance_raw') %>%   inner_join(pro_data$quantitative %>% select('sample','replicate','protein', 'abundance_raw'),               by = c('sample','replicate','protein'),              suffix = c(\"_tidyproteomics\", \"_proteomediscoverer\"))  tbl_merged_razor %>%   mutate(itentical_protein_abundances = abundance_raw_proteomediscoverer == abundance_raw_tidyproteomics) %>%   filter(!is.na(itentical_protein_abundances)) %>%   group_by(itentical_protein_abundances) %>%   summarise(n = n(), .groups = 'drop') %>%   mutate(r = paste(n / sum(n) * 100, \"%\")) %>%   knitr::kable() tbl_merged_razor %>%   mutate(sample_rep = paste(sample, replicate)) %>%   ggplot(aes(abundance_raw_proteomediscoverer, abundance_raw_tidyproteomics)) +    geom_abline(color='red') +   geom_point(alpha = .67) +   scale_x_log10() +   scale_y_log10() +   facet_wrap(~sample_rep) tbl_merged_razor %>%   filter(abundance_raw_proteomediscoverer != abundance_raw_tidyproteomics) %>%   head(3) %>%   knitr::kable() pep_P45983 <- pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%    filter(protein == 'P45983')  pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%   filter(peptide %in% pep_P45983$peptide) %>%   group_by(peptide, modifications) %>%   summarise(     proteins = paste(protein, collapse = \"; \"),     abundance_raw = unique(abundance_raw)   ) %>%   knitr::kable() pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%   filter(protein %in% c('O15264','Q86YV6','P45984','P53778','Q16539','P45983')) %>%   group_by(protein) %>%   summarise(     n_peptides = length(unique(peptide))   ) %>%   arrange(desc(n_peptides)) %>%   knitr::kable()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"assign-by-excluding-homologous-peptides","dir":"Articles","previous_headings":"Examples","what":"Assign by excluding homologous peptides","title":"Protein Accounting","text":"means ProteomeDiscoverer method protein accounting excluded abundance measurement razor peptides. Let try replicate well. Check see two results agree … quick plot visualizing  Interesting, now show P45983 agrees ProteomeDiscoverer, yet obviously several others Lets look examples outliers … take protein Q96LR5 examine … quick check peptide sum appears ProteomeDiscoverer ignored razor-peptides together protein examine proteins group peptides may shared … … see ProteomeDiscoverer actually assigned abundances razor-peptides. check results merged razor data find correct.","code":"pro_frompep_nonhom <- pep_data %>%    collapse(assign_by = 'non-homologous', top_n = Inf) %>%   normalize(.method = c('median', 'linear', 'loess'))  pro_frompep_nonhom %>%    summary(\"sample\", destination = 'return') %>%    select(c('sample', 'proteins', 'peptides', 'CVs')) %>%   knitr::kable() tbl_merged_nonhom <- pro_frompep_nonhom$quantitative %>% select('sample','replicate','protein', 'abundance_raw') %>%   inner_join(pro_data$quantitative %>% select('sample','replicate','protein', 'abundance_raw'),               by = c('sample','replicate','protein'),              suffix = c(\"_tidyproteomics\", \"_proteomediscoverer\"))  tbl_merged_nonhom %>%   mutate(itentical_protein_abundances = abundance_raw_proteomediscoverer == abundance_raw_tidyproteomics) %>%   filter(!is.na(itentical_protein_abundances)) %>%   group_by(itentical_protein_abundances) %>%   summarise(n = n(), .groups = 'drop') %>%   mutate(r = paste(n / sum(n) * 100, \"%\")) %>%   knitr::kable() tbl_merged_nonhom %>%   mutate(sample_rep = paste(sample, replicate)) %>%   ggplot(aes(abundance_raw_proteomediscoverer, abundance_raw_tidyproteomics)) +    geom_abline(color='red') +   geom_point(alpha = .67) +   scale_x_log10() +   scale_y_log10() +   facet_wrap(~sample_rep) tbl_merged_nonhom %>% filter(protein == 'P45983') %>%   knitr::kable() tbl_merged_nonhom %>%   filter(abundance_raw_proteomediscoverer != abundance_raw_tidyproteomics) %>%   head(3) %>%   knitr::kable() pep_Q96LR5 <- pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%    filter(protein == 'Q96LR5')  pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%   filter(peptide %in% pep_Q96LR5$peptide) %>%   group_by(peptide, modifications) %>%   summarise(     proteins = paste(protein, collapse = \"; \"),     abundance_raw = unique(abundance_raw)   ) %>%   knitr::kable() #> `summarise()` has grouped output by 'peptide'. You can override using the #> `.groups` argument. pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%   filter(peptide %in% pep_Q96LR5$peptide) %>%   group_by(peptide, modifications) %>%   summarise(     proteins = paste(protein, collapse = \"; \"),     abundance_raw = unique(abundance_raw),     .groups = 'drop'   ) %>%   summarise(abundance_sum = sum(abundance_raw)) %>%   knitr::kable() get_peptides <- pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%   filter(protein %in% c('Q96LR5','P51965','Q969T4'))  pep_data$quantitative %>%    filter(!is.na(abundance_raw)) %>%    filter(sample == 'p97_kd', replicate == 1) %>%   filter(peptide %in% get_peptides$peptide) %>%   group_by(peptide, modifications) %>%   summarise(     proteins = paste(protein, collapse = \"; \"),     abundance_raw = unique(abundance_raw)   ) %>%   knitr::kable() #> `summarise()` has grouped output by 'peptide'. You can override using the #> `.groups` argument. tbl_merged_razor %>%   filter(sample == 'p97_kd', replicate == 1) %>%    filter(protein %in% c('Q96LR5','P51965','Q969T4')) %>%   knitr::kable()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/collapsing.html","id":"collapsing-to-gene-name","dir":"Articles","previous_headings":"Examples","what":"Collapsing to Gene Name","title":"Protein Accounting","text":"Alternatively, peptide level data can collapsed Annotation term, case collapse gene_name adding annotations peptide data object. See vignette(\"annotating\").","code":"library(tidyr)  data_fasta <- \"uniprot_human-20398_20220920.fasta\" %>%    tidyproteomics:::fasta_parse(as = \"data.frame\") %>%   select(protein = accession, gene_name, description) %>%   pivot_longer(     cols = c('gene_name', 'description'),     names_to = 'term',     values_to = 'annotation'   )  gene_data <- pep_data %>%    annotate(data_fasta, duplicates = 'merge') %>%   collapse(collapse_to = 'gene_name') gene_data %>% plot_counts() #> Warning: Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) #> Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L) gene_data %>%    normalize(.method = 'linear') %>%   expression(p97_kd/ctl) %>%    plot_volcano(p97_kd/ctl, significance_column = 'p_value') +    labs(title = \"Gene Level Expression\") #> ℹ Normalizing quantitative data #> ℹ ... using linear regression #> ✔ ... using linear regression [258ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected linear #> Warning: Values from `annotation` are not uniquely identified; output will contain #> list-cols. #> • Use `values_fn = list` to suppress this warning. #> • Use `values_fn = {summary_fun}` to summarise duplicates. #> • Use the following dplyr code to identify duplicates. #>   {data} %>% #>   dplyr::group_by(gene_name, term) %>% #>   dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>% #>   dplyr::filter(n > 1L)"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/enrichment.html","id":"term-enrichment","dir":"Articles","previous_headings":"","what":"Term Enrichment","title":"Enrichment","text":"Term enrichment analysis possible proceeding expression analysis enrichment() function, employing either GSEA algorithm simple Wilcoxon rank sum comparison, can visualized plot_enrichment() function.","code":"library(\"dplyr\") library(\"tidyproteomics\")  rdata <- hela_proteins %>%    normalize(.method = 'linear') %>%   expression(knockdown/control) %>%   enrichment(knockdown/control,               .term = 'biological_process',               .method = 'wilcoxon')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/enrichment.html","id":"exporting-results","dir":"Articles","previous_headings":"Term Enrichment","what":"Exporting Results","title":"Enrichment","text":"results analysis stored tidyproteomics data-object can easily exported save flat data table used external stream analysis. results can also terms appended output, protein gene_name, may useful follow-analyses.","code":"rdata %>% export_analysis(knockdown/control,                            .analysis = 'enrichment',                            .term = 'biological_process') #> # A tibble: 13 × 5 #>    annotation                         p_value adj_p_value enrichment  size #>    <chr>                                <dbl>       <dbl>      <dbl> <int> #>  1 cell proliferation               0.0000703    0.000914      6.41    279 #>  2 conjugation                      0.000110     0.00132      -2.01   1150 #>  3 cellular component movement      0.00347      0.0381        2.56    954 #>  4 development                      0.00845      0.0845       -2.19    801 #>  5 cellular homeostasis             0.0640       0.576         1.16   2761 #>  6 cell differentiation             0.0894       0.715         1.78    520 #>  7 cell organization and biogenesis 0.0969       0.715         0.416  1273 #>  8 defense response                 0.0974       0.715        -0.310   789 #>  9 coagulation                      0.239        1             0.304   889 #> 10 cell communication               0.551        1             0.284   145 #> # ℹ 3 more rows rdata %>% export_analysis(knockdown/control,                            .analysis = 'enrichment',                            .term = 'biological_process',                           .append = 'gene_name') #> # A tibble: 13 × 6 #>    annotation                    p_value adj_p_value enrichment  size gene_names #>    <chr>                           <dbl>       <dbl>      <dbl> <int> <chr>      #>  1 cell proliferation            7.03e-5    0.000914      6.41    279 PRKDC, HU… #>  2 conjugation                   1.10e-4    0.00132      -2.01   1150 DYNC1H1, … #>  3 cellular component movement   3.47e-3    0.0381        2.56    954 PRKDC, PR… #>  4 development                   8.45e-3    0.0845       -2.19    801 PRKDC, FL… #>  5 cellular homeostasis          6.40e-2    0.576         1.16   2761 PLEC, FAS… #>  6 cell differentiation          8.94e-2    0.715         1.78    520 PLEC, DYN… #>  7 cell organization and biogen… 9.69e-2    0.715         0.416  1273 PRKDC, FL… #>  8 defense response              9.74e-2    0.715        -0.310   789 PLEC, PRK… #>  9 coagulation                   2.39e-1    1             0.304   889 PLEC, FAS… #> 10 cell communication            5.51e-1    1             0.284   145 TLN1, DSP… #> # ℹ 3 more rows"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/enrichment.html","id":"enrichment-plot","dir":"Articles","previous_headings":"Term Enrichment","what":"Enrichment Plot","title":"Enrichment","text":"","code":"rdata %>% plot_enrichment(knockdown/control,                            .term = 'biological_process')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"analysis-of-two-samples","dir":"Articles","previous_headings":"","what":"Analysis of Two Samples","title":"Expression","text":"One fundamental analyses quantitative proteomics estimation univariate differences two samples. Tidyproteomics accommodates two sample analysis using expression() function, results can visualized using plot_volcano() plot_proportion() visualization functions shown . expression analysis can accomplished thought R limma package, using two-sample statistical comparison, default method employs two-sided T-test. Note, values pass cutoff automatically choose top proteins display. noted package incorporate recent methods described literature. methods incorporated future revisions, user provided function.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"available-methods","dir":"Articles","previous_headings":"Analysis of Two Samples","what":"Available Methods","title":"Expression","text":"Johnston, L. W. “Student’s t-Test.” Journal Quality Technology 2.4 (1970): 243-245. R::stats::t.test limma (Empirical Bayes) Ritchie , Phipson B, Wu D, Hu Y, Law CW, Shi W, Smyth GK (2015). “limma powers differential expression analyses RNA-sequencing microarray studies.” Nucleic Acids Research, 43(7), e47. Bioconductor: limma","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"alternative-methods","dir":"Articles","previous_headings":"Analysis of Two Samples","what":"Alternative Methods","title":"Expression","text":"Choi, Meena, Ching-Yun Chang, Timothy Clough, Daniel Broudy, Trevor Killeen, Brendan MacLean, Olga Vitek. 2014. “MSstats: R Package Statistical Analysis Quantitative Mass Spectrometry-Based Proteomic Experiments.” Bioinformatics 30 (17): 2524–26. msstats.org Zhu, Yafeng, Lukas M. Orre, Yan Zhou Tran, Georgios Mermelekas, Henrik J. Johansson, Alina Malyutina, Simon Anders, Janne Lehtiö. 2020. “DEqMS: Method Accurate Variance Estimation Differential Protein Expression Analysis.” Molecular & Cellular Proteomics: MCP 19 (6): 1047–57. Bioconductor: DEqMS Ammar, Constantin, Markus Gruber, Gergely Csaba, Ralf Zimmer. 2019. “MS-EmpiRe Utilizes Peptide-Level Noise Distributions Ultra-Sensitive Detection Differentially Expressed Proteins.” Molecular & Cellular Proteomics: MCP 18 (9): 1880–92. GitH ub: MS-EmpiRe Sticker, Adriaan, Ludger Goeminne, Lennart Martens, Lieven Clement. 2020. “Robust Summarization Inference Proteome-Wide Label-Free Quantification.” Molecular & Cellular Proteomics: MCP 19 (7): 1209–19. Bioconductor: msqrob2","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"input-parameters","dir":"Articles","previous_headings":"Expression Analysis","what":"Input Parameters","title":"Expression","text":"dj_p_value, p_value*","code":"library(\"dplyr\") library(\"tidyproteomics\")  rdata <- hela_proteins %>%    normalize(.method = 'loess') %>%   expression(knockdown/control)"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"exporting-results","dir":"Articles","previous_headings":"Expression Analysis","what":"Exporting Results","title":"Expression","text":"results analysis stored tidyproteomics data-object can easily exported save flat data table used external stream analysis.","code":"rdata %>% export_analysis(knockdown/control, .analysis = 'expression') #> # A tibble: 4,829 × 18 #>    protein imputed     n average_expression proportional_expression foldchange #>    <chr>     <dbl> <int>              <dbl>                   <dbl>      <dbl> #>  1 Q9NXV2    0         6           2768778.              0.0000113       14.0  #>  2 Q8TBM8    0.333     6           3005450.              0.0000123        6.31 #>  3 O95833    0.167     6           3047900.              0.0000124        6.02 #>  4 Q14534    0.333     6           4043660.              0.0000165        4.98 #>  5 Q5JUW8    0         6           1568377.              0.00000640       4.72 #>  6 Q9Y385    0         6           1294518.              0.00000528       4.55 #>  7 Q9Y4C2    0         6           6476607.              0.0000264        4.47 #>  8 O00214    0.333     6           1257127.              0.00000513       4.38 #>  9 Q9H6H4    0         6           2167884.              0.00000884       4.25 #> 10 Q8WU67    0.333     6            928918.              0.00000379       4.10 #> # ℹ 4,819 more rows #> # ℹ 12 more variables: log2_foldchange <dbl>, p_value <dbl>, adj_p_value <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"volcano-plot","dir":"Articles","previous_headings":"Expression Analysis","what":"Volcano Plot","title":"Expression","text":"default plot accoring adjusted p-value Log2 fold-change cutoff 2 greater.  parameters can adjusted suit needs …  … desires.","code":"rdata %>% plot_volcano(knockdown/control) rdata %>% plot_volcano(knockdown/control,                        significance_column = 'p_value',                        significance_max = 0.01,                        log2fc_min = 2) library(ggplot2) #>  #> Attaching package: 'ggplot2' #> The following object is masked from 'package:tidyproteomics': #>  #>     annotate  rdata %>% plot_volcano(knockdown/control,                        significance_column = 'p_value',                        significance_max = 0.01,                        log2fc_min = 2,                        color_positive = 'orange',                        color_negative = 'purple',                        show_lines = FALSE,                        show_fc_scale = FALSE,                        show_pannels = FALSE,                        labels_column = 'gene_name') +   labs(title = \"A nice volcano plot\", subtitle = \"with great colors\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/expression.html","id":"proportional-plot","dir":"Articles","previous_headings":"Expression Analysis","what":"Proportional Plot","title":"Expression","text":"proportional plot complementary volcano plot utilizes underlying data. default show top 1% (proportion_min = 0.01) along values passing fold-change significance cutoffs.  plot can likewise also manipulated like volcano plot.","code":"library(ggplot2)  rdata %>% plot_proportion(knockdown/control) #> Warning: ggrepel: 1 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps library(ggplot2)  rdata %>% plot_proportion(knockdown/control,                        significance_column = 'p_value',                        proportion_min = 0.1,                        log2fc_min = 2,                        color_positive = 'orange',                        color_negative = 'purple',                        show_lines = TRUE,                        labels_column = 'gene_name') #> ℹ proportional_expression appears to sum to 1 adjusting values to 100(%)"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"data-support","dir":"Articles","previous_headings":"","what":"Data Support","title":"Importing","text":"Importing currently implemented platforms assume peptide level FDR (user’s desired level) already accounted . See vignette(\"importing\"). Importing flexible enough accept data platforms flat files (.csv, .tsv, .xlsx) custom configuration. requires layout configuration website requires MSstats install website track MBR website Table formatted data (eg. .csv, .tsv, .xlsx) ProteomeDiscoverer, MaxQuant FragPipe meet requirements, defined package data tidyproteomics/inst/extdata/config/ accordingly. Note groups sample, identifier quantitative required, rest optional, used match found - currently good error handeling, aware. ProteomeDiscoverer peptide’s config can modified use Master Protein Accessions Protein Accessions either column present. Also note, configurations sample group defined “supplied name”, later derived extraction code defined columns labeled “pattern”. currently known directly supported quantitative proteomics platforms Spectronaut Proteograph Analysis Suite. Given flat-file export, data platforms also importable. See User Defined Import.","code":"library(\"dplyr\") library(\"tidyproteomics\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteomediscoverer","dir":"Articles","previous_headings":"Data Support","what":"ProteomeDiscoverer","title":"Importing","text":"ProteomeDiscoverer software suite ability export data post analysis peptides proteins. can accomplished opening Study Results, selecting File \\> Export \\> Microsoft Excel. pop keep Level 1 checked, select either “Proteins” “Peptide Groups”. See Exporting section make sure required columns present. data exported ProteomeDiscoverer “tidy”, mixed wide-format columns (eg. Abundance sample single row) long-format. data table ProteomeDiscoverer protein-centric wherein row dedicated single protein, rather single measurement. clean data need “rotate” wide-format columns row new table single observation. words, need single abundance value single protein single sample, per row. accomplish need pivot wide-format columns defined column pivot “extract” sample name column header defined column pattern_extract. patterns conform standard regular expressions. Note pivot columns provide basis sample sample_file extracting correct values indicated pattern_extract column, hence absence value column_import.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"initial-set-up","dir":"Articles","previous_headings":"Data Support > ProteomeDiscoverer","what":"Initial Set Up","title":"Importing","text":"setting experiment essential create sample names Study Definition tab open Study, navigate Study Factors box simply add Catigorical Factor name (eg. My_Sample) name study groups (eg. WT KO). destinations need applied import files Samples tab. Notice left column added Catigorical Factor named supplied. line pull-menu designating file (label TMT) one Catigorical Factors. now ensure importing data properly labeled sample. big deal hasn’t done, can fixed modify() function.","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteins","dir":"Articles","previous_headings":"Data Support > ProteomeDiscoverer > Exporting","what":"Proteins","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/ProteomeDiscoverer_proteins.tsv:","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"peptides","dir":"Articles","previous_headings":"Data Support > ProteomeDiscoverer > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/ProteomeDiscoverer_ppeptides.tsv:","code":"# replace path_to_package_data(\"proteins\") with the path to your local data. # hela_proteins <- \"./data/hela_export_table.xlsx\" %>% #    import(\"ProteomeDiscoverer\", \"proteins\")  data_proteins <- path_to_package_data(\"hela_proteins\") %>%    import(\"ProteomeDiscoverer\", \"proteins\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"maxquant","dir":"Articles","previous_headings":"Data Support","what":"MaxQuant","title":"Importing","text":"MaxQuant software suite creates files project sub directories following current_project \\> combined \\> txt data peptides (evidence.txt) proteins (proteinGroups.txt). data exported MaxQuant file proteinGroups.txt “tidy”, mixed wide-format columns (eg. Abundance sample single row) long-format. data table MaxQuant protein-centric wherein row dedicated single protein, rather single measurement. clean data need “rotate” wide-format columns row new table single observation. words, need single abundance value single protein single sample, per row. accomplish need pivot wide-format columns defined column pivot “extract” sample name column header defined column pattern_extract. patterns conform standard regular expressions. Note also want remove rows decoy search labeled REV_*, indicated column pattern_remove.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"initial-set-up-1","dir":"Articles","previous_headings":"Data Support > MaxQuant","what":"Initial Set Up","title":"Importing","text":"evidence.txt contains values imported file (important comparative statistics), proteinGroups.txt file contain entry file initial MaxQuant configuration Experiment column raw data tab unique value file (eg 1, 2, 3, …), otherwise values get merged common experiment groups output protein level data. sample groups can set modify() function.","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteins-1","dir":"Articles","previous_headings":"Data Support > MaxQuant > Exporting","what":"Proteins","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/MaxQuant_proteins.tsv:","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"peptides-1","dir":"Articles","previous_headings":"Data Support > MaxQuant > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/MaxQuant_peptides.tsv:","code":"data_proteins <- \"path_to_maxquant_project/combined/txt/proteinGroups.txt\" %>%    import(\"MaxQuant\", \"proteins\") %>%    reassign(field = 'sample', pattern = 'sample_1', replace = 'ko') %>%    reassign(field = 'sample', pattern = 'sample_2', replace = 'ko') %>%    reassign(field = 'sample', pattern = 'sample_3', replace = 'ko') %>%    reassign(field = 'sample', pattern = 'sample_4', replace = 'ko') %>%    reassign(field = 'sample', pattern = 'sample_5', replace = 'wt') %>%    reassign(field = 'sample', pattern = 'sample_6', replace = 'wt') %>%    reassign(field = 'sample', pattern = 'sample_7', replace = 'wt') %>%    reassign(field = 'sample', pattern = 'sample_8', replace = 'wt')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"maxquant-1","dir":"Articles","previous_headings":"Data Support","what":"FragPipe","title":"Importing","text":"FragPipe software suite creates files project sub directory data peptides (combined_peptide.tsv) proteins (combined_protein.tsv). data exported FragPipe file combined_protein.tsv “tidy”, mixed wide-format columns (eg. Intensity sample single row) long-format. data table FragPipe protein-centric wherein row dedicated single protein, rather single measurement. clean data need “rotate” wide-format columns row new table single observation. words, need single abundance value single protein single sample, per row. accomplish need pivot wide-format columns defined column pivot “extract” sample name column header defined column pattern_extract. patterns conform standard regular expressions.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"initial-set-up-2","dir":"Articles","previous_headings":"Data Support > FragPipe","what":"Initial Set Up","title":"Importing","text":"FragPipe already removes rows decoy search indicated workflow setup, however done can indicated pettern column pattern_remove.","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteins-2","dir":"Articles","previous_headings":"Data Support > FragPipe > Exporting","what":"Proteins","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/FragPipe_proteins.tsv:","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"peptides-2","dir":"Articles","previous_headings":"Data Support > FragPipe > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/FragPipe_peptides.tsv:","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"skyline","dir":"Articles","previous_headings":"Data Support","what":"Skyline","title":"Importing","text":"Skyline software suite can export quantitative peptide data analyses. exported data file fairly “tidy” long format CSV file, peptide sample reported individual row.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"initial-set-up-3","dir":"Articles","previous_headings":"Data Support > Skyline","what":"Initial Set Up","title":"Importing","text":"report need established, File > Export > Report. Select Edit list..., Group: > External Tools click Add.... Select Columns correspond required values shown , name report Report Name: click OK.","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteins-3","dir":"Articles","previous_headings":"Data Support > Skyline > Exporting","what":"Proteins","title":"Importing","text":"yet supported. Peptides can combined proteins collapse().","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"peptides-3","dir":"Articles","previous_headings":"Data Support > Skyline > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/SkyLine_peptides.tsv:","code":"data_peptides <- \"path_to_skyline_project/output_file_name.csv\" %>%    import(\"Skyline\", \"peptides\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"dia-nn","dir":"Articles","previous_headings":"Data Support","what":"DIA-NN","title":"Importing","text":"DIA-NN software suite exports quantitative peptide data back project folder report.tsv. exported data file fairly “tidy” long format file, peptide sample reported individual row.","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteins-4","dir":"Articles","previous_headings":"Data Support > DIA-NN > Exporting","what":"Proteins","title":"Importing","text":"yet supported. Peptides can combined proteins collapse().","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"peptides-4","dir":"Articles","previous_headings":"Data Support > DIA-NN > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/DIA-NN_peptides.tsv:","code":"data_peptides <- \"path_to_diann_project/output_file_name.csv\" %>%    import(\"DIA-NN\", \"peptides\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"mztab","dir":"Articles","previous_headings":"Data Support","what":"mzTab","title":"Importing","text":"mzTab data limited support major vendors - ProteomeDiscoverer example supports version 1.0.0. data proteins, peptides psms contained within single file. Tidyproteomics assembles psm, peptide protein data independently sequentially combines generate desired protein peptide level output.","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"proteins-5","dir":"Articles","previous_headings":"Data Support > mzTab > Exporting","what":"Proteins","title":"Importing","text":"","code":"data_proteins <- \"path_to_data/project.mzTab\" %>% import(\"mzTab\", \"proteins\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/importing.html","id":"peptides-5","dir":"Articles","previous_headings":"Data Support > mzTab > Exporting","what":"Peptides","title":"Importing","text":"","code":"data_peptides <- \"path_to_data/project.mzTab\" %>% import(\"mzTab\", \"peptides\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/imputing.html","id":"imputation-functions","dir":"Articles","previous_headings":"","what":"Imputation Functions","title":"Imputing","text":"Imputation currently supports following functions:","code":"library(\"dplyr\") library(\"ggplot2\") library(\"tidyproteomics\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/imputing.html","id":"imputing","dir":"Articles","previous_headings":"","what":"Imputing","title":"Imputing","text":"part demonstration, signal P06576 p07_kd artificially removed simulate “genetic knockout mutation”.","code":"# path_to_package_data() loads data specific to this package # for your project load local data # example:  # your_proteins <- \"./data/your_exported_results.xlsx\" %>% #   import(\"ProteomeDiscoverer\", \"proteins\")  rdata <- hela_proteins w <- which(rdata$quantitative$protein == 'P06576' & rdata$quantitative$sample == 'knockdown') rdata$quantitative <- rdata$quantitative[-w,]"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/imputing.html","id":"using-column","dir":"Articles","previous_headings":"Imputing","what":"Using column","title":"Imputing","text":"Note difference using column ..","code":"rdata %>%    impute(.function = base::min, method = 'column') %>%   subset(protein %like% \"P23443|P51812|P06576\") %>%    extract() %>%   ggplot(aes(replicate, abundance)) +   geom_point(aes(color=sample), size=3, alpha=.5) +   facet_wrap(~identifier) +   scale_y_log10(limits = c(1e4,1e9)) +   scale_color_manual(values = c('red','blue'))"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/imputing.html","id":"using-row","dir":"Articles","previous_headings":"Imputing","what":"Using row","title":"Imputing","text":".. opposed row. row method can considered contain bias real offset, note protein P06576 (.e artifical knock-), shows expected offset column method, row method. Consider using row methods imputing values suspect missing--random. case P06576 missing---random, performed “genetic knockout mutation”.","code":"rdata %>%    impute(.function = base::min, method = 'row') %>%   subset(protein %like% \"P23443|P51812|P06576\") %>%    extract() %>%   ggplot(aes(replicate, abundance)) +   geom_point(aes(color=sample), size=3, alpha=.5) +   facet_wrap(~identifier) +   scale_y_log10(limits = c(1e4,1e9)) +   scale_color_manual(values = c('red','blue'))"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/imputing.html","id":"using-matrix","dir":"Articles","previous_headings":"Imputing","what":"Using matrix","title":"Imputing","text":"matrix based operation takes advantage data present samples (eg. “row”) information contained dynamic range (eg “column”) better estimate missing value - usually best missing--random. R package bioconductor::impute, allows popular imputation method KNN.","code":"rdata %>% impute(.function = impute.randomforest, method = 'matrix') %>% library(impute)  rdata %>% impute(.function = impute.knn, method = 'matrix') %>%"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"normalization-functions","dir":"Articles","previous_headings":"","what":"Normalization Functions","title":"Normalizing","text":"Normalization currently supports methods described . Benchmark timing accomplished M1 MacBook Pro (macOS Ventura 13.3 22E252). Parallel processing randomforest svm accomplished using mclapply R parallel package. 5min & 52.1 sec 2min & 26.5 sec (4 cores) 37.8 sec 14.0 sec (4 cores)","code":"library(\"dplyr\") library(\"tidyproteomics\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"normalization-of-the-whole-proteome","dir":"Articles","previous_headings":"","what":"Normalization of the whole proteome","title":"Normalizing","text":"","code":"# path_to_package_data() loads data specific to this package # for your project load local data # example:  # your_proteins <- \"./data/your_exported_results.xlsx\" %>% #   import(\"ProteomeDiscoverer\", \"proteins\")  rdata <- hela_proteins %>% normalize(.method = c(\"scaled\", \"median\", \"linear\", \"loess\", \"randomforest\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"visualizing","dir":"Articles","previous_headings":"","what":"Visualizing","title":"Normalizing","text":"Plotting overall variation dynamic range. easy reduce variability simply squashing dynamic range - plotting can ensure happen. Keep mind overall dynamic range several mis-aligned sets smaller properly normalized - often median normalization immediate impact CVs least rigorous. Note dramatic reduction CVs randomforest yielded also maintaining overall dynamic range.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"cvs-and-dynamic-range","dir":"Articles","previous_headings":"Visualizing","what":"CVs and Dynamic Range","title":"Normalizing","text":"","code":"rdata %>% plot_variation_cv() #> TableGrob (2 x 2) \"arrange\": 3 grobs #>   z     cells    name               grob #> 1 1 (2-2,1-1) arrange     gtable[layout] #> 2 2 (2-2,2-2) arrange     gtable[layout] #> 3 3 (1-1,1-2) arrange text[GRID.text.92]"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"pca","dir":"Articles","previous_headings":"Visualizing","what":"PCA","title":"Normalizing","text":"","code":"rdata %>% plot_variation_pca()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"effect-of-normalization-on-dynamic-range","dir":"Articles","previous_headings":"Visualizing","what":"Effect of Normalization on Dynamic Range","title":"Normalizing","text":"effect randomforest data noticable lower dynamic range, seen plot CVs values 10^6 abundance dramatically reduced. hunting low abundant biomarkers, method highly recomended.","code":"hela_proteins %>%   normalize(.method = c('median', 'randomforest')) %>%    plot_dynamic_range()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"normalization-based-on-a-subset","dir":"Articles","previous_headings":"","what":"Normalization based on a subset","title":"Normalizing","text":"addition proteome wide normalization, subset can used basis normalization, case spike-quantitative analytes perhaps bait protein immunoprecipitation experiment. accomplished semantic syntax subset() function reflected recorded operations. aware using regression smaller dynamic range full proteome may predict well beyond limts subset. NOTE: linear svm can predict beyond training set limits, loess can . NOTE: randomforest normalization method, implemented, requires prediction set size match training test size, therefore applicable normalization whole proteome. limma normalization method also accept subset normalization. methods skipped subset implemented.","code":"rdata <- hela_proteins %>%   normalize(description %like% 'ribosome',             .method = c('median', 'linear', 'loess', 'svm'))  #> Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. #> ℹ Please explicitly name `id_cols`, like `id_cols = identifier`. #> ℹ The deprecated feature was likely used in the tidyproteomics package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated.  rdata %>% plot_variation_cv() #> TableGrob (2 x 2) \"arrange\": 3 grobs #>   z     cells    name                grob #> 1 1 (2-2,1-1) arrange      gtable[layout] #> 2 2 (2-2,2-2) arrange      gtable[layout] #> 3 3 (1-1,1-2) arrange text[GRID.text.586] rdata %>% plot_dynamic_range() rdata %>% operations() #> ℹ Data Transformations #>   • Data files (p97KD_HCT116_proteins.xlsx) were imported as proteins from #>   ProteomeDiscoverer #>  #>   • Data reassigned sample to control where 'sample like ctl' #>  #>   • Data reassigned sample to knockdown where 'sample like p97' #>  #>   • Data normalized via median, linear, loess, svm. #>  #>   • Data normalized using subset description %like% ribosome FALSE. #>  #>   • ... based on a subset of 17 out of 5346 identifiers #>  #>   • Normalization automatically selected as svm."},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"developing-additional-methods","dir":"Articles","previous_headings":"","what":"Developing Additional Methods","title":"Normalizing","text":"normalization function can accommodate new methods fairly easily, without tested integrated package whole. due serial deployment normalization method subsequent selection best method going forward. change future. now lets walk process adding new method. always, reach maintainers method added package others use.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"where-the-normalization-gets-called","dir":"Articles","previous_headings":"Developing Additional Methods","what":"Where the normalization gets called","title":"Normalizing","text":"code base locate file R > control_normalization.R, method gets applied. Note, near bottom, () statements, specifically median, median normalization gets implemented. normalization functions require two inputs, table raw values log2 transformed, table grouped ‘centered’ values normalize . table can either computed entire proteome subset demonstrated .","code":"## d:        the raw data for all samples ## dc_this:  the 'centered' data ## d_norm:   the output normalized data  if(m == 'median') {         d_norm <- d %>% normalize_median(dc_this)} ## the log2 raw values  # A tibble: 30,157 × 4    sample    replicate identifier abundance    <chr>     <chr>     <chr>          <dbl>  1 control   1         Q15149          29.9  2 control   2         Q15149          30.0  3 control   3         Q15149          29.9  4 knockdown 1         Q15149          30.4  5 knockdown 2         Q15149          30.0  6 knockdown 3         Q15149          30.5  ..."},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"the-normalization-function","dir":"Articles","previous_headings":"Developing Additional Methods","what":"The normalization function","title":"Normalizing","text":"median normalization method, samples adjusted medians aligned. Therefor, need take median value sample, median medians, align.","code":"normalize_median <- function(     data = NULL,     data_centered = NULL ){    # visible bindings   abundance <- NULL    # compute the median shift   data_centered <- data_centered %>%     mutate(shift = median(abundance) - abundance)    # apply the median shift and return the data   data %>%     left_join(data_centered,               by = c('sample','replicate'),               suffix = c(\"\",\"_median\")) %>%     mutate(abundance_normalized = abundance + shift) %>%     select(identifier, sample, replicate, abundance_normalized) %>%     return() }"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/normalizing.html","id":"normalized-data-gets-merged-on-return","dir":"Articles","previous_headings":"Developing Additional Methods","what":"Normalized data gets merged on return","title":"Normalizing","text":"data, upon return controller function, abundance values converted back non-log values, merged main data object abundance values avaiable future selection.  Check normalization functions see implemented.","code":"d_norm <- d_norm %>%       dplyr::mutate(abundance_normalized = invlog2(abundance_normalized)) %>%       dplyr::rename(abundance = abundance_normalized)      data <- data %>% merge_quantitative(d_norm, m)      # A tibble: 42,330 × 6    sample_id sample    replicate protein abundance_raw abundance_median    <chr>     <chr>     <chr>     <chr>           <dbl>            <dbl>  1 e9b20ea7  control   1         Q15149    1011259992.       999619474.  2 ef79cc4c  control   2         Q15149    1093277593.      1106008756.  3 eebba67b  control   3         Q15149     980809516.      1094113651.  4 ebf4b0fe  knockdown 1         Q15149    1410445367.      1062933343.  5 ea36dac9  knockdown 2         Q15149    1072305561.      1113989578.  6 ecfd1822  knockdown 3         Q15149    1486561518.      1076375880.  7 e9b20ea7  control   1         Q09666     659299359.       651710227.  8 ef79cc4c  control   2         Q09666     717783135.       726141683.  9 eebba67b  control   3         Q09666     612673576.       683450264. 10 ebf4b0fe  knockdown 1         Q09666    1000041657.       753646788. hela_proteins %>% normalize(.method = 'median') %>% plot_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using median shift #> ✔ ... using median shift [108ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected median"},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"data-manipulation","dir":"Articles","previous_headings":"Package overview","what":"data manipulation","title":"Overview","text":"Reference vignette(\"importing\") vignette(\"subsetting\") import() - imports data several sources tidyproteomics data object subset() - subset tidyproteomics data object given regex reassign() - quickly reassign data different sample sets merge() - combines multiple imported data sets single object export_quant() - exports tidyproteomics data object .csv, .tsv, .xlsx .rds export_analysis() - exports tidyproteomics data object .csv, .tsv, .xlsx .rds","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"basic-analysis","dir":"Articles","previous_headings":"Package overview","what":"basic analysis","title":"Overview","text":"summary() - provides quick accounting number proteins observed plot_counts() - provides quick bar chart number proteins observed plot_quantrank() - provides quick plot quantitative expression proteins observed","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"normalization","dir":"Articles","previous_headings":"Package overview","what":"normalization","title":"Overview","text":"Reference vignette(\"normalizing\") normalize() - normalize raw data tidyproteomics data object select_normalization() - use weighted scheme automatically pick best normalization method, manually set one -stream analysis","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"impute-missing-values","dir":"Articles","previous_headings":"Package overview","what":"impute missing values","title":"Overview","text":"Reference vignette(\"imputing\") impute() - impute missing values tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"data-visualization","dir":"Articles","previous_headings":"Package overview","what":"data visualization","title":"Overview","text":"plot_normalization() - boxplot raw normalized values plot_variation_cv() - scatter plot raw normalized CV dynamic range values plot_variation_pca() - scatter plot raw normalized PCA values plot_dynamic_range() - 2d density plot raw normalized CVs log10 abundance plot_venn() - Venn accounting diagram protein overlap samples plot_euler() - Euler accounting diagram protein overlap samples plot_pca() - scatter plot PCA values selected normalized data values plot_heatmap() - heatmap protein sample selected normalized data values, clustered dimensions","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"expression-differences","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"expression differences","title":"Overview","text":"expression() - calculates two-sample statistical differences protein plot_volcano() - scatter plot log2-foldchange p-values given expression test plot_proportion() - scatter plot log2-foldchange proportional-expression given expression test plot_compexp() - scatter plot comparison two expression tests visualize intersection / difference","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"term-enrichment","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"term enrichment","title":"Overview","text":"enrichment() - term enrichment given expression test using Wilcoxon Rank Sum plot_enrichment() - bubble plot visualization term enrichment given expression test","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/overview.html","id":"a-simple-work-flow-for-importing-data-and-summarizing","dir":"Articles","previous_headings":"Workflows","what":"A simple work flow for importing data and summarizing","title":"Overview","text":"","code":"library(\"tidyproteomics\") hela_proteins <- path_to_package_data(\"proteins\") %>%   import(\"ProteomeDiscoverer\", \"proteins\")   hela_proteins %>% summary() hela_proteins %>% summary(by = 'sample')  hela_proteins %>% summary(by = 'contamination')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/subsetting.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Subsetting","text":"Subsetting can powerful way slice--dice data, print quick stats provide quick visualization. example, Hela data set can subset just proteins “Ribosome” description: Aside filtering directly protein_accession values, subsetting can use columns experiments table: terms accounting table: terms annotations table:","code":"hela_proteins %>% subset(description %like% \"Ribosome\") %>% summary('sample') #> Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. #> ℹ Please explicitly name `id_cols`, like `id_cols = identifier`. #> ℹ The deprecated feature was likely used in the tidyproteomics package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #>     sample proteins peptides peptides_unique quantifiable   CVs #>    control       18      224             224        0.976 0.094 #>  knockdown       18      224             224        0.996 0.170 colnames(hela_proteins$experiments) #> [1] \"sample_id\"   \"import_file\" \"sample_file\" \"sample\"      \"replicate\" colnames(hela_proteins$accounting) #> [1] \"sample_id\"           \"protein\"             \"protein_group\"       #> [4] \"match_between_runs\"  \"num_peptides\"        \"num_unique_peptides\" #> [7] \"num_psms\" hela_proteins$annotations$term %>% unique() #> [1] \"description\"        \"gene_id_entrez\"     \"gene_id_ensemble\"   #> [4] \"gene_name\"          \"biological_process\" \"cellular_component\" #> [7] \"molecular_function\" \"wiki_pathway\"       \"reactome_pathway\""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/subsetting.html","id":"using-annotations","dir":"Articles","previous_headings":"","what":"Using Annotations","title":"Subsetting","text":"allows specific importing specialized terms annotate() subsetting can performed. Additionally, provided quantitative platform produces imputed value commonly referred “match runs”, data can filtered exclude values. can valuable cases true presence/absence desired, larger portions proteome differ.","code":"hela_proteins %>% subset(cellular_component %like% \"nucleus\") %>% summary('sample') #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     4227    44075           39105        0.921 0.16 #>  knockdown     4227    44075           39105        0.921 0.20"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/subsetting.html","id":"using-accountings","dir":"Articles","previous_headings":"","what":"Using Accountings","title":"Subsetting","text":"Also, data can filtered proteins containing desired number underlying peptides.","code":"hela_proteins %>% subset(match_between_runs == FALSE) %>% summary('sample') #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     6527    62871           56511        0.940 0.16 #>  knockdown     6556    63319           56819        0.937 0.21 hela_proteins %>% subset(mum_peptides <= 1) %>% summary('sample') #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 hela_proteins %>% subset(num_unique_peptides <= 1) %>% summary('sample') #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     1459     4202            1459        0.505 0.19 #>  knockdown     1459     4202            1459        0.489 0.21 hela_proteins %>%    subset(cellular_component %like% \"cytosol\") %>%    summary()  #>  proteins peptides peptides_unique quantifiable  CVs #>      2855    33053           29506        0.929 0.24"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/subsetting.html","id":"split-then-merge","dir":"Articles","previous_headings":"","what":"Split then Merge","title":"Subsetting","text":"example data split two groups, independently manipulated, merged back together. advisable experiment like , just demonstration purposes.","code":"data_kd <- hela_proteins %>%    subset(sample %like% \"knockdown\") %>%    normalize(.method = c('median')) %>%   impute()  data_ct <- hela_proteins %>%    subset(sample %like% \"control\") %>%    normalize(.method = c('median')) %>%   impute()  data_new <- merge(list(data_kd, data_ct), quantitative_source = 'all') data_new #> Origin          Merged  #>                 proteins (10.95 MB)  #> Composition     6 files  #>                 2 samples (knockdown, control)  #> Quantitation    7055 proteins  #>                 4 log10 dynamic range  #>                 22.5% missing values  #>  *imputed       'row' samples via '::' group_by_sample 'FALSE'. 'row' samples via 'base' group_by_sample 'FALSE'. 'row' samples via 'min' group_by_sample 'FALSE'. 'row' samples via '::' group_by_sample 'FALSE'. 'row' samples via 'base' group_by_sample 'FALSE'. 'row' samples via 'min' group_by_sample 'FALSE'.  #> Accounting      (5) match_between_runs num_peptides num_unique_peptides num_psms imputed  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name biological_process #>                 cellular_component molecular_function wiki_pathway #>                 reactome_pathway  #> data_new %>% summary('sample') #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     6527    65121           58003        0.938 0.15 #>  knockdown     6556    65344           58095        0.918 0.21 data_new %>% operations() #> ℹ Data Transformations #>   • ProteomeDiscoverer [1]: Data files (p97KD_HCT116_proteins.xlsx) were #>   imported as proteins from ProteomeDiscoverer #>  #>   • ProteomeDiscoverer [1]: Data reassigned sample to control where 'sample #>   like ctl' #>  #>   • ProteomeDiscoverer [1]: Data reassigned sample to knockdown where 'sample #>   like p97' #>  #>   • ProteomeDiscoverer [1]: Data subset `sample` %like% `knockdown` #>  #>   • ProteomeDiscoverer [1]: Removed MBR between `all` groups #>  #>   • ProteomeDiscoverer [1]: Data normalized via median. #>  #>   • ProteomeDiscoverer [1]: Normalization automatically selected as median. #>  #>   • ProteomeDiscoverer [1]: Missing values imputed 'row' samples via '::' #>   group_by_sample 'FALSE'. #>  #>   • ProteomeDiscoverer [1]: Missing values imputed 'row' samples via 'base' #>   group_by_sample 'FALSE'. #>  #>   • ProteomeDiscoverer [1]: Missing values imputed 'row' samples via 'min' #>   group_by_sample 'FALSE'. #>  #>   • ProteomeDiscoverer [1]: ... 636 values imputed #>  #>   • ProteomeDiscoverer [2]: Data files (p97KD_HCT116_proteins.xlsx) were #>   imported as proteins from ProteomeDiscoverer #>  #>   • ProteomeDiscoverer [2]: Data reassigned sample to control where 'sample #>   like ctl' #>  #>   • ProteomeDiscoverer [2]: Data reassigned sample to knockdown where 'sample #>   like p97' #>  #>   • ProteomeDiscoverer [2]: Data subset `sample` %like% `control` #>  #>   • ProteomeDiscoverer [2]: Removed MBR between `all` groups #>  #>   • ProteomeDiscoverer [2]: Data normalized via median. #>  #>   • ProteomeDiscoverer [2]: Normalization automatically selected as raw. #>  #>   • ProteomeDiscoverer [2]: Missing values imputed 'row' samples via '::' #>   group_by_sample 'FALSE'. #>  #>   • ProteomeDiscoverer [2]: Missing values imputed 'row' samples via 'base' #>   group_by_sample 'FALSE'. #>  #>   • ProteomeDiscoverer [2]: Missing values imputed 'row' samples via 'min' #>   group_by_sample 'FALSE'. #>  #>   • ProteomeDiscoverer [2]: ... 714 values imputed #>  #>   • Merged 2 data sets"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/summarizing.html","id":"printing","dir":"Articles","previous_headings":"","what":"Printing","title":"Summarizing","text":"tidyproteomics data object can printed show summary object contents. can expand encompass additions generated operations.","code":"hela_proteins #>  #> ── Quantitative Proteomics Data Object ── #>  #> Origin          ProteomeDiscoverer  #>                 proteins (10.76 MB)  #> Composition     6 files  #>                 2 samples (control, knockdown)  #> Quantitation    7055 proteins  #>                 4 log10 dynamic range  #>                 28.8% missing values  #> Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name biological_process #>                 cellular_component molecular_function wiki_pathway #>                 reactome_pathway  #> hela_proteins %>% expression(knockdown/control) %>% enrichment(knockdown/control, .term = 'biological_process') #> ── Quantitative Proteomics Data Object ── #>  #> Origin          ProteomeDiscoverer  #>                 proteins (11.37 MB)  #> Composition     6 files  #>                 2 samples (control, knockdown)  #> Quantitation    7055 proteins  #>                 4 log10 dynamic range  #>                 28.8% missing values  #> Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name biological_process #>                 cellular_component molecular_function wiki_pathway #>                 reactome_pathway  #> Analyses        (1)  #>                 knockdown/control -> expression & enrichment (biological_process)  #>"},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/summarizing.html","id":"groups","dir":"Articles","previous_headings":"Summarizing","what":"Groups","title":"Summarizing","text":"tidyproteomics data object can summarize quantitative accounting data … … using columns corrisponing experimental meta-data … … terms annotation meta-data … … even terms accounting data …","code":"hela_proteins %>% summary() #> ── Summary: global ── #>  #>  proteins peptides peptides_unique quantifiable  CVs #>      7055    66329           58706        0.908 0.25 #> hela_proteins %>% summary(by = 'sample') #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 #> hela_proteins %>% summary(by = 'biological_process') #> Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. #> ℹ Please explicitly name `id_cols`, like `id_cols = identifier`. #> ℹ The deprecated feature was likely used in the tidyproteomics package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #>  #> ── Summary: biological_process ── #>  #>                biological_process proteins peptides peptides_unique #>                cell communication        9      100              93 #>                        cell death        1        3               1 #>              cell differentiation        3        9               9 #>                       cell growth      104     1419             839 #>  cell organization and biogenesis       17      241             241 #>                cell proliferation     7055    66329           58706 #>       cellular component movement        6       13              11 #>              cellular homeostasis      324     2854            2631 #>                       coagulation        9       68              58 #>                       conjugation      181     1460            1240 #>                  defense response       15       83              76 #>                       development       38      180             164 #>                 metabolic process      342     2804            2422 #>  quantifiable   CVs #>         0.920 0.200 #>         1.000 0.340 #>         0.389 0.305 #>         0.803 0.280 #>         0.967 0.210 #>         0.908 0.250 #>         0.679 0.410 #>         0.938 0.260 #>         0.885 0.220 #>         0.893 0.260 #>         0.709 0.275 #>         0.730 0.245 #>         0.886 0.250 #> hela_proteins %>% summary(by = 'num_peptides') #> ℹ Too many variables, limiting to the first 25 #>  #> ── Summary: num_peptides ── #>  #>  num_peptides proteins peptides peptides_unique quantifiable   CVs #>           228        1      228              59          1.0 0.180 #>           200        1      200             200          1.0 0.230 #>           177        1      177             177          1.0 0.230 #>           171        1      171               2          0.5 0.140 #>           166        1      166             166          1.0 0.170 #>           122        1      122             122          1.0 0.210 #>           119        1      119             119          1.0 0.160 #>           117        1      117             117          1.0 0.150 #>           114        1      114             114          1.0 0.320 #>           112        1      112              89          1.0 0.260 #>           109        1      109              77          1.0 0.150 #>           106        2      212             202          1.0 0.220 #>           105        1      105              84          1.0 0.180 #>           102        1      102              92          1.0 0.230 #>            98        2      196             168          1.0 0.250 #>            97        2      194             173          1.0 0.360 #>            92        1       92              92          1.0 0.220 #>            87        1       87              87          1.0 0.190 #>            82        2      164             164          1.0 0.215 #>            80        1       80              80          1.0 0.140 #>            78        1       78              60          1.0 0.230 #>            77        3      231             225          1.0 0.190 #>            76        2      152             152          1.0 0.335 #>            73        2      146             146          1.0 0.345 #>            71        1       71              38          1.0 0.290 #> hela_proteins %>% summary(by = 'match_between_runs') #>  #> ── Summary: match_between_runs ── #>  #>  match_between_runs proteins peptides peptides_unique quantifiable  CVs #>               FALSE     7055    63095           56665        0.939 0.25 #>                TRUE     2379     3235            2042        0.315 0.25 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/summarizing.html","id":"contamination","dir":"Articles","previous_headings":"Summarizing","what":"Contamination","title":"Summarizing","text":"addition, data can account type contamination. key word “CRAP” use data partition Keratin, BSA, Trypsin , long protein descriptions contain CRAP presumably originate CRAPome. However, FASTA file, used data translation step (eg ProteomeDiscoverer), manipulated contain CRAP description can utilized. Alternatively, protein descriptor can also use … … .","code":"hela_proteins %>% summary(contamination = 'CRAP') #>  #> ── Summary: contamination ── #>  #>     sample replicate native   BSA Keratin    Other Trypsin sample_id #>    control         1  92.7% 3.66%   3.56%  0.0023%    0.1%  e9b20ea7 #>    control         2    92% 4.02%   3.89% 0.00205%  0.123%  ef79cc4c #>    control         3    92% 4.01%    3.9% 0.00208%  0.113%  eebba67b #>  knockdown         1    92% 4.01%   3.88% 0.00183%  0.125%  ebf4b0fe #>  knockdown         2  92.7% 3.66%   3.59%  0.0023% 0.0648%  ea36dac9 #>  knockdown         3  92.2% 3.89%   3.82% 0.00232% 0.0679%  ecfd1822 #>                 import_file sample_file #>  p97KD_HCT116_proteins.xlsx          f1 #>  p97KD_HCT116_proteins.xlsx          f4 #>  p97KD_HCT116_proteins.xlsx          f5 #>  p97KD_HCT116_proteins.xlsx          f2 #>  p97KD_HCT116_proteins.xlsx          f3 #>  p97KD_HCT116_proteins.xlsx          f6 #> hela_proteins %>% summary(contamination = 'Trypsin') #>  #> ── Summary: contamination ── #>  #>     sample replicate native Trypsin sample_id                import_file #>    control         1  99.9%  0.104%  e9b20ea7 p97KD_HCT116_proteins.xlsx #>    control         2  99.9%  0.128%  ef79cc4c p97KD_HCT116_proteins.xlsx #>    control         3  99.9%  0.117%  eebba67b p97KD_HCT116_proteins.xlsx #>  knockdown         1  99.9%   0.13%  ebf4b0fe p97KD_HCT116_proteins.xlsx #>  knockdown         2  99.9% 0.0672%  ea36dac9 p97KD_HCT116_proteins.xlsx #>  knockdown         3  99.9% 0.0707%  ecfd1822 p97KD_HCT116_proteins.xlsx #>  sample_file #>           f1 #>           f4 #>           f5 #>           f2 #>           f3 #>           f6 #> hela_proteins %>% summary(contamination = 'ribosome') #>  #> ── Summary: contamination ── #>  #>     sample replicate native ribosome sample_id                import_file #>    control         1  99.8%   0.155%  e9b20ea7 p97KD_HCT116_proteins.xlsx #>    control         2  99.8%    0.15%  ef79cc4c p97KD_HCT116_proteins.xlsx #>    control         3  99.8%   0.156%  eebba67b p97KD_HCT116_proteins.xlsx #>  knockdown         1  99.8%   0.171%  ebf4b0fe p97KD_HCT116_proteins.xlsx #>  knockdown         2  99.8%   0.166%  ea36dac9 p97KD_HCT116_proteins.xlsx #>  knockdown         3  99.8%   0.164%  ecfd1822 p97KD_HCT116_proteins.xlsx #>  sample_file #>           f1 #>           f4 #>           f5 #>           f2 #>           f3 #>           f6 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/summarizing.html","id":"visualizing","dir":"Articles","previous_headings":"","what":"Visualizing","title":"Summarizing","text":"Currently two summary visualizations implemented tidyproteomics.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/summarizing.html","id":"counts","dir":"Articles","previous_headings":"Visualizing","what":"Counts","title":"Summarizing","text":"simple grouped barchart, proteins (individual, groups) well peptides (, unique) displayed match--runs shown margin ms2 evidenced identifications.","code":"hela_proteins %>% plot_counts()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/summarizing.html","id":"quantitation","dir":"Articles","previous_headings":"Visualizing","what":"Quantitation","title":"Summarizing","text":"recent literature summary protein quantitation visualized rank-based dot-plot.  Additionally, plot can extended highlight statistical differences via unbiased -pair-wise comparison, give anticipated view guide downstream analyses.  Filter limit range c(low, high) display protein ids.","code":"hela_proteins %>% plot_quantrank() hela_proteins %>% plot_quantrank(display_filter = 'log2_foldchange', display_cutoff = 2) #> Warning: ggrepel: 30 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps hela_proteins %>% plot_quantrank(show_rank_scale = TRUE, limit_rank = c(1,25))"},{"path":[]},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.5.x","what":"1.5.3 - 2023.07.30","title":"Update History","text":"added theme color support plotting 16+ sample groups","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-1","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.5.x","what":"1.5.2 - 2023.06.29","title":"Update History","text":"bug fix limma expression differences (name ordering effecting data 3+ sample groups)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-2","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.5.x","what":"1.5.1 - 2023.06.09","title":"Update History","text":"updated plot_counts(), added show_replicates = T/F","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-3","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.5.x","what":"1.5.0 - 2023.05.23","title":"Update History","text":"refactored impute() allow user defined matrix based functions refactored reassign() use expressive comparisons added export_compexp() export data two-expression plot updated plot_variation_cv() better label y-axis modified summary() peptides using simpler accounting bugfix import() allowing > 0 annotation columns bugfix summary() table merging bugfix annotate() leftover dplyr groups","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-4","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.4.x","what":"1.4.2 - 2023.04.03","title":"Update History","text":"updated color theme maximize contrasts order updated plot_quantrank() fade background points using display_subset","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-5","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.4.x","what":"1.4.1 - 2023.03.28","title":"Update History","text":"migrated dplyr deprecated across() group_by_at() minor bugfix accounting non-protein based values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-6","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.4.x","what":"1.4.0 - 2023.03.27","title":"Update History","text":"added S3Method .data.frame()","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-7","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.3.x","what":"1.3.1 - 2023.03.20","title":"Update History","text":"minor code updates improve conciseness added display_subset plot_quantrank() highlight user selected proteins/peptides amoung whole dynamic range","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-8","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.3.x","what":"1.3.0 - 2023.03.13","title":"Update History","text":"addressed multiple charge precursor peptide quant files added FragPipe available imports exposed adjust.p.value method selection expression() exposed user defined import option fixed labeling error plot_pca() modified method pivoting columns--rows import files","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-9","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.2.x","what":"1.2.6 - 2023.03.01","title":"Update History","text":"added clarity around normalize(), impute(), collapse() implemented parallel processing ‘randomforest’ ‘svm’ normalize() added vignette protein inferencing using collapse() fixed bug peptide importing removed homologous peptide accounting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-10","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.2.x","what":"1.2.5 - 2023.02.13","title":"Update History","text":"fixed issue MBR accounting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-11","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.2.x","what":"1.2.4 - 2023.02.03","title":"Update History","text":"added support mzTab v1.0.0, exporting table counts analysis","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-12","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.1.x","what":"1.1.2 - 2023.01.23","title":"Update History","text":"refactored import function allow wide long format data configuration file, eliminating hard coded import functions ProteomeDiscoverer MaxQuant","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-13","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.0.x","what":"1.0.4 - 2022.11.28","title":"Update History","text":"modified %!like% conventional !x %like% y added rm.mbr() function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-14","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: 1.0.x","what":"1.0.2 - 2022.11.28","title":"Update History","text":"implemented S3 object tidyproteomics data object refactored functions accout new data object fixed minor issues exporting data plots updated added vignettes","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-15","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.7.3 - 2022.11.15","title":"Update History","text":"modified expression() accurately account imputation ratio","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-16","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.7.2 - 2022.11.03","title":"Update History","text":"refactored plotting utilize generalized save function facilitate pipelining modified subset behave like tidyverse function also introducing operators like !like subset data based string matching comparison updated functions normalize(), plot_counts() summary() utilize subset()","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-17","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.7.1 - 2022.10.28","title":"Update History","text":"refactored import() allow user based configurations refactored subset(), eliminating remove(), account value comparison pattern matching refactored reassign(), modify(), improve sample renaming","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-18","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.7.0 - 2022.10.15","title":"Update History","text":"added plot_quantrank() fixed issue ProteomeDiscoverer importing TMT data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-19","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.6.0 - 2022.09.29","title":"Update History","text":"minor bug fixes refactored rollup() collapse() defined meld() codify() create uniformity data import segmentation","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-20","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.5.0 - 2022.09.23","title":"Update History","text":"created remove() migrated subset(match_between_runs = FALSE) improved protein accounting import() rollup() include protein group accounting added plot_counts() added import(‘Skyline’, ‘peptides’), Skyline can handel DDA, PRM via MSAmanda DIA vi DIA-Umpire added import(‘DIA-NN’, ‘peptides’), DIA-NN can handel DIA","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-21","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.4.2 - 2022.09.19","title":"Update History","text":"fixed issue “memory” subset(match_between_runs = FALSE) fixed x-axis ordering bug plot_variation() fixed minor bug importing ProteomeDiscoverer peptide data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-22","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.4.1 - 2022.09.13","title":"Update History","text":"fixed minor bug importing MaxQuant data (empty data object) fixed minor bug plot_protein() fixed bug annotations() fixed bug impute() randomforest fixed bug expression() limma","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-23","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.4.0 - 2022.09.08","title":"Update History","text":"added import() MaxQuant peptides (evidence.txt) added import() MaxQuant proteins (proteinGroups.txt) updated import() ProteomeDiscoverer (better configs)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-24","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.3.0","title":"Update History","text":"added protein rollup() function, integrated rfasta","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-25","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.2.0","title":"Update History","text":"updated impute() accounting added plot_enrichment() added history data transformations via operations()","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/updates.html","id":"section-26","dir":"Articles","previous_headings":"A condensed accounting of updates, semantic versioning. > Version: beta","what":"0.1.0","title":"Update History","text":"initial cohesion loose collection functions R package","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"pre-normalization","dir":"Articles","previous_headings":"","what":"Pre Normalization","title":"Visualizing","text":"Critical processing pipeline ability summarize visualize data, pre post processing. Tidyproteomics covers well summary() function several plot_() functions. summary function (described detail vignette(\"summarizing\")) utilizes syntax inherent subset() generate summary statistics variable set, including annotated accounting terms.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"post-normalization","dir":"Articles","previous_headings":"","what":"Post Normalization","title":"Visualizing","text":"Visualizing data post processing important aspect data analysis great care taken explore data post normalization variety plot functions. intended display graphs lend insights quantitative dynamic ranges pre post normalizations plot_normalization(), sample specific CVs, dynamic grange plot_variation_cv() principal component variation plot_variation_pca() normalization.","code":"library(\"dplyr\") library(\"tidyproteomics\")  rdata <- hela_proteins %>% normalize(.method = c(\"scaled\", \"median\", \"linear\", \"loess\", \"randomforest\"))  rdata %>% plot_normalization() #> Warning: Removed 73038 rows containing non-finite values #> (`stat_boxplot()`)."},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"coefficient-of-variation-and-dynamic-range","dir":"Articles","previous_headings":"Variation","what":"Coefficient of Variation and Dynamic Range","title":"Visualizing","text":"statistical assessment often referred CVs (Coefficient Variation) RSD (Relative Standard Deviation) attempts measure dispersion measurement. CVs proteomics plural often measure hundreds thousands proteins simultaneously. Understanding variability effects normalization help improve accuracy experiments.","code":"rdata %>% plot_variation_cv() #> TableGrob (2 x 2) \"arrange\": 3 grobs #>   z     cells    name                grob #> 1 1 (2-2,1-1) arrange      gtable[layout] #> 2 2 (2-2,2-2) arrange      gtable[layout] #> 3 3 (1-1,1-2) arrange text[GRID.text.754]"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"principal-component-analysis","dir":"Articles","previous_headings":"Variation","what":"Principal Component Analysis","title":"Visualizing","text":"plot accumulative variation explained principal components. Ideally, normalization show improve first principal components, removing measurement instrument variability, exposing underlying biological variability. plot show help visuallize .","code":"rdata %>% plot_variation_pca()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"dynamic-range","dir":"Articles","previous_headings":"Variation","what":"Dynamic Range","title":"Visualizing","text":"Perhaps intriguing plot plot_dynamic_range() shows density heat map sample specific CVs relation quantitative abundance. plot highlights CVs increase lower quantitative range , importantly, normalization method can address large variances. , note random forest normalization best able minimize CVs lower quantitative range.","code":"rdata %>% plot_dynamic_range()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"Visualizing","text":"normalization imputation methods implemented selected often desired visualize unbiased clustering samples. can accomplished plot_heatmap() plot_pca() functions generate plots.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"heatmap","dir":"Articles","previous_headings":"Clustering","what":"Heatmap","title":"Visualizing","text":"","code":"rdata %>% plot_heatmap()"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/visualizing.html","id":"pca","dir":"Articles","previous_headings":"Clustering","what":"PCA","title":"Visualizing","text":"Plot alternative variables, case 3rd 4th prinicpal components.","code":"rdata %>% plot_pca() rdata %>% plot_pca(variables = c('PC3', 'PC4'))"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-importing.html","id":"proteomediscoverer","dir":"Articles","previous_headings":"","what":"ProteomeDiscoverer","title":"Importing Demo","text":"Exporting data requires setup correct columns. explained vignette(\"importing\").","code":"library(tidyverse) library(tidyproteomics)  # download the data url <- \"https://data.caltech.edu/records/aevwq-2ps50/files/ProteomeDiscoverer_2.5_p97KD_HCT116_proteins.xlsx?download=1\" download.file(url, destfile = \"./data/pd_proteins.xlsx\")  # import the data data_prot <- \"./data/pd_proteins.xlsx\" %>% import('ProteomeDiscoverer', 'proteins') #> Origin          ProteomeDiscoverer  #>                 proteins (10.67 MB)  #> Composition     6 files  #>                 2 samples (ctl, p97_kd)  #> Quantitation    7055 proteins  #>                 4 log10 dynamic range  #>                 28.8% missing values  #>  *imputed         #> Accounting      (4) num_peptides num_psms num_unique_peptides imputed  #> Annotations     (9) description biological_process cellular_component molecular_function #>                 gene_id_entrez gene_name wiki_pathway reactome_pathway #>                 gene_id_ensemble  #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-importing.html","id":"maxquant","dir":"Articles","previous_headings":"","what":"MaxQuant","title":"Importing Demo","text":"Exporting data requires setup correct columns. explained vignette(\"importing\").","code":"library(tidyverse) library(tidyproteomics)  # download the data url <- \"https://data.caltech.edu/records/aevwq-2ps50/files/MaxQuant_1.6.10.43_proteinGroups.txt?download=1\" download.file(url, destfile = \"./data/mq_proteinGroups.txt\")  # import the data data_prot <- \"./data/mq_proteinGroups.txt\" %>% import('MaxQuant', 'proteins') #> Origin          MaxQuant  #>                 proteins (4.78 MB)  #> Composition     6 files  #>                 6 samples (ctrl_1, ctrl_2, ctrl_3, p97_kd_1, p97_kd_2, p97_kd_3)  #> Quantitation    6452 proteins  #>                 4.3 log10 dynamic range  #>                 10.4% missing values  #>  *imputed         #> Accounting      (4) num_psms num_peptides num_unique_peptides imputed  #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-importing.html","id":"fragpipe","dir":"Articles","previous_headings":"","what":"FragPipe","title":"Importing Demo","text":"Exporting data requires setup correct columns. explained vignette(\"importing\").","code":"library(tidyverse) library(tidyproteomics)  # download the data url <- \"https://data.caltech.edu/records/aevwq-2ps50/files/FragPipe_19.1_combined_protein.tsv?download=1\" download.file(url, destfile = \"./data/fp_combined_protein.tsv\")  # import the data data_prot <- \"./data/fp_combined_protein.tsv\" %>% import('FragPipe', 'proteins') #> Origin          FragPipe  #>                 proteins (6.33 MB)  #> Composition     6 files  #>                 2 samples (control, knockdown)  #> Quantitation    6670 proteins  #>                 3 log10 dynamic range  #>                 27.3% missing values  #>  *imputed         #> Accounting      (3) num_psms num_psms_unique imputed  #> Annotations     (2) gene_name description  #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"Pubication Demo","text":"","code":"rdata <- hela_proteins"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"summary-plots","dir":"Articles","previous_headings":"","what":"Summary Plots","title":"Pubication Demo","text":"","code":"rdata <- rdata %>%   # plot some simple summary stats   plot_counts(destination = \"png\") %>%   plot_quantrank(destination = \"png\") %>%   plot_venn(destination = \"png\") %>%   plot_euler(destination = \"png\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"summary-stats","dir":"Articles","previous_headings":"","what":"Summary Stats","title":"Pubication Demo","text":"","code":"rdata <- rdata %>%   # save a table of simple summary stats   summary(\"sample\", destination = \"save\") %>%   # save a report on contamination   summary(contamination = \"CRAP\", destination = \"save\") %>%   # remove contamination   subset(!description %like% \"^CRAP\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"normalization-and-imputation","dir":"Articles","previous_headings":"","what":"Normalization and Imputation","title":"Pubication Demo","text":"","code":"rdata <- rdata %>%   # normalize via several methods, best method will be automatically selected   normalize(c(\"median\",\"linear\",\"limma\",\"randomforest\")) %>%   # impute with a minimum value (this is a knock-out)   impute(base::min)   # plot visualizations comparing normalization methods   plot_normalization(destination = \"png\") %>%   plot_variation_cv(destination = \"png\") %>%    plot_variation_pca(destination = \"png\") %>%   plot_dynamic_range(destination = \"png\") %>%   # plot visualizations of unbiased clustering   plot_heatmap(destination = \"png\") %>%   plot_pca(destination = \"png\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"expression-analysis","dir":"Articles","previous_headings":"","what":"Expression Analysis","title":"Pubication Demo","text":"","code":"rdata <- rdata %>%   # calculate the expression between experiment: ko and control: wt   expression(kndw/ctrl) %>%   # plot the expression analysis   plot_volcano(kndw/ctrl, destination = \"png\", significance_column = \"p_value\") %>%    plot_proportion(kndw/ctrl, destination = \"png\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"enrichment-analysis","dir":"Articles","previous_headings":"","what":"Enrichment Analysis","title":"Pubication Demo","text":"","code":"rdata <- rdata %>%   # calculate the enrichment of the GO term(s) using the results   # from the expression analysis   enrichment(kndw/ctrl, .term = \"biological_process\") %>%   enrichment(kndw/ctrl, .term = \"cellular_component\") %>%   enrichment(kndw/ctrl, .term = \"molecular_function\") %>%   # plot the enrichment analysis   plot_enrichment(kndw/ctrl, .term = \"biological_process\", destination = \"png\") %>%   plot_enrichment(kndw/ctrl, .term = \"cellular_component\", destination = \"png\") %>%   plot_enrichment(kndw/ctrl, .term = \"molecular_function\", destination = \"png\")"},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"plot-quantitation-rank-with-log2-cutoff","dir":"Articles","previous_headings":"Advanced","what":"Plot Quantitation-Rank with Log2 Cutoff","title":"Pubication Demo","text":"","code":"# SUPPLEMENTAL FIGURES # plot an alternate quantitative ranking rdata %>%   plot_quantrank(display_filter = \"log2_foldchange\",                  display_cutoff = 5) ggsave(\"plot_proteins_quantitation_rank_filtered.png\",        width = 6, h = 4)"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-publication.html","id":"plot-comparison-of-two-expressions","dir":"Articles","previous_headings":"Advanced","what":"Plot Comparison of Two Expressions","title":"Pubication Demo","text":"","code":"# import the data again to now avoid imputation rdata <- path_to_package_data(\"p97KD_HCT116\") %>%   # import the data set   import('ProteomeDiscoverer', 'proteins') %>%   # change the labels on the samples containing 'ko'   reassign(\"sample\", \"ctl\", \"ctrl\") %>%   reassign(\"sample\", \"p97\", \"kndw\")  # run a an expression analysis using a t.test statistical comparison tbl_expression_ttest <- rdata %>%   expression(kndw/ctrl, .method = stats::t.test) %>%   # export the results table to the assigned object   export_analysis(kndw/ctrl, .analysis = \"expression\")  # run a an expression analysis using the limma statistical method tbl_expression_limma <- rdata %>%   expression(kndw/ctrl, .method = \"limma\") %>%   # export the results table to the assigned object   export_analysis(kndw/ctrl, .analysis = \"expression\")  # plot the two expression tables two compare similarities between methods plot_compexp(tbl_expression_ttest,              tbl_expression_limma,              labels_column = \"gene_name\",              log2fc_min = 1, significance_column = \"p_value\") +   ggplot2::labs(x = \"(log2 FC) Wilcoxon Rank Sum\",                 y = \"(log2 FC) Emperical Bayes (limma)\",                 title = \"Hela p97 KD ~ Ctrl\")  ggsave(\"plot_enrichment_comparison.png\",        width = 6, h = 4)"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-simple.html","id":"importing-data","dir":"Articles","previous_headings":"","what":"Importing Data","title":"Import and Summarize","text":"","code":"# path_to_package_data() loads data specific to this package # for your project load local data # example:  # your_proteins <- \"./data/your_exported_results.xlsx\" %>% #   import(\"ProteomeDiscoverer\", \"proteins\")  hela_proteins <- path_to_package_data(\"p97KD_HCT116\") %>%   import(\"ProteomeDiscoverer\", \"proteins\") %>%   # change the sample labels   reassign('sample', 'ctl', 'control') %>%   reassign('sample', 'p97', 'knockdown')"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-simple.html","id":"print-data-contents","dir":"Articles","previous_headings":"Importing Data","what":"Print Data Contents","title":"Import and Summarize","text":"Printing imported data object, simply exposing object show summary data object contents operations performed data, contents summarized","code":"hela_proteins #>  #> ── Quantitative Proteomics Data Object ── #>  #> Origin          ProteomeDiscoverer  #>                 proteins (10.76 MB)  #> Composition     6 files  #>                 2 samples (control, knockdown)  #> Quantitation    7055 proteins  #>                 4 log10 dynamic range  #>                 28.8% missing values  #> Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name biological_process #>                 cellular_component molecular_function wiki_pathway #>                 reactome_pathway  #> hela_proteins %>%   expression(knockdown/control) %>%   enrichment(knockdown/control, .term = 'biological_process') %>%   enrichment(knockdown/control, .term = 'molecular_function') #> ── Quantitative Proteomics Data Object ── #>  #> Origin          ProteomeDiscoverer  #>                 proteins (11.37 MB)  #> Composition     6 files  #>                 2 samples (control, knockdown)  #> Quantitation    7055 proteins  #>                 4 log10 dynamic range  #>                 28.8% missing values  #> Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name biological_process #>                 cellular_component molecular_function wiki_pathway #>                 reactome_pathway  #> Analyses        (1)  #>                 knockdown/control -> expression & enrichment (biological_process, molecular_function)  #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-simple.html","id":"summarize-quantitative-data","dir":"Articles","previous_headings":"Importing Data","what":"Summarize Quantitative Data","title":"Import and Summarize","text":"Use explicit summary() function summarize data, case globally. summary unique sample names summary includes contamination description contains ‘CRAP’, crap-ome summary contamination specify description contains ‘ribosome’ summary based term set provided annotations","code":"hela_proteins %>% summary() #> ── Summary: global ── #>  #>  proteins peptides peptides_unique quantifiable  CVs #>      7055    66329           58706        0.908 0.25 #> hela_proteins %>% summary(by = 'sample')  #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 #> hela_proteins %>% summary(contamination = 'CRAP')  #> Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. #> ℹ Please explicitly name `id_cols`, like `id_cols = identifier`. #> ℹ The deprecated feature was likely used in the tidyproteomics package. #>   Please report the issue to the authors. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #>  #> ── Summary: contamination ── #>  #>     sample replicate native   BSA Keratin    Other Trypsin sample_id #>    control         1  92.7% 3.66%   3.56%  0.0023%    0.1%  e9b20ea7 #>    control         2    92% 4.02%   3.89% 0.00205%  0.123%  ef79cc4c #>    control         3    92% 4.01%    3.9% 0.00208%  0.113%  eebba67b #>  knockdown         1    92% 4.01%   3.88% 0.00183%  0.125%  ebf4b0fe #>  knockdown         2  92.7% 3.66%   3.59%  0.0023% 0.0648%  ea36dac9 #>  knockdown         3  92.2% 3.89%   3.82% 0.00232% 0.0679%  ecfd1822 #>                 import_file sample_file #>  p97KD_HCT116_proteins.xlsx          f1 #>  p97KD_HCT116_proteins.xlsx          f4 #>  p97KD_HCT116_proteins.xlsx          f5 #>  p97KD_HCT116_proteins.xlsx          f2 #>  p97KD_HCT116_proteins.xlsx          f3 #>  p97KD_HCT116_proteins.xlsx          f6 #> hela_proteins %>% summary(contamination = \"ribosome\")  #>  #> ── Summary: contamination ── #>  #>     sample replicate native ribosome sample_id                import_file #>    control         1  99.8%   0.155%  e9b20ea7 p97KD_HCT116_proteins.xlsx #>    control         2  99.8%    0.15%  ef79cc4c p97KD_HCT116_proteins.xlsx #>    control         3  99.8%   0.156%  eebba67b p97KD_HCT116_proteins.xlsx #>  knockdown         1  99.8%   0.171%  ebf4b0fe p97KD_HCT116_proteins.xlsx #>  knockdown         2  99.8%   0.166%  ea36dac9 p97KD_HCT116_proteins.xlsx #>  knockdown         3  99.8%   0.164%  ecfd1822 p97KD_HCT116_proteins.xlsx #>  sample_file #>           f1 #>           f4 #>           f5 #>           f2 #>           f3 #>           f6 #> hela_proteins %>% summary('biological_process') #>  #> ── Summary: biological_process ── #>  #>                biological_process proteins peptides peptides_unique #>                cell communication        9      100              93 #>                        cell death        1        3               1 #>              cell differentiation        3        9               9 #>                       cell growth      104     1419             839 #>  cell organization and biogenesis       17      241             241 #>                cell proliferation     7055    66329           58706 #>       cellular component movement        6       13              11 #>              cellular homeostasis      324     2854            2631 #>                       coagulation        9       68              58 #>                       conjugation      181     1460            1240 #>                  defense response       15       83              76 #>                       development       38      180             164 #>                 metabolic process      342     2804            2422 #>  quantifiable   CVs #>         0.920 0.200 #>         1.000 0.340 #>         0.389 0.305 #>         0.803 0.280 #>         0.967 0.210 #>         0.908 0.250 #>         0.679 0.410 #>         0.938 0.260 #>         0.885 0.220 #>         0.893 0.260 #>         0.709 0.275 #>         0.730 0.245 #>         0.886 0.250 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-userimport.html","id":"an-unknown-dataset","dir":"Articles","previous_headings":"","what":"An Unknown Dataset","title":"User Defined Import","text":"using data PRIDE archive PXD004163, fortunately decently preserved data file TMT experiment. Reading Data Processing Protocol find -standardized analysis pipeline raw files converted mzML format, searched using MSGF+ Percolator, quantified using OpenMS project’s IsobaricAnalyzer. PSMs found 1% FDR used infer gene identities quantify using PSM quantification ratios. NOTE: indepth analysis data provided online DEqMS documentation. discussion simply import data derived method described vignette(\"importing\"). downloading find following (transposed readability): `vignette(“importing”)` vignette know 4 must columns importing protein quantitative data - sample: sample, sample: sample_file, identifier: protein, quantitative: abundance_raw. looking file can assume: identifier: protein = Protein accession (col_01) quantitative: abundance_raw = miR FASP_tmt10plex_1xx (cols_ 15, 17, 19, 21, 23, 25, 27, 29, 31, 33) sample: sample = derived pivot quantitative: abundance_raw sample: sample_file = provided, assumed import file name Additionally see accounting annotation data present: accounting: num_psms = miR FASP_# PSMs (col_15) accounting: num_peptides = miR FASP_# Peptides (col_09) accounting: num_unique_peptides = miR FASP_# Unique Peptides (col_08) annotation: description = Description (col_04) annotation: gene_name = Associated gene ID (col_03)","code":"url <- \"https://ftp.ebi.ac.uk/pride-archive/2016/06/PXD004163/Yan_miR_Protein_table.flatprottable.txt\" download.file(url, destfile = \"./miR_Proteintable.tsv\",method = \"auto\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-userimport.html","id":"build-an-import-definition-file","dir":"Articles","previous_headings":"","what":"Build an Import Definition File","title":"User Defined Import","text":"need construct import definition file, objective pulling needed data, changing column names standard tidyproteomic’s definitions, pivot table one row accounts one quantitative measure. definitions shown `vignette(“importing”)` vignette, structured following columns: category - defines 4 SQL-like tables data object information belongs. column_defined - defines SQL-like column name, using snake_case style convention. column_import - regular expression defined pattern recognizing 1 columns. useful “sample/run” defined column exact number columns defined importing. pattern_extract - regular expression pattern pull data needed, extracting just protein accession number longer text. pattern_remove - regular expression pattern automatically filter results, REV_* protein accession indicating decoy. pattern_split - string value split , example multiple proteins listed separated ;. pivot - TRUE indicator column pivot, quant columns identified .","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-userimport.html","id":"definition-file","dir":"Articles","previous_headings":"Build an Import Definition File","what":"Definition File","title":"User Defined Import","text":"final defnintion file, saved tab-seperated-value (.tsv) file project directory, named TMTOpenMS_proteins.csv.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/articles/workflow-userimport.html","id":"importing-data","dir":"Articles","previous_headings":"","what":"Importing Data","title":"User Defined Import","text":"Printing data object can see 10 samples TMT_10plex. need reassign raw TMT labels sample designations filter data. Note log10 dynamic range 0.39, typically TMT around 3, LFQ can anywhere 4 8. plot quantitative rank quantitative value also looks atypical – manuscript states: Peptide spectrum matches found 1% false discovery rate used infer gene identities, quantified using medians peptide spectrum matches quantification ratios.  TMT labeling assignments provided literature, can found DEqMS tutorial:  Note DEqMS “.. takes account inherent dependence protein variance number PSMs peptides used quantification, thereby providing accurate variance estimation.” PSM count need integrated analysis, following protocol outlined documentation. purpose vignette replicate DEqMS method, rather demonstrate one build import definition file utilize tidyproteomics.","code":"library(dplyr) library(tidyproteomics)  data_prot <- \"miR_Proteintable.tsv\" %>% import('PXD004163', 'proteins', path = \"TMTOpenMS_proteins.tsv\") ℹ Importing PXD004163: ℹ ... split protein with \\; not detected ℹ ... no homology detected          ℹ ... match between runs not found in data ✔ ... parsing miR_Proteintable.tsv [2.1s] ✔ ... tidying the data and finishing up [1.8s] data_prot #>  #> ── Quantitative Proteomics Data Object ── #>  #> Origin          PXD004163  #>                 proteins (15.55 MB)  #> Composition     10 files  #>                 10 samples (s126, s127n, s127c, s128n, s128c, s129n, s129c, s130n, s130c, s131)  #> Quantitation    9638 proteins  #>                 0.48 log10 dynamic range  #>                 0.687% missing values  #>  *imputed         #> Accounting      (6) num_unique_peptides num_peptides num_psms protein_qvalue protein_error_prob #>                 imputed  #> Annotations     (2) gene_name description  #> data_prot %>% plot_quantrank() data_prot <- data_prot %>%   subset(protein_qvalue < 0.01) %>%   reassign(sample == 's126', .replace = 'ctrl') %>%   reassign(sample == 's127n', .replace = 'miR191') %>%   reassign(sample == 's127c', .replace = 'miR372') %>%   reassign(sample == 's128n', .replace = 'miR519') %>%   reassign(sample == 's128c', .replace = 'ctrl') %>%   reassign(sample == 's129n', .replace = 'miR372') %>%   reassign(sample == 's129c', .replace = 'miR519') %>%   reassign(sample == 's130n', .replace = 'ctrl') %>%   reassign(sample == 's130c', .replace = 'miR191') %>%   reassign(sample == 's131', .replace = 'miR372') #>  #> ℹ Subsetting data: protein_qvalue < 0.01 #> ✔ Subsetting data: protein_qvalue < 0.01 ... done #>  #> ℹ Reassigning 1 #> ℹ Reassigning 2 #> ℹ Reassigning 3 #> ℹ Reassigning 4 #> ℹ Reassigning 5 #> ℹ Reassigning 6 #> ℹ Reassigning 7 #> ℹ Reassigning 8 #> ℹ Reassigning 9 #> ℹ Reassigning 10  data_prot #>  #> ── Quantitative Proteomics Data Object ── #>  #> Origin          PXD004163  #>                 proteins (14.40 MB)  #> Composition     10 files  #>                 4 samples (ctrl, miR191, miR372, miR519)  #> Quantitation    8742 proteins  #>                 0.39 log10 dynamic range  #>                 0.216% missing values  #>  *imputed         #> Accounting      (6) num_unique_peptides num_peptides num_psms protein_qvalue protein_error_prob #>                 imputed  #> Annotations     (2) gene_name description  #> data_prot %>% plot_pca()"},{"path":"https://jeffsocal.github.io/tidyproteomics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeff Jones. Author, maintainer.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jones J (2023). tidyproteomics: S3 data object framework common quantitative proteomic analyses. R package version 1.5.3, https://jeffsocal.github.io/tidyproteomics/.","code":"@Manual{,   title = {tidyproteomics: An S3 data object and framework for common quantitative proteomic analyses},   author = {Jeff Jones},   year = {2023},   note = {R package version 1.5.3},   url = {https://jeffsocal.github.io/tidyproteomics/}, }"},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"tidyproteomics-","dir":"","previous_headings":"","what":"An S3 data object and framework for common quantitative proteomic analyses","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"R package tidy-ing, post processing analysis quantitative proteomic data. Proteomics analysis software, available either paid subscription open-source tool, fail output data well conceived tidy format. majority tools generate output formats either mixed wide- long-format data structures, columns headers messy names added symbols, often confusing variable names. leads researchers create one-scripts cleaning importing data various formats, often creating environment unmaintained, bespoke code. package attempts solve problem creating flexible import tool unify multiple formats create new tidy R object proteomics analysis. package supports high level: data importing data filtering data visualization quantitative normalization & imputation two-sample expression & term enrichment analysis protein inference, sequence coverage visualization","code":""},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"publication","dir":"","previous_headings":"Links","what":"Publication","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Jones, J., MacKrell, E.J., Wang, TY. et al. Tidyproteomics: open-source R package data object quantitative proteomics post analysis visualization. BMC Bioinformatics 24, 239 (2023)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"r-package","dir":"","previous_headings":"Links","what":"R Package","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Code: github.com/jeffsocal/tidyproteomics Docs: jeffsocal.github.io/tidyproteomics/","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"rshiny-app","dir":"","previous_headings":"Links","what":"RShiny App","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Code: github.com/ejmackrell/tidyproteomics-interactive Web : bioinformatics.pel.caltech.edu/tidyproteomics/","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"data-support","dir":"","previous_headings":"","what":"Data Support","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Importing currently implemented platforms assume peptide level FDR (user’s desired level) already accounted . See vignette(\"importing\"). Importing flexible enough accept data platforms flat files (.csv, .tsv, .xlsx) custom configuration.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"ease-of-use","dir":"","previous_headings":"","what":"Ease of Use","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"package supports syntactic sugar utilized tidy-verse functions like filter, introduces %like% operator, see vignette(\"subsetting\") . operations can extend aspects data set, including sample names, protein IDs, annotations accountings like match_between_runs num_peptides. Expression analysis also utilizes type syntax referencing samples analysis. example data %>% expression(knockdown/control) know run differential expression sample ko respect sample wt positive log2 difference -expressed ko negative log2 differences -expressed ko.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"nomenclature","dir":"","previous_headings":"","what":"Nomenclature","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"tidyprotoemics package uses conserved naming convention facilitates “contract” funtions operate data, making easier maintain modify code. naming convention ensures functions generic inputs, able operate variety data without explicitly name column variable may named different data sets. effort standardizing variable names tidyproteomics data object done upfront importing data. See vignette(\"importing\"). package divides data tables similar SQL, making easy organize analyze data. table structure offers convenient way explore relationships different variables filter data according specific criteria.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"experimental-table","dir":"","previous_headings":"Nomenclature","what":"Experimental Table","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Example","code":"library(tidyproteomics)  hela_proteins$experiments  # A tibble: 6 × 5   sample_id import_file                sample_file sample    replicate   <chr>     <chr>                      <chr>       <chr>     <chr>     1 e9b20ea7  p97KD_HCT116_proteins.xlsx f1          control   1         2 ef79cc4c  p97KD_HCT116_proteins.xlsx f4          control   2         3 eebba67b  p97KD_HCT116_proteins.xlsx f5          control   3         4 ebf4b0fe  p97KD_HCT116_proteins.xlsx f2          knockdown 1         5 ea36dac9  p97KD_HCT116_proteins.xlsx f3          knockdown 2         6 ecfd1822  p97KD_HCT116_proteins.xlsx f6          knockdown 3"},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"quantitation-table","dir":"","previous_headings":"Nomenclature","what":"Quantitation Table","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Example","code":"library(tidyproteomics)  hela_proteins$quantitation  # A tibble: 42,330 × 5    sample_id sample    replicate protein abundance_raw    <chr>     <chr>     <chr>     <chr>           <dbl>  1 e9b20ea7  control   1         Q15149    1011259992.  2 ef79cc4c  control   2         Q15149    1093277593.  3 eebba67b  control   3         Q15149     980809516.  4 ebf4b0fe  knockdown 1         Q15149    1410445367.  5 ea36dac9  knockdown 2         Q15149    1072305561.  6 ecfd1822  knockdown 3         Q15149    1486561518. # … with 42,324 more rows"},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"annotation-table","dir":"","previous_headings":"Nomenclature","what":"Annotation Table","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"Example","code":"library(tidyproteomics)  print(hela_proteins$annotations)  # A tibble: 63,495 × 3    protein term               annotation                                                                                                              <chr>   <chr>              <chr>                                                                                                                 1 Q15149  description        Plectin OS=Homo sapiens OX=9606 GN=PLEC PE=1 SV=3                                                                     2 Q15149  gene_id_entrez     5339                                                                                                                  3 Q15149  gene_id_ensemble   ENSG00000178209                                                                                                       4 Q15149  gene_name          PLEC                                                                                                                  5 Q15149  biological_process cell differentiation;cell growth;cellular homeostasis;coagulation;defense response;metabolic process # … with 63,490 more rows"},{"path":[]},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"install, open R type: also need Bioconductor packages limma, qvalue, fgsea, install type: NOTE: several packages required prompted automatically downloaded CRAN installing. Depending current system packages require installation OS level libraries advanced math string manipulation.","code":"install.packages(\"devtools\") devtools::install_github(\"jeffsocal/tidyproteomics\") install.packages(\"BiocManager\") BiocManager::install(c(\"limma\",\"qvalue\",\"fgsea\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"want test features capabilities project get better understanding works, can experiment two datasets included within package. datasets specially selected provide necessary working examples help get started project. first dataset protein-level dataset, second one small peptide-level dataset. datasets easily accessible loading package. can use datasets practice explore different features functionalities package. also used throughout vignettes code documentation provide clear concise examples. Protein level data. Peptide level data.","code":"library(tidyproteomics)  hela_protiens  ── Quantitative Proteomics Data Object ──  Origin          ProteomeDiscoverer                  proteins (10.76 MB)  Composition     6 files                  2 samples (control, knockdown)  Quantitation    7055 proteins                  4 log10 dynamic range                  28.8% missing values  Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name biological_process                 cellular_component molecular_function wiki_pathway                 reactome_pathway library(tidyproteomics)  hela_peptides ── Quantitative Proteomics Data Object ──  Origin          ProteomeDiscoverer                  peptides (188.87 kB)  Composition     6 files                  2 samples (control, knockdown)  Quantitation    8 proteins                  3.3 log10 dynamic range                  21.3% missing values  Accounting      (3) modifications match_between_runs num_psms"},{"path":"https://jeffsocal.github.io/tidyproteomics/index.html","id":"import-your-data","dir":"","previous_headings":"","what":"Import Your Data","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"simple get started. Make new project, drop raw data folder labeled data. information see vignette(\"workflow-simple\")","code":"library(tidyproteomics)  data <- \"./data/some_ProteomeDiscoverer_data.xlsx\" %>%   import(\"ProteomeDiscoverer\", \"proteins\")    data %>% summary(\"samples\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_modification.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a modification to a peptide sequence — align_modification","title":"Align a modification to a peptide sequence — align_modification","text":"Align modification peptide sequence","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_modification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a modification to a peptide sequence — align_modification","text":"","code":"align_modification(peptide = NULL, modification = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_modification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a modification to a peptide sequence — align_modification","text":"peptide character string representing peptide sequence modification character string representing modification location probability","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_modification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a modification to a peptide sequence — align_modification","text":"tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_peptide.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a peptide sequence to a protein sequence — align_peptide","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"Align peptide sequence protein sequence","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_peptide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"","code":"align_peptide(peptide = NULL, protein = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_peptide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"peptide character string representing peptide sequence protein character string representing protein sequence","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/align_peptide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/analysis_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating expression differences between two sample sets via the limma algorithm — analysis_counts","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — analysis_counts","text":"function evaluating expression differences two sample sets via limma algorithm","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/analysis_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — analysis_counts","text":"","code":"analysis_counts(data = NULL, impute_max = 0.5)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/analysis_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — analysis_counts","text":"data tidyproteomics data object impute_max numeric representing largest allowable imputation percentage","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/analysis_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — analysis_counts","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for adding annotations to a tidyproteomics data-object — annotate","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"Main function adding annotations tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"","code":"annotate(   data = NULL,   annotations = NULL,   duplicates = c(\"replace\", \"merge\", \"leave\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"data tidyproteomics data list-object annotations character string vector duplicates character string, handle duplicate terms","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"tidyproteomics data list-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/as.data.frame.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to convert the data-object into a tibble — as.data.frame.tidyproteomics","title":"Helper function to convert the data-object into a tibble — as.data.frame.tidyproteomics","text":".data.frame() function converts tidyproteomics data object tibble. tibble long-format, single observation per line.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/as.data.frame.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to convert the data-object into a tibble — as.data.frame.tidyproteomics","text":"","code":"# S3 method for tidyproteomics as.data.frame(data, shape = c(\"long\", \"wide\"), values = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/as.data.frame.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to convert the data-object into a tibble — as.data.frame.tidyproteomics","text":"data tidyproteomics data object shape orientation quantitative data either single measure per row (long), multiple measures per protein/peptide (wide). values indicates selected normalization output. default selected time normalization.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/as.data.frame.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to convert the data-object into a tibble — as.data.frame.tidyproteomics","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/as.data.frame.tidyproteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to convert the data-object into a tibble — as.data.frame.tidyproteomics","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # convert the data-object to a data.frame hela_proteins %>% as.data.frame() %>% as_tibble() #> # A tibble: 42,330 × 20 #>    sample_id sample_file sample  replicate protein    abundance_raw description  #>    <chr>     <chr>       <chr>   <chr>     <chr>              <dbl> <chr>        #>  1 e9b20ea7  f1          control 1         Q15149       1011259992. Plectin OS=… #>  2 e9b20ea7  f1          control 1         Q09666        659299359. Neuroblast … #>  3 e9b20ea7  f1          control 1         H0YDN1           239911. Plectin OS=… #>  4 e9b20ea7  f1          control 1         Q14204        385570969  Cytoplasmic… #>  5 e9b20ea7  f1          control 1         P49327       1441909420. Fatty acid … #>  6 e9b20ea7  f1          control 1         P78527        622951615. DNA-depende… #>  7 e9b20ea7  f1          control 1         P21333        604798069. Filamin-A O… #>  8 e9b20ea7  f1          control 1         P35579       1070673931. Myosin-9 OS… #>  9 e9b20ea7  f1          control 1         O75369        325748424. Filamin-B O… #> 10 e9b20ea7  f1          control 1         A0A0D9SGF6    196230866. Spectrin al… #> # ℹ 42,320 more rows #> # ℹ 13 more variables: gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>, #> #   protein_group <chr>, match_between_runs <lgl>, num_peptides <dbl>, #> #   num_unique_peptides <dbl>, num_psms <dbl>  # select the wide format hela_proteins %>% as.data.frame(shape = 'wide') %>% as_tibble() #> # A tibble: 9,434 × 21 #>    protein    description              gene_id_entrez gene_id_ensemble gene_name #>    <chr>      <chr>                    <chr>          <chr>            <chr>     #>  1 Q15149     Plectin OS=Homo sapiens… 5339           ENSG00000178209  PLEC      #>  2 Q09666     Neuroblast differentiat… 79026          ENSG00000124942  AHNAK     #>  3 H0YDN1     Plectin OS=Homo sapiens… NA             ENSG00000178209  PLEC      #>  4 Q14204     Cytoplasmic dynein 1 he… 1778           ENSG00000197102  DYNC1H1   #>  5 P49327     Fatty acid synthase OS=… 2194           ENSG00000169710  FASN      #>  6 P78527     DNA-dependent protein k… 5591           ENSG00000253729  PRKDC     #>  7 P21333     Filamin-A OS=Homo sapie… 2316           ENSG00000196924  FLNA      #>  8 P35579     Myosin-9 OS=Homo sapien… 4627           ENSG00000100345  MYH9      #>  9 O75369     Filamin-B OS=Homo sapie… 2317           ENSG00000136068  FLNB      #> 10 A0A0D9SGF6 Spectrin alpha chain, n… NA             ENSG00000197694  SPTAN1    #> # ℹ 9,424 more rows #> # ℹ 16 more variables: biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>, #> #   protein_group <chr>, match_between_runs <lgl>, num_peptides <dbl>, #> #   num_unique_peptides <dbl>, num_psms <dbl>, control_1_raw <dbl>, #> #   control_2_raw <dbl>, control_3_raw <dbl>, knockdown_1_raw <dbl>, #> #   knockdown_2_raw <dbl>, knockdown_3_raw <dbl>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/center.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing a quantitative table — center","title":"helper function for normalizing a quantitative table — center","text":"helper function normalizing quantitative table","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing a quantitative table — center","text":"","code":"center(   table,   group_by = c(\"identifier\"),   values = \"abundance\",   method = c(\"median\", \"mean\", \"geomean\", \"sum\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing a quantitative table — center","text":"table tibble group_by character vector values character string method character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing a quantitative table — center","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of a tidyproteomics data object — check_data","title":"Check the integrity of a tidyproteomics data object — check_data","text":"check_data() helper function checks structure contents tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of a tidyproteomics data object — check_data","text":"","code":"check_data(data = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of a tidyproteomics data object — check_data","text":"data tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of a tidyproteomics data object — check_data","text":"silent success, abort message fail","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of a tidyproteomics quantitative tibble — check_table","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"check_table() helper function checks structure contents tidyproteomics quantitative tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"","code":"check_table(table = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"table tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/check_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"silent success, abort message fail","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/codify.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a tidyproteomics data object — codify","title":"Build a tidyproteomics data object — codify","text":"data_codify() helper function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/codify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a tidyproteomics data object — codify","text":"","code":"codify(table = NULL, identifier = NULL, annotations = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/codify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a tidyproteomics data object — codify","text":"table tidyproteomics data object identifier character vector annotations character vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/codify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a tidyproteomics data object — codify","text":"tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert peptide quantitative data into protein quantitative data — collapse","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"collapse() produces protein based tidyproteomics data-object peptide based tidyproteomics data-object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"","code":"collapse(   data = NULL,   collapse_to = \"protein\",   assign_by = c(\"all-possible\", \"razor-local\", \"razor-global\", \"non-homologous\"),   top_n = Inf,   split_abundance = FALSE,   fasta_path = NULL,   .verbose = TRUE,   .function = fsum )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"data tidyproteomics data-object collapse_to character string representing final aggregation point. Conventionally protein name id, however, gene_name term exists annotations table data-object, peptides can aggregated . assign_by method combine peptides proteins; -possible allows peptide's quantitative value included assigned proteins, razor-local (razor peptides shared proteins, peptide belong different proteins assigned protein highest likelihood actually present sample, shared peptide can contribute identification score protein group highest probability sample), case assignment goes protein highest probability within sample class, peptides another sample group change protein highest probability accounted scheme. razor-global determines protein highest probability using available peptides data set, non-homologous utilizes abundance values peptides single unique identity. top_n numeric indicate N number peptides summed account protein quantitative value, assumes peptides summed across charge states split_abundance (experimental) boolean indicate abundances razor peptides split according protein prevalence, proportion total abundance proteins share particular peptide. fasta_path supplied, used fill annotation values description, protein_name gene_name .verbose boolean .function assignable protein abundance summary function, fsum, fmean, fgeomean fmedian constructed NAs must removed. default fsum() fsum <- function(x){base::sum(x, na.rm = TRUE)}, x vector peptide abundances assigned protein assign_by method. Note - peptides 0 NA quantitative value still used determine razor assignments, sequence observed, quantitative values just missing.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) # data <- hela_peptides %>% collapse() # data %>% summary(\"sample\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/compute_compexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to analysis between two expression tests — compute_compexp","title":"Helper function to analysis between two expression tests — compute_compexp","text":"Helper function analysis two expression tests","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/compute_compexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to analysis between two expression tests — compute_compexp","text":"","code":"compute_compexp(   table_a = NULL,   table_b = NULL,   log2fc_min = 2,   log2fc_column = \"log2_foldchange\",   significance_max = 0.05,   significance_column = \"adj_p_value\",   labels_column = \"protein\" )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/compute_compexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to analysis between two expression tests — compute_compexp","text":"table_a tibble table_b tibble log2fc_min numeric defining minimum log2 foldchange highlight. log2fc_column character defining column name log2 foldchange values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. labels_column character defining column name column labeling.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/compute_compexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to analysis between two expression tests — compute_compexp","text":"list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/data_import.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — data_import","title":"A helper function for importing peptide table data — data_import","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/data_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — data_import","text":"","code":"data_import(file_names = NULL, platform = NULL, analyte = NULL, path = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/data_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — data_import","text":"file_names character vector file paths platform character string analyte character string path character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/data_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — data_import","text":"tidyproteomics list data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/down_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset a data frame — down_select","title":"Helper function to subset a data frame — down_select","text":"Helper function subset data frame","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/down_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset a data frame — down_select","text":"","code":"down_select(table = NULL, tidyproteomics_quo = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/down_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset a data frame — down_select","text":"table tibble tidyproteomics_quo character vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/down_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset a data frame — down_select","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute protein enrichment — enrichment","title":"Compute protein enrichment — enrichment","text":"enrichment() analysis function computes protein summary statistics given tidyproteomics data object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute protein enrichment — enrichment","text":"","code":"enrichment(data = NULL, ..., .term = NULL, .method = c(\"gsea\", \"wilcoxon\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute protein enrichment — enrichment","text":"data tidyproteomics data object ... two sample comparison e.g. experimental/control .term character string referencing \".term\" annotations table .method character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute protein enrichment — enrichment","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute protein enrichment — enrichment","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # using the default GSEA method hela_proteins %>%    expression(knockdown/control) %>%    enrichment(knockdown/control, .term = \"biological_process\") %>%    export_analysis(knockdown/control, .analysis = \"enrichment\", .term = \"biological_process\") #> # A tibble: 13 × 7 #>    annotation p_value adj_p_value enrichment enrichment_normalized log2err  size #>    <chr>        <dbl>       <dbl>      <dbl>                 <dbl>   <dbl> <int> #>  1 cell prol… 0.00331      0.0430      0.333                 1.24  0.432     279 #>  2 cell diff… 0.108        1           0.286                 1.09  0.131     520 #>  3 cellular … 0.156        1           0.274                 1.06  0.106     954 #>  4 coagulati… 0.579        1           0.256                 0.988 0.0389    889 #>  5 cell comm… 0.658        1           0.263                 0.957 0.0329    145 #>  6 cell death 0.724        1           0.257                 0.937 0.0282    160 #>  7 cellular … 0.783        1           0.248                 0.965 0.0240   2761 #>  8 cell orga… 0.815        1           0.246                 0.954 0.0217   1273 #>  9 defense r… 0.926        1           0.238                 0.915 0.0129    789 #> 10 metabolic… 0.975        1           0.232                 0.905 0.00730  2965 #> 11 developme… 0.990        1           0.221                 0.851 0.00458   801 #> 12 cell grow… 1            1           0.221                 0.857 0        1671 #> 13 conjugati… 1            1           0.205                 0.795 0        1150  # using a Wilcoxon Rank Sum method hela_proteins %>%    expression(knockdown/control) %>%    enrichment(knockdown/control, .term = \"biological_process\", .method = \"wilcoxon\") %>%    export_analysis(knockdown/control, .analysis = \"enrichment\", .term = \"biological_process\") #> # A tibble: 13 × 5 #>    annotation                         p_value adj_p_value enrichment  size #>    <chr>                                <dbl>       <dbl>      <dbl> <int> #>  1 conjugation                      0.0000258    0.000335      1.12   1150 #>  2 cell proliferation               0.000144     0.00173       0.801   279 #>  3 cellular component movement      0.000781     0.00859       0.926   954 #>  4 development                      0.00847      0.0847        1.11    801 #>  5 cell organization and biogenesis 0.0371       0.334         1.05   1273 #>  6 defense response                 0.0531       0.425         1.08    789 #>  7 cell differentiation             0.0832       0.583         0.956   520 #>  8 coagulation                      0.175        1             1.09    889 #>  9 cellular homeostasis             0.311        1             1.00   2761 #> 10 cell growth                      0.332        1             1.06   1671 #> 11 cell communication               0.572        1             1.07    145 #> 12 metabolic process                0.718        1             1.03   2965 #> 13 cell death                       0.922        1             1.05    160"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating term enrichment via GSEA — enrichment_gsea","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"function evaluating term enrichment via GSEA","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"","code":"enrichment_gsea(data_expression = NULL, data = NULL, term_group = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"data_expression tibble two sample expression difference analysis data tidyproteomics data object term_group character string referencing \"term\" annotations table","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_wilcoxon.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"function evaluating term enrichment via Wilcoxon Rank Sum","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_wilcoxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"","code":"enrichment_wilcoxon(   data_expression = NULL,   data = NULL,   term_group = NULL,   ... )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_wilcoxon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"data_expression tibble two sample expression difference analysis data tidyproteomics data object term_group character string referencing \"term\" annotations table ... pass arguments","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/enrichment_wilcoxon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the data experimental set up — experimental","title":"Returns the data experimental set up — experimental","text":"experimental() returns transformative operations performed data.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the data experimental set up — experimental","text":"","code":"experimental(data = NULL, destination = c(\"print\", \"save\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the data experimental set up — experimental","text":"data tidyproteomics data object destination character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the data experimental set up — experimental","text":"character","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the data experimental set up — experimental","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) if (FALSE) { hela_proteins <- path_to_package_data(\"p97KD_HCT116\") %>%    import(\"ProteomeDiscoverer\", \"proteins\") %>%    reassign(sample == \"ctl\", .replace = \"control\") %>%    reassign(sample == \"p97\", .replace = \"knockdown\") %>%    impute() %>%    normalize(.method = c(\"linear\",\"loess\")) } hela_proteins %>% experimental() #>  #> ── Experimental Design ── #>  #>  sample_id                import_file sample_file    sample replicate #>   e9b20ea7 p97KD_HCT116_proteins.xlsx          f1   control         1 #>   ef79cc4c p97KD_HCT116_proteins.xlsx          f4   control         2 #>   eebba67b p97KD_HCT116_proteins.xlsx          f5   control         3 #>   ebf4b0fe p97KD_HCT116_proteins.xlsx          f2 knockdown         1 #>   ea36dac9 p97KD_HCT116_proteins.xlsx          f3 knockdown         2 #>   ecfd1822 p97KD_HCT116_proteins.xlsx          f6 knockdown         3 #>                   #>  measurements:6 samples:2"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for adding sample groups — experimental_groups","title":"Main function for adding sample groups — experimental_groups","text":"Main function adding sample groups","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for adding sample groups — experimental_groups","text":"","code":"experimental_groups(data = NULL, sample_groups = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for adding sample groups — experimental_groups","text":"data tidyproteomics data list-object sample_groups character string vector equal experimental row length","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/experimental_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for adding sample groups — experimental_groups","text":"tidyproteomics data list-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the quantitative data from an tidyproteomics data-object — export_analysis","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"export() returns main quantitative data object tibble identifier designation measured observation.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"","code":"export_analysis(   data = NULL,   ...,   .analysis = NULL,   .term = NULL,   .append = NULL,   .file_name = NULL )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"data tidyproteomics data object ... two sample comparison e.g. experimental/control .analysis character string specific analysis export .term character string term enrichment analysis .append character string term append output .file_name character string file write , format implied string ('.rds', '.xlsx', '.csv', '.tsv')","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    expression(knockdown/control) %>%    export_analysis(knockdown/control,                    .analysis = \"expression\") #> # A tibble: 4,829 × 18 #>    protein imputed     n average_expression proportional_expression foldchange #>    <chr>     <dbl> <int>              <dbl>                   <dbl>      <dbl> #>  1 Q9NXV2    0         6           3103100.              0.0000120       19.6  #>  2 Q8TBM8    0.333     6           3374207.              0.0000131        8.72 #>  3 Q5JUW8    0         6           1745373.              0.00000676       7.98 #>  4 O95833    0.167     6           3424853.              0.0000133        7.13 #>  5 Q9Y385    0         6           1415381.              0.00000549       7.10 #>  6 Q14534    0.333     6           4560342.              0.0000177        7.02 #>  7 O00214    0.333     6           1332337.              0.00000516       6.49 #>  8 Q9Y4C2    0         6           7289389.              0.0000283        5.78 #>  9 Q8WU67    0.333     6            960150.              0.00000372       5.77 #> 10 Q9H6H4    0         6           2328479.              0.00000902       5.72 #> # ℹ 4,819 more rows #> # ℹ 12 more variables: log2_foldchange <dbl>, p_value <dbl>, adj_p_value <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>  hela_proteins %>%    export_analysis(.analysis = \"counts\") #> # A tibble: 12 × 8 #>    sample_id sample    replicate proteins peptides peptides_unique quantifiable #>    <chr>     <chr>     <chr>        <int>    <dbl>           <dbl>        <dbl> #>  1 e9b20ea7  control   1             5702    62778           56459      0.00939 #>  2 ea36dac9  knockdown 2             5786    63361           56797      0.00939 #>  3 ebf4b0fe  knockdown 1             5825    63349           56846      0.00937 #>  4 ecfd1822  knockdown 3             5817    63247           56812      0.00936 #>  5 eebba67b  control   3             5729    62926           56523      0.00942 #>  6 ef79cc4c  control   2             5764    62907           56550      0.00939 #>  7 e9b20ea7  control   1             7055    66329           58706      0.00907 #>  8 ea36dac9  knockdown 2             7055    66329           58706      0.0091  #>  9 ebf4b0fe  knockdown 1             7055    66329           58706      0.00909 #> 10 ecfd1822  knockdown 3             7055    66329           58706      0.00907 #> 11 eebba67b  control   3             7055    66329           58706      0.0091  #> 12 ef79cc4c  control   2             7055    66329           58706      0.00907 #> # ℹ 1 more variable: is_mbr <lgl>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_compexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparative analysis between two expression tests — export_compexp","title":"Comparative analysis between two expression tests — export_compexp","text":"export_compexp() returns table comparison expression differences two methods two sets groups. example, one run expression difference two different conditions (B) prodived experiment contained 3 samples condition , condition B WT, compare results. proteins showing intersection indicate common targets condition B.","code":"expdiff_a <- protein_data %>%    expression(experiment = \"condition_a\", control = \"wt\")  expdiff_b <- protein_data %>%    expression(experiment = \"condition_b\", control = \"wt\")  export_compexp(expdiff_a, expdiff_b, export = \"intersect\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_compexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparative analysis between two expression tests — export_compexp","text":"","code":"export_compexp(   table_a = NULL,   table_b = NULL,   log2fc_min = 2,   log2fc_column = \"log2_foldchange\",   significance_max = 0.05,   significance_column = \"adj_p_value\",   labels_column = \"protein\",   export = c(\"all\", \"a_only\", \"b_only\", \"intersect\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_compexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparative analysis between two expression tests — export_compexp","text":"table_a tibble table_b tibble log2fc_min numeric defining minimum log2 foldchange highlight. log2fc_column character defining column name log2 foldchange values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. labels_column character defining column name column labeling. export character string significance data return","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_compexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparative analysis between two expression tests — export_compexp","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the quantitative data from an tidyproteomics data-object — export_quant","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"export_quant() returns main quantitative data object tibble identifier designation measured observation.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"","code":"export_quant(   data = NULL,   file_name = NULL,   raw_data = TRUE,   normalized = FALSE,   scaled = c(\"none\", \"between\", \"proportion\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"data tidyproteomics data object file_name character string vector raw_data boolean normalized boolean scaled boolean","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/export_quant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    normalize(.method = \"loess\") %>%    export_quant(file_name = \"hela_quant_data.xlsx\", normalized = \"loess\") #> ℹ Normalizing quantitative data #> ℹ ... using loess regression #> ✔ ... using loess regression [1.3s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data — expression","title":"Summarize the data — expression","text":"expression() analysis function computes protein summary statistics given tidyproteomics data object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data — expression","text":"","code":"expression(data = NULL, ..., .method = stats::t.test, .p.adjust = \"BH\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data — expression","text":"data tidyproteomics data object ... two sample comparison e.g. experimental/control .method two-distribution test function returning p_value null hypothesis. Example functions include t.test, wilcox.test, stats::ks.test, additionally, string \"limma\" can used select limma package compute empirical Bayesian estimation performs better non-linear distributions uneven replicate balance samples. .p.adjust stats::p.adjust string multiple test correction, default 'BH' (Benjamini & Hochberg, 1995)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data — expression","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data — expression","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # simple t.test expression analysis hela_proteins %>%    expression(knockdown/control) %>%    export_analysis(knockdown/control, .analysis = \"expression\") #> # A tibble: 4,829 × 18 #>    protein imputed     n average_expression proportional_expression foldchange #>    <chr>     <dbl> <int>              <dbl>                   <dbl>      <dbl> #>  1 Q9NXV2    0         6           3103100.              0.0000120       19.6  #>  2 Q8TBM8    0.333     6           3374207.              0.0000131        8.72 #>  3 Q5JUW8    0         6           1745373.              0.00000676       7.98 #>  4 O95833    0.167     6           3424853.              0.0000133        7.13 #>  5 Q9Y385    0         6           1415381.              0.00000549       7.10 #>  6 Q14534    0.333     6           4560342.              0.0000177        7.02 #>  7 O00214    0.333     6           1332337.              0.00000516       6.49 #>  8 Q9Y4C2    0         6           7289389.              0.0000283        5.78 #>  9 Q8WU67    0.333     6            960150.              0.00000372       5.77 #> 10 Q9H6H4    0         6           2328479.              0.00000902       5.72 #> # ℹ 4,819 more rows #> # ℹ 12 more variables: log2_foldchange <dbl>, p_value <dbl>, adj_p_value <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>  # a wilcox.test expression analysis hela_proteins %>%    expression(knockdown/control, .method = stats::wilcox.test) %>%    export_analysis(knockdown/control, .analysis = \"expression\") #> # A tibble: 4,829 × 18 #>    protein imputed     n average_expression proportional_expression foldchange #>    <chr>     <dbl> <int>              <dbl>                   <dbl>      <dbl> #>  1 Q9NXV2    0         6           3103100.              0.0000120       19.6  #>  2 Q8TBM8    0.333     6           3374207.              0.0000131        8.72 #>  3 Q5JUW8    0         6           1745373.              0.00000676       7.98 #>  4 O95833    0.167     6           3424853.              0.0000133        7.13 #>  5 Q9Y385    0         6           1415381.              0.00000549       7.10 #>  6 Q14534    0.333     6           4560342.              0.0000177        7.02 #>  7 O00214    0.333     6           1332337.              0.00000516       6.49 #>  8 Q9Y4C2    0         6           7289389.              0.0000283        5.78 #>  9 Q8WU67    0.333     6            960150.              0.00000372       5.77 #> 10 Q9H6H4    0         6           2328479.              0.00000902       5.72 #> # ℹ 4,819 more rows #> # ℹ 12 more variables: log2_foldchange <dbl>, p_value <dbl>, adj_p_value <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>  # a one-tailed wilcox.test expression analysis wilcoxon_less <- function(x, y) {    stats::wilcox.test(x, y, alternative = \"less\") } hela_proteins <- hela_proteins %>%    expression(knockdown/control, .method = stats::wilcox.test)  hela_proteins %>% export_analysis(knockdown/control, .analysis = \"expression\") #> # A tibble: 4,829 × 18 #>    protein imputed     n average_expression proportional_expression foldchange #>    <chr>     <dbl> <int>              <dbl>                   <dbl>      <dbl> #>  1 Q9NXV2    0         6           3103100.              0.0000120       19.6  #>  2 Q8TBM8    0.333     6           3374207.              0.0000131        8.72 #>  3 Q5JUW8    0         6           1745373.              0.00000676       7.98 #>  4 O95833    0.167     6           3424853.              0.0000133        7.13 #>  5 Q9Y385    0         6           1415381.              0.00000549       7.10 #>  6 Q14534    0.333     6           4560342.              0.0000177        7.02 #>  7 O00214    0.333     6           1332337.              0.00000516       6.49 #>  8 Q9Y4C2    0         6           7289389.              0.0000283        5.78 #>  9 Q8WU67    0.333     6            960150.              0.00000372       5.77 #> 10 Q9H6H4    0         6           2328479.              0.00000902       5.72 #> # ℹ 4,819 more rows #> # ℹ 12 more variables: log2_foldchange <dbl>, p_value <dbl>, adj_p_value <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>  # Note: the userdefined function is preserved in the operations tracking hela_proteins %>% operations() #> ℹ Data Transformations #>   • Data files (p97KD_HCT116_proteins.xlsx) were imported as proteins from #>   ProteomeDiscoverer #>   • Data reassigned sample to control where 'sample like ctl' #>   • Data reassigned sample to knockdown where 'sample like p97' #>   • Analysis: expression difference wilcox_test knockdown/control, p.adjust = #>   BH  # limma expression analysis hela_proteins %>%    expression(knockdown/control, .method = \"limma\") %>%    export_analysis(knockdown/control, .analysis = \"expression\") #> # A tibble: 4,829 × 20 #>    protein imputed     n log2_foldchange foldchange average_expression #>    <chr>     <dbl> <int>           <dbl>      <dbl>              <dbl> #>  1 Q9NXV2    0         6            3.63      12.4            1554000. #>  2 Q5JUW8    0         6            3.05       8.28           1039329. #>  3 O95833    0.167     6            2.88       7.37           2160177. #>  4 Q8TBM8    0.333     6            2.85       7.20           2144962. #>  5 Q9Y385    0         6            2.74       6.69            938010. #>  6 Q14534    0.333     6            2.69       6.47           3072993. #>  7 O00214    0.333     6            2.69       6.45            896168. #>  8 Q9Y4C2    0         6            2.53       5.77           5087951. #>  9 P84022    0.167     6            2.43       5.40            541970. #> 10 Q96BQ5    0.5       6            2.43       5.39            520092. #> # ℹ 4,819 more rows #> # ℹ 14 more variables: proportional_expression <dbl>, p_value <dbl>, #> #   adj_p_value <dbl>, limma_t_statistic <dbl>, limma_B_statistic <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_limma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate expression differences between two-samples — expression_limma","title":"Calculate expression differences between two-samples — expression_limma","text":"expression_limma() function evaluating expression differences two sample sets via limma algorithm","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_limma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate expression differences between two-samples — expression_limma","text":"","code":"expression_limma(data = NULL, experiment = NULL, control = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_limma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate expression differences between two-samples — expression_limma","text":"data tidyproteomics data object experiment character string representing experimental sample set control character string representing control sample set","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_limma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate expression differences between two-samples — expression_limma","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_test.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"function evaluating expression differences two sample sets via limma algorithm","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"","code":"expression_test(   data = NULL,   experiment = NULL,   control = NULL,   .method = stats::t.test,   ...,   .p.adjust = \"BH\" )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"data tidyproteomics data object experiment character string representing experimental sample set control character string representing control sample set .method two-distribution test function returning p_value null hypothesis. Default t.test. Example functions include t.test, wilcox.test, stats::ks.test ... ... pass arguments .p.adjust stats::p.adjust string multiple test correction","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/expression_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"Main function extracting quantitative data tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"","code":"extract(data = NULL, values = \"raw\", na.rm = FALSE)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"data tidyproteomics data object values character string vector na.rm boolean","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_digest.html","id":null,"dir":"Reference","previous_headings":"","what":"Proteolytic digest a parsed fasta list — fasta_digest","title":"Proteolytic digest a parsed fasta list — fasta_digest","text":"fasta_digest() Generates peptide sequences based enzyme partial inputs. works \"list\" output parse() function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_digest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proteolytic digest a parsed fasta list — fasta_digest","text":"","code":"fasta_digest(protein = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_digest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proteolytic digest a parsed fasta list — fasta_digest","text":"protein character string ... parameters peptides()","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_digest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proteolytic digest a parsed fasta list — fasta_digest","text":"list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_digest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proteolytic digest a parsed fasta list — fasta_digest","text":"","code":"if (FALSE) { proteins <- fasta_parse(\"~/Local/data/fasta/ecoli_UniProt.fasta\") proteins <- fasta_digest(proteins, enzyme = \"[K]\", partial = 2) }"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the string defined by the regex — fasta_extract","title":"Get the string defined by the regex — fasta_extract","text":"fasta_extract() get current string based regex","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the string defined by the regex — fasta_extract","text":"","code":"fasta_extract(string = NULL, regex = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the string defined by the regex — fasta_extract","text":"string character regex list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the string defined by the regex — fasta_extract","text":"list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"The main function for parsing a fasta file — fasta_parse","title":"The main function for parsing a fasta file — fasta_parse","text":"fasta_parse() get current regex","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The main function for parsing a fasta file — fasta_parse","text":"","code":"fasta_parse(fasta_path = NULL, patterns = NULL, as = c(\"list\", \"data.frame\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The main function for parsing a fasta file — fasta_parse","text":"fasta_path character string path fasta formatted file patterns list, provided default regex() used. Note: first element regex list define list reference name, list output, protein can accessed designation. Note: patterns list missing explicit \"sequence\" element, sequence returned. might beneficial meta elements sought. character designating output format","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The main function for parsing a fasta file — fasta_parse","text":"list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_parse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The main function for parsing a fasta file — fasta_parse","text":"","code":"if (FALSE) { proteins <- fasta_parse(\"~/Local/data/fasta/ecoli_UniProt.fasta\")  # using a custom supplied regex list proteins <- fasta_parse(fasta_path = \"~/Local/data/fasta/ecoli_UniProt.fasta\",                         pattern = list(                         \"accession\" = \"sp\\\\|[A-Z]\",                         \"gene_name\" = \"(?<=GN\\\\=).*?(?=\\\\s..\\\\=)\"                   )) }"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_peptides.html","id":null,"dir":"Reference","previous_headings":"","what":"Proteolytic digest a sequence — fasta_peptides","title":"Proteolytic digest a sequence — fasta_peptides","text":"fasta_peptides() Generates peptide sequences based enzyme partial inputs.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_peptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proteolytic digest a sequence — fasta_peptides","text":"","code":"fasta_peptides(   sequence = NULL,   enzyme = \"[KR]\",   partial = 0:3,   length = c(6, 30) )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_peptides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proteolytic digest a sequence — fasta_peptides","text":"sequence character string enzyme character string regular expression use proteolytically digest sequence. [KR] ... trypsin [KR](?!P) ... trypsin P [R](?!P) ... arg-c [K](?!P) ... lys-c [FYWL](?!P) ... chymotrypsin [BD] ... asp-n [D] ... formic acid [FL] ... pepsin-partial numeric representing number incomplete enzymatic sites (mis-clevage). length numeric vactor representing minimum maximum sequence lengths.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_peptides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proteolytic digest a sequence — fasta_peptides","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_peptides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proteolytic digest a sequence — fasta_peptides","text":"","code":"if (FALSE) { sequence <- \"SAMERSMALLKPSAMPLERSEQUENCE\" tidyproteomics:::fasta_peptides(sequence)  tidyproteomics:::fasta_peptides(sequence, enzyme = \"[L]\", partial = 2, length = c(1,12))  }"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_regex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/Set the FASTA meta data regex — fasta_regex","title":"Get/Set the FASTA meta data regex — fasta_regex","text":"fasta_regex() gets sets current regex patters assist parse() function. simply provides structure needed parse fasta file, custom list can also supplied. set elements regex() function, simply provide list complementary names -write current list.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_regex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/Set the FASTA meta data regex — fasta_regex","text":"","code":"fasta_regex(params = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_regex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/Set the FASTA meta data regex — fasta_regex","text":"params list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_regex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get/Set the FASTA meta data regex — fasta_regex","text":"list","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fasta_regex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get/Set the FASTA meta data regex — fasta_regex","text":"","code":"if (FALSE) { fasta_regex(list(\"accession\" = \"sp\\\\|[A-Z]\")) }"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fgeomean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"Calculates geometric mean numeric vector NAs removed","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fgeomean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"","code":"fgeomean(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fgeomean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"x numeric vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fgeomean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fgeomean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"","code":"library(tidyproteomics) fgeomean(c(1,2,5,6,8,NA,NA)) #> [1] 3.437544"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the mean of a numeric vector with NAs removed — fmean","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"Calculates mean numeric vector NAs removed","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"","code":"fmean(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"x numeric vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"","code":"library(tidyproteomics) fmean(c(1,2,5,6,8,NA,NA)) #> [1] 4.4"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the median of a numeric vector with NAs removed — fmedian","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"Calculates median numeric vector NAs removed","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"","code":"fmedian(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"x numeric vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmedian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"","code":"library(tidyproteomics) fmedian(c(1,2,5,6,8,NA,NA)) #> [1] 5"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the minimum of a numeric vector with NAs removed — fmin","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"Calculates minimum numeric vector NAs removed","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"","code":"fmin(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"x numeric vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fmin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"","code":"library(tidyproteomics) fmin(c(1,2,5,6,8,NA,NA)) #> [1] 1"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the sum of a numeric vector with NAs removed — fsum","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"Calculates sum numeric vector NAs removed","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"","code":"fsum(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"x numeric vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fsum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/fsum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"","code":"library(tidyproteomics) fsum(c(1,2,5,6,8,NA,NA)) #> [1] 22"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_accountings.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all accounting terms — get_accountings","title":"Helper function to get all accounting terms — get_accountings","text":"Helper function get accounting terms","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_accountings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all accounting terms — get_accountings","text":"","code":"get_accountings(data = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_accountings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all accounting terms — get_accountings","text":"data tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_accountings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all accounting terms — get_accountings","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotation_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_annotation_terms","title":"Helper function to get available terms — get_annotation_terms","text":"Helper function get available terms","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotation_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_annotation_terms","text":"","code":"get_annotation_terms(data)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotation_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_annotation_terms","text":"data tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotation_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_annotation_terms","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all annotations for a given term — get_annotations","title":"Helper function to get all annotations for a given term — get_annotations","text":"Helper function get annotations given term","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all annotations for a given term — get_annotations","text":"","code":"get_annotations(data = NULL, term = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all annotations for a given term — get_annotations","text":"data tidyproteomics data object term character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all annotations for a given term — get_annotations","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_quant_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the quantitative value names — get_quant_names","title":"Get the quantitative value names — get_quant_names","text":"get_quant_names() helper function returns names normalized quantitative values, raw, linear, loess","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_quant_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the quantitative value names — get_quant_names","text":"","code":"get_quant_names(data)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_quant_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the quantitative value names — get_quant_names","text":"data tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_quant_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the quantitative value names — get_quant_names","text":"character vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_quant_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the quantitative value names — get_quant_names","text":"","code":"library(tidyproteomics) get_quant_names(hela_proteins) #> [1] \"raw\""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_sample_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all sample names — get_sample_names","title":"Helper function to get all sample names — get_sample_names","text":"Helper function get sample names","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_sample_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all sample names — get_sample_names","text":"","code":"get_sample_names(data = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_sample_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all sample names — get_sample_names","text":"data tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_sample_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all sample names — get_sample_names","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_segment","title":"Helper function to get available terms — get_segment","text":"Helper function get available terms","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_segment","text":"","code":"get_segment(data = NULL, variable = NULL, .verbose = TRUE)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_segment","text":"data tidyproteomics data object variable character string .verbose boolean","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_segment","text":"character","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_unique_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all sample names — get_unique_variables","title":"Helper function to get all sample names — get_unique_variables","text":"Helper function get sample names","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_unique_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all sample names — get_unique_variables","text":"","code":"get_unique_variables(data = NULL, variable = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_unique_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all sample names — get_unique_variables","text":"data tidyproteomics data object variable string character","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_unique_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all sample names — get_unique_variables","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_variables","title":"Helper function to get available terms — get_variables","text":"Helper function get available terms","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_variables","text":"","code":"get_variables(   data = NULL,   segment = c(\"experiments\", \"quantitative\", \"annotations\", \"accounting\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_variables","text":"data tidyproteomics data object segment character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_variables","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/grapes-like-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for subsetting — %like%","title":"Helper function for subsetting — %like%","text":"Helper function subsetting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/grapes-like-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for subsetting — %like%","text":"","code":"a %like% b"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/grapes-like-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for subsetting — %like%","text":"dplyr tibble column reference b dplyr tibble column reference","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/grapes-like-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for subsetting — %like%","text":"character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hash_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a crc32 hash on a vector — hash_vector","title":"Create a crc32 hash on a vector — hash_vector","text":"hash_vector() helper function returns crc32 hash vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hash_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a crc32 hash on a vector — hash_vector","text":"","code":"hash_vector(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hash_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a crc32 hash on a vector — hash_vector","text":"x vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hash_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a crc32 hash on a vector — hash_vector","text":"hash x","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to take the head of a tibble and display as a data.frame — hdf","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"Helper function take head tibble display data.frame","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"","code":"hdf(x, n = 5)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"x tibble n display nth row","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"data frame","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"","code":"library(tidyproteomics) x <- tibble::tibble(a = 1:10, b = 11:20) hdf(x) #>   a  b #> 1 1 11 #> 2 2 12 #> 3 3 13 #> 4 4 14 #> 5 5 15 hdf(x, n = 3) #>   a  b #> 1 1 11 #> 2 2 12 #> 3 3 13"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hela_peptides.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample tidyproteomics data object — hela_peptides","title":"A sample tidyproteomics data object — hela_peptides","text":"dataset containing quantitative peptide data ten proteins 2 samples 3 replicates ","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hela_peptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample tidyproteomics data object — hela_peptides","text":"","code":"hela_peptides"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hela_peptides.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample tidyproteomics data object — hela_peptides","text":"list collection character values tibbles: quantitative tibble, protein quantitative data annotation tibble, protein annotation data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hela_proteins.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample tidyproteomics data object — hela_proteins","title":"A sample tidyproteomics data object — hela_proteins","text":"dataset containing quantitative protein data thousands proteins 2 samples 3 replicates ","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hela_proteins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample tidyproteomics data object — hela_proteins","text":"","code":"hela_proteins"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/hela_proteins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample tidyproteomics data object — hela_proteins","text":"list collection character values tibbles: quantitative tibble, protein quantitative data annotation tibble, protein annotation data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for importing data to the tidyproteomics list object — import","title":"Main function for importing data to the tidyproteomics list object — import","text":"Main function importing data tidyproteomics list object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for importing data to the tidyproteomics list object — import","text":"","code":"import(files = NULL, platform = NULL, analyte = NULL, path = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for importing data to the tidyproteomics list object — import","text":"files character vector file paths platform source data (ProteomeDiscoverer, MaxQuant) analyte omics analyte (proteins, peptides) path character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for importing data to the tidyproteomics list object — import","text":"tidyproteomics list data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main function for importing data to the tidyproteomics list object — import","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) if (FALSE) { hela_proteins <- path_to_package_data(\"p97KD_HCT116\") %>%    import(\"ProteomeDiscoverer\", \"proteins\") } hela_proteins %>% summary(\"sample\") #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_charge.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data and dealing with charge groups — import_charge","title":"A helper function for importing peptide table data and dealing with charge groups — import_charge","text":"helper function importing peptide table data dealing charge groups","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_charge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data and dealing with charge groups — import_charge","text":"","code":"import_charge(tbl_data = NULL, tbl_config = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_charge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data and dealing with charge groups — import_charge","text":"tbl_data table imported data tbl_config table config values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_charge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data and dealing with charge groups — import_charge","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — import_extract","title":"A helper function for importing peptide table data — import_extract","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — import_extract","text":"","code":"import_extract(tbl_data = NULL, tbl_config = NULL, remove = FALSE)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — import_extract","text":"tbl_data table imported data tbl_config table config values remove boolean determine extracted column name change copy new, retaining old","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — import_extract","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_mbr.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — import_mbr","title":"A helper function for importing peptide table data — import_mbr","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_mbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — import_mbr","text":"","code":"import_mbr(tbl_data = NULL, tbl_config = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_mbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — import_mbr","text":"tbl_data table imported data tbl_config table config values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_mbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — import_mbr","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — import_remove","title":"A helper function for importing peptide table data — import_remove","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — import_remove","text":"","code":"import_remove(tbl_data = NULL, tbl_config = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — import_remove","text":"tbl_data table imported data tbl_config table config values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — import_remove","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — import_rename","title":"A helper function for importing peptide table data — import_rename","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — import_rename","text":"","code":"import_rename(tbl_data = NULL, tbl_config = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — import_rename","text":"tbl_data table imported data tbl_config table config values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — import_rename","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_split.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — import_split","title":"A helper function for importing peptide table data — import_split","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — import_split","text":"","code":"import_split(tbl_data = NULL, tbl_config = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — import_split","text":"tbl_data table imported data tbl_config table config values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — import_split","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — import_validate","title":"A helper function for importing peptide table data — import_validate","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — import_validate","text":"","code":"import_validate(tbl_data = NULL, tbl_config = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — import_validate","text":"tbl_data table imported data tbl_config table config values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/import_validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — import_validate","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Main method for imputing missing values — impute","title":"Main method for imputing missing values — impute","text":"Main method imputing missing values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main method for imputing missing values — impute","text":"","code":"impute(   data = NULL,   .function = base::min,   method = c(\"row\", \"column\", \"matrix\"),   group_by_sample = FALSE,   cores = 2 )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main method for imputing missing values — impute","text":"data tidyproteomics list data-object .function summary statistic function. Default base::min, examples functions include min, max, mean, sum. Note, NAs removed function call. method character string indicate imputation method (row, column, matrix). Consider data matrix peptide/protein \"rows\" dataset \"columns\". 'row' functions imputing values samples looking values given peptide/protein, 'column' method imputes within dataset values. function 'randomforest' imputes using data rows columns, \"matrix\", without bias toward sample groups. given bias sample groups, expression differences also bias sample groups. case sample groups biased (gene deletion), suggested impute using min function 'within' method. group_by_sample boolean indicate data grouped sample name bias imputation within sample. cores number threads used speed calculation","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main method for imputing missing values — impute","text":"tidyproteomics list data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main method for imputing missing values — impute","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>% summary(\"sample\") #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 #>   hela_proteins %>% impute(.function = stats::median) %>% summary(\"sample\") #> ℹ Imputing by row using the function ::, stats, and median #> ✔ Imputing by row using the function ::, stats, and median [568ms] #>  #> ℹ ... 1919 values imputed #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.931 0.16 #>  knockdown     7055    66329           58706        0.931 0.20 #>   hela_proteins %>% impute(.function = impute.randomforest) %>% summary(\"sample\") #> ℹ Imputing by row using the function impute.randomforest #> Error in .f(as.vector(stats::na.omit(x))): imput data must be a matrix #> ✖ Imputing by row using the function impute.randomforest [47ms] #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.randomforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputes missing values based on the missForest function — impute.randomforest","title":"Imputes missing values based on the missForest function — impute.randomforest","text":"Imputes missing values based missForest function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.randomforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputes missing values based on the missForest function — impute.randomforest","text":"","code":"impute.randomforest(matrix = NULL, cores = 2)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.randomforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputes missing values based on the missForest function — impute.randomforest","text":"matrix matrix NAs cores number threads used speed calculation","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute.randomforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputes missing values based on the missForest function — impute.randomforest","text":"matrix imputed values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_byfunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputes missing values based on a given function — impute_byfunction","title":"Imputes missing values based on a given function — impute_byfunction","text":"Imputes missing values based given function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_byfunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputes missing values based on a given function — impute_byfunction","text":"","code":"impute_byfunction(   table = NULL,   impute_function = stats::median,   method = c(\"within\", \"between\"),   minimum_to_impute = 0.25 )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_byfunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputes missing values based on a given function — impute_byfunction","text":"table tibble impute_function summary statistic function. Default median, examples functions include min, max, mean, sum. method character string indicate imputation method (within, ) minimum_to_impute minimum ratio impute ","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_byfunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputes missing values based on a given function — impute_byfunction","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_randomforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputes missing values based on the missForest function — impute_randomforest","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"Imputes missing values based missForest function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_randomforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"","code":"impute_randomforest(table = NULL, minimum_to_impute = 0.25, cores = 2)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_randomforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"table tibble minimum_to_impute minimum ratio impute cores number threads used speed calculation","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_randomforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for calculating imputation stats — impute_ratio","title":"Helper function for calculating imputation stats — impute_ratio","text":"Helper function calculating imputation stats","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for calculating imputation stats — impute_ratio","text":"","code":"impute_ratio(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for calculating imputation stats — impute_ratio","text":"x tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/impute_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for calculating imputation stats — impute_ratio","text":"list vectors","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/invlog2.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Log 2 — invlog2","title":"Inverse Log 2 — invlog2","text":"Inverse Log 2","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/invlog2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Log 2 — invlog2","text":"","code":"invlog2(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/invlog2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Log 2 — invlog2","text":"x Numeric value calculate inverse log2","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/invlog2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Log 2 — invlog2","text":"numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/list_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function Venn and Euler plots — list_venn","title":"Helper function Venn and Euler plots — list_venn","text":"Helper function Venn Euler plots","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/list_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function Venn and Euler plots — list_venn","text":"","code":"list_venn(data = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/list_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function Venn and Euler plots — list_venn","text":"data tidyproteomics data object ... pass arguments","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/list_venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function Venn and Euler plots — list_venn","text":"list vectors","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/load_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project specific data — load_local","title":"Load project specific data — load_local","text":"load_local() simple function loads current project tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/load_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project specific data — load_local","text":"","code":"load_local(analyte = c(\"peptides\", \"proteins\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/load_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project specific data — load_local","text":"analyte character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/load_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load project specific data — load_local","text":"tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/load_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load project specific data — load_local","text":"","code":"library(tidyproteomics) # hela_proteins <- load_omics(analyte = \"proteins\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/match_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"match a named vector to string vector — match_vect","title":"match a named vector to string vector — match_vect","text":"match named vector string vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/match_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match a named vector to string vector — match_vect","text":"","code":"match_vect(un_vec, n_vec)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/match_vect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"match a named vector to string vector — match_vect","text":"un_vec un-named vector n_vec named vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/match_vect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"match a named vector to string vector — match_vect","text":"named vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/meld.html","id":null,"dir":"Reference","previous_headings":"","what":"Meld a tidyproteomics data object into a single table — meld","title":"Meld a tidyproteomics data object into a single table — meld","text":"data_meld() helper function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/meld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meld a tidyproteomics data object into a single table — meld","text":"","code":"meld(data = NULL, single_quant_source = FALSE)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/meld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meld a tidyproteomics data object into a single table — meld","text":"data tidyproteomics data object single_quant_source boolean indicate single quantitative value reported","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/meld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meld a tidyproteomics data object into a single table — meld","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple tidyproteomics data-objects — merge","title":"Merge multiple tidyproteomics data-objects — merge","text":"merge() returns single tidyproteomics data object multiple.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple tidyproteomics data-objects — merge","text":"","code":"merge(data_list = NULL, quantitative_source = c(\"raw\", \"selected\", \"all\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple tidyproteomics data-objects — merge","text":"data_list list tidyproteomics data objects quantitative_source character string indicating quantitative value merge . selected chosen dataset's specific normalization used renamed 'abundance_selected'. chosen, possibility exists normalization values fillin NAs.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple tidyproteomics data-objects — merge","text":"tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge_quantitative.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function merging normalized data back into the main data-object — merge_quantitative","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"Helper function merging normalized data back main data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge_quantitative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"","code":"merge_quantitative(data = NULL, data_quant = NULL, values = \"raw\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge_quantitative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"data tidyproteomics data subset tibble data_quant tidyproteomics data subset tibble values character string vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/merge_quantitative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/munge_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"Main function munging peptide data extracted tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/munge_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"","code":"munge_identifier(   data,   munge = c(\"combine\", \"separate\"),   identifiers = c(\"protein\", \"peptide\", \"modifications\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/munge_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"data tidyproteomics data object munge character string vector (combine | separate) identifiers character vector identifiers","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/munge_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"normalize() Main function normalizing quantitative data tidyproteomics data-object. passthrough function returns original tidyproteomics data-object additional quantitative column labeled normalization method(s) used. function can accommodate multiple normalization methods single pass, useful examining normalization effects data. Often adventitious select optimal normalization method based performance.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"","code":"normalize(   data,   ...,   .method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\", \"svm\", \"randomforest\"),   .cores = 1 )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"data tidyproteomics data object ... use subset data normalization see subset(). useful normalizing spike-set proteins .method character vector normalization use .cores number CPU cores use multi-threading","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%      normalize(.method = c(\"scaled\", \"median\")) %>%      summary(\"sample\") #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [181ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [164ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.15 #>  knockdown     7055    66329           58706        0.909 0.13 #>   # normalize between samples according to a subset, then apply to all values #   this would be recommended with a pull-down experiment wherein a conserved #   protein complex acts as the majority content and individual inter-actors #   are of quantitative differentiation hela_proteins %>%      normalize(!description %like% \"Ribosome\", .method = c(\"scaled\", \"median\")) %>%      summary(\"sample\") #> Warning: Specifying the `id_cols` argument by position was deprecated in tidyr 1.3.0. #> ℹ Please explicitly name `id_cols`, like `id_cols = identifier`. #> ℹ The deprecated feature was likely used in the tidyproteomics package. #>   Please report the issue to the authors. #> !   normalization based on 5329 of 5346 identifiers #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [121ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [125ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.15 #>  knockdown     7055    66329           58706        0.909 0.13 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_limma.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_limma","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_limma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"","code":"normalize_limma(data = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_limma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"data tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_limma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_linear","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"","code":"normalize_linear(data = NULL, data_centered = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_loess","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"","code":"normalize_loess(data = NULL, data_centered = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_median","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"","code":"normalize_median(data = NULL, data_centered = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_randomforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_randomforest","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_randomforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"","code":"normalize_randomforest(data = NULL, data_centered = NULL, .cores = 1)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_randomforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization .cores number CPU cores use multi-threading","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_randomforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_scaled","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"","code":"normalize_scaled(data = NULL, data_centered = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_scaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_scaled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_svm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_svm","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"Normalization function tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_svm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"","code":"normalize_svm(data = NULL, data_centered = NULL, .cores = 1)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization .cores number CPU cores use multi-threading","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/normalize_svm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/operations.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the data transformations — operations","title":"Returns the data transformations — operations","text":"operations() returns transformative operations performed data.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/operations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the data transformations — operations","text":"","code":"operations(data = NULL, destination = c(\"print\", \"save\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/operations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the data transformations — operations","text":"data tidyproteomics data object destination character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/operations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the data transformations — operations","text":"character","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/operations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the data transformations — operations","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) if (FALSE) { hela_proteins <- path_to_package_data(\"p97KD_HCT116\") %>%    import(\"ProteomeDiscoverer\", \"proteins\") %>%    reassign(sample == \"ctl\", .replace = \"control\") %>%    reassign(sample == \"p97\", .replace = \"knockdown\") %>%    impute() %>%    normalize(.method = c(\"linear\",\"loess\")) } hela_proteins %>% operations() #> ℹ Data Transformations #>   • Data files (p97KD_HCT116_proteins.xlsx) were imported as proteins from #>   ProteomeDiscoverer #>   • Data reassigned sample to control where 'sample like ctl' #>   • Data reassigned sample to knockdown where 'sample like p97'"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/path_to_package_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for displaying path to data — path_to_package_data","title":"Helper function for displaying path to data — path_to_package_data","text":"Helper function displaying path data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/path_to_package_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for displaying path to data — path_to_package_data","text":"","code":"path_to_package_data(item = c(\"proteins\", \"peptides\", \"fasta\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/path_to_package_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for displaying path to data — path_to_package_data","text":"item character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/path_to_package_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for displaying path to data — path_to_package_data","text":"print table console","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object plot definition — plot.tidyproteomics","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"Tidy-Quant data object plot definition","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"","code":"# S3 method for tidyproteomics plot(x, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"x tidyproteomics data object ... unused legacy","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"print object summary","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_compexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparative analysis between two expression tests — plot_compexp","title":"Comparative analysis between two expression tests — plot_compexp","text":"plot_compexp() GGplot2 implementation plotting comparison expression differences two methods two sets groups. example, one run expression difference two different conditions (B) prodived experiment contained 3 samples condition , condition B WT, compare results. proteins showing intersection (purple) indicate common targets condition B.","code":"expdiff_a <- protein_data %>%    expression(experiment = \"condition_a\", control = \"wt\")  expdiff_b <- protein_data %>%    expression(experiment = \"condition_b\", control = \"wt\")  plot_compexp(expdiff_a, expdiff_b)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_compexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparative analysis between two expression tests — plot_compexp","text":"","code":"plot_compexp(   table_a = NULL,   table_b = NULL,   log2fc_min = 2,   log2fc_column = \"log2_foldchange\",   significance_max = 0.05,   significance_column = \"adj_p_value\",   labels_column = \"protein\",   point_size = NULL,   show_lines = TRUE,   color_a = \"dodgerblue\",   color_b = \"firebrick1\",   color_u = \"purple\" )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_compexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparative analysis between two expression tests — plot_compexp","text":"table_a tibble table_b tibble log2fc_min numeric defining minimum log2 foldchange highlight. log2fc_column character defining column name log2 foldchange values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. labels_column character defining column name column labeling. point_size numeric changing point size. show_lines boolean showing threshold lines. color_a character defining color table_a expression. color_b character defining color table_b expression. color_u character defining color union tables.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_compexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparative analysis between two expression tests — plot_compexp","text":"ggplot2 object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_compexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparative analysis between two expression tests — plot_compexp","text":"","code":"library(ggplot2, warn.conflicts = FALSE) library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # comparing two analytical methods, in substitute for two conditions exp_a <- hela_proteins %>%      expression(knockdown/control) %>%      export_analysis(knockdown/control, .analysis = \"expression\")  exp_b <- hela_proteins %>%      expression(knockdown/control, .method = \"limma\") %>%      export_analysis(knockdown/control, .analysis = \"expression\")  plot_compexp(exp_a, exp_b, log2fc_min = 1, significance_column = \"p_value\") +      ggplot2::labs(x = \"(log2 FC) Wilcoxon Rank Sum\",                    y = \"(log2 FC) Emperical Bayes (limma)\",                    title = \"Hela p97 Knockdown ~ Control\") #> Warning: ggrepel: 300 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the accounting of proteins. peptides, and other counts — plot_counts","title":"Plot the accounting of proteins. peptides, and other counts — plot_counts","text":"plot_counts() GGplot2 implementation plotting counting statistics.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the accounting of proteins. peptides, and other counts — plot_counts","text":"","code":"plot_counts(   data = NULL,   accounting = NULL,   show_replicates = TRUE,   impute_max = 0.5,   palette = \"YlGnBu\",   ... )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the accounting of proteins. peptides, and other counts — plot_counts","text":"data tidyproteomics data object accounting character string show_replicates boolean visualize replicates impute_max numeric representing largest allowable imputation percentage palette string representing palette scale_fill_brewer() ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the accounting of proteins. peptides, and other counts — plot_counts","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the accounting of proteins. peptides, and other counts — plot_counts","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>% plot_counts()   hela_proteins %>% plot_counts(show_replicates = FALSE, palette = 'Blues')"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_dynamic_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CVs by abundance — plot_dynamic_range","title":"Plot CVs by abundance — plot_dynamic_range","text":"plot_dynamic_range() GGplot2 implementation plotting normalization effects CVs abundance, visualized 2d density plot. Layered top loess smoothed regression CVs abundance, median CV shown red dynamic range represented box plot top. point plot examine CVs minimized abundance profile. normalization methods function well high abundance yet leave retain high CVs lower abundance.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_dynamic_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CVs by abundance — plot_dynamic_range","text":"","code":"plot_dynamic_range(data = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_dynamic_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CVs by abundance — plot_dynamic_range","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_dynamic_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot CVs by abundance — plot_dynamic_range","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_dynamic_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot CVs by abundance — plot_dynamic_range","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%   normalize(.method = c(\"linear\", \"loess\", \"randomforest\")) %>%   plot_dynamic_range() #> ℹ Normalizing quantitative data #> ℹ ... using linear regression #> ✔ ... using linear regression [340ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.2s] #>  #> ℹ ... using randomforest regression #> ✔ ... using randomforest regression [33.8s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Bubble plot of enrichment values — plot_enrichment","title":"Bubble plot of enrichment values — plot_enrichment","text":"plot_enrichment() GGplot2 implementation plotting enrichment values. function can take either tidyproteomics data object table required headers.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bubble plot of enrichment values — plot_enrichment","text":"","code":"plot_enrichment(   data = NULL,   ...,   .term = NULL,   enrichment_min = 1,   enrichment_column = \"enrichment\",   significance_max = 0.01,   significance_column = \"p_value\",   term_column = \"annotation\",   size_column = \"size\",   destination = \"plot\",   height = 5,   width = 8 )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bubble plot of enrichment values — plot_enrichment","text":"data tidyproteomics data object ... two sample comparison .term character string indicating term enrichment analysis calculated enrichment_min numeric defining minimum log2 enrichment highlight. enrichment_column character defining column name enrichment values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. term_column character defining column name labeling. size_column character defining column name term size. destination character string height numeric width numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bubble plot of enrichment values — plot_enrichment","text":"ggplot2 object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bubble plot of enrichment values — plot_enrichment","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(ggplot2, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    expression(knockdown/control, .method = stats::t.test) %>%    enrichment(knockdown/control, .term = 'biological_process', .method = \"wilcoxon\") %>%    plot_enrichment(knockdown/control, .term = \"biological_process\") +    labs(title = \"Hela: Term Enrichment\", subtitle = \"Knockdown ~ Control\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_euler.html","id":null,"dir":"Reference","previous_headings":"","what":"GGplot2 extension to plot a Euler diagram — plot_euler","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"GGplot2 extension plot Euler diagram","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"","code":"plot_euler(data, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    subset(match_between_runs == FALSE) %>%    plot_euler() #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>    hela_proteins %>%    subset(match_between_runs == FALSE) %>%    subset(cellular_component %like% \"cytosol\") %>%    plot_euler() #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>  #>  #> ℹ Subsetting data: cellular_component %like% cytosol #> ✔ Subsetting data: cellular_component %like% cytosol ... done #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of quantitative values by sample — plot_heatmap","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"plot_heatmap() pheatmap implementation plotting commonly visualized quantitative heatmap according sample. samples quantitative values clustered visualized.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"","code":"plot_heatmap(data = NULL, tag = NULL, row_names = FALSE, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"data tidyproteomics data object tag character string row_names boolean ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   select_normalization() %>%   plot_heatmap() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [150ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [167ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [410ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [396ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.3s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot normalized values — plot_normalization","title":"Plot normalized values — plot_normalization","text":"plot_normalization() GGplot2 implementation plotting normalization effects visualized box plot.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot normalized values — plot_normalization","text":"","code":"plot_normalization(data = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot normalized values — plot_normalization","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot normalized values — plot_normalization","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot normalized values — plot_normalization","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   plot_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [123ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [170ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [231ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [381ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.3s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess #> Warning: Removed 73038 rows containing non-finite values (`stat_boxplot()`)."},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA values — plot_pca","title":"Plot PCA values — plot_pca","text":"plot_pca() GGplot2 implementation plotting two principal components PCA analysis, visualized scatter.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA values — plot_pca","text":"","code":"plot_pca(   data = NULL,   variables = c(\"PC1\", \"PC2\"),   labels = TRUE,   label_size = 3,   ... )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA values — plot_pca","text":"data tidyproteomics data object variables character vector 2 PCs plot. Acceptable values include (PC1, PC2, PC3 ... PC9). Default c('PC1','PC2'). labels boolean label_size numeric ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA values — plot_pca","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA values — plot_pca","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins <- hela_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   select_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [136ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [127ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [275ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [407ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.3s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess  hela_proteins %>% plot_pca()   # a different PC set hela_proteins %>% plot_pca(variables = c(\"PC2\", \"PC3\"))   # a PC scree plot hela_proteins %>% plot_pca(\"scree\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot proportional expression values — plot_proportion","title":"Plot proportional expression values — plot_proportion","text":"plot_proportion() GGplot2 implementation plotting expression differences foldchange ~ scaled abundance. allows visualization selected proteins See also plot_volcano(). function can take either tidyproteomics data object table required headers.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot proportional expression values — plot_proportion","text":"","code":"plot_proportion(   data = NULL,   ...,   log2fc_column = \"log2_foldchange\",   log2fc_min = 2,   significance_column = \"adj_p_value\",   significance_max = 0.05,   proportion_column = \"proportional_expression\",   proportion_min = 0.01,   labels_column = NULL,   label_significance = TRUE,   show_pannels = FALSE,   show_lines = TRUE,   show_fc_scale = TRUE,   point_size = NULL,   color_positive = \"dodgerblue\",   color_negative = \"firebrick1\",   destination = \"plot\",   height = 5,   width = 8 )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot proportional expression values — plot_proportion","text":"data tidyproteomics data object ... two sample comparison log2fc_column character defining column name log2 foldchange values. log2fc_min numeric defining minimum log2 foldchange highlight. significance_column character defining column name statistical significance values. significance_max numeric defining maximum statistical significance highlight. proportion_column character defining column name proportional expression values. proportion_min numeric defining minimum proportional expression highlight. labels_column character defining column name column labeling. label_significance boolean labeling values significance threshold. show_pannels boolean showing colored /expression panels. show_lines boolean showing threshold lines. show_fc_scale boolean showing secondary foldchange scale. point_size numeric shanging point size. color_positive character defining color positive () expression. color_negative character defining color negative () expression. destination character string height numeric width numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot proportional expression values — plot_proportion","text":"ggplot2 object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot proportional expression values — plot_proportion","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    expression(knockdown/control) %>%    plot_proportion(knockdown/control, log2fc_min = 0.5, significance_column = 'p_value') #> ℹ proportional_expression appears to sum to 1 adjusting values to 100(%) #> Warning: ggrepel: 377 unlabeled data points (too many overlaps). Consider increasing max.overlaps   # generates the same out come # hela_proteins %>% #    expression(knockdown/control) %>% #    export_analysis(knockdown/control, .analysis = 'expression) %>% #    plot_proportion(log2fc_min = 0.5, significance_column = 'p_value')  # display the gene name instead hela_proteins %>%    expression(knockdown/control) %>%    plot_proportion(knockdown/control, log2fc_min = 0.5, significance_column = 'p_value', labels_column = \"gene_name\") #> ℹ proportional_expression appears to sum to 1 adjusting values to 100(%) #> Warning: Removed 13 rows containing missing values (`geom_text_repel()`). #> Warning: ggrepel: 361 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize mapped sequence data — plot_protein","title":"Visualize mapped sequence data — plot_protein","text":"Visualize mapped sequence data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize mapped sequence data — plot_protein","text":"","code":"plot_protein(   mapped_data = NULL,   protein = NULL,   row_length = 50,   samples = NULL,   modifications = NULL,   ncol = NULL,   nrow = NULL,   color_sequence = \"grey60\",   color_modifications = c(\"red\", \"blue\", \"orange\", \"skyblue\", \"purple\", \"yellow\"),   show_modification_precent = TRUE )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize mapped sequence data — plot_protein","text":"mapped_data tidyproteomics data-object, specifically sequencing origin protein character string row_length numeric samples character string modifications character string ncol numeric nrow numeric color_sequence character string color_modifications character vector show_modification_precent boolean","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize mapped sequence data — plot_protein","text":"list protein mappings","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_protein.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize mapped sequence data — plot_protein","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  hela_protein_map <- hela_peptides %>%    protein_map(fasta = path_to_package_data('fasta')) #> ℹ Parsing FASTA file human.fasta #> ✔ Parsing FASTA file human.fasta ... done #>  #> ℹ Sequence mapping #>   Sequence mapping ■■■■■■■■■                         25% | ETA:  6s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■           75% | ETA:  2s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> ℹ Sequence mapping #> ✔ Sequence mapping ... done #>   hela_protein_map %>% plot_protein('P06576')"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_quantrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variation in normalized values — plot_quantrank","title":"Plot the variation in normalized values — plot_quantrank","text":"plot_quantrank() GGplot2 implementation plotting variability normalized values, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_quantrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variation in normalized values — plot_quantrank","text":"","code":"plot_quantrank(   data = NULL,   accounting = NULL,   type = c(\"points\", \"lines\"),   show_error = TRUE,   show_rank_scale = FALSE,   limit_rank = NULL,   display_subset = NULL,   display_filter = c(\"none\", \"log2_foldchange\", \"p_value\", \"adj_p_value\"),   display_cutoff = 1,   palette = \"YlGnBu\",   impute_max = 0.5,   ... )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_quantrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variation in normalized values — plot_quantrank","text":"data tidyproteomics data object accounting character string type character string show_error boolean show_rank_scale boolean limit_rank numerical vector 2 display_subset string vector identifiers highlight display_filter numeric 0 1 display_cutoff numeric 0 1 palette string representing palette scale_fill_brewer() impute_max numeric representing largest allowable imputation percentage ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_quantrank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variation in normalized values — plot_quantrank","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_quantrank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the variation in normalized values — plot_quantrank","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>% plot_quantrank()   hela_proteins %>% plot_quantrank(type = \"lines\")   hela_proteins %>% plot_quantrank(display_filter = \"log2_foldchange\", display_cutoff = 1) #> Warning: ggrepel: 350 unlabeled data points (too many overlaps). Consider increasing max.overlaps   hela_proteins %>% plot_quantrank(limit_rank = c(1,50), show_rank_scale = TRUE)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for saving plots — plot_save","title":"Helper function for saving plots — plot_save","text":"plot_save helper function","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for saving plots — plot_save","text":"","code":"plot_save(   plot,   data,   file_name,   destination = c(\"plot\", \"save\", \"png\", \"svg\", \"tiff\", \"jpeg\"),   height = 5,   width = 8,   ... )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for saving plots — plot_save","text":"plot ggplot2 object data tidyproteomics data object file_name character string destination character string height numeric width numeric ... passthrough ggplot2::ggsave arguments","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for saving plots — plot_save","text":"ggplot2 object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variation in normalized values — plot_variation_cv","title":"Plot the variation in normalized values — plot_variation_cv","text":"plot_variation_cv() GGplot2 implementation plotting variability normalized values, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variation in normalized values — plot_variation_cv","text":"","code":"plot_variation_cv(data = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variation in normalized values — plot_variation_cv","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variation in normalized values — plot_variation_cv","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the variation in normalized values — plot_variation_cv","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   plot_variation_cv() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [158ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [131ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [511ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [339ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.2s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess  #> TableGrob (2 x 2) \"arrange\": 3 grobs #>   z     cells    name                 grob #> 1 1 (2-2,1-1) arrange       gtable[layout] #> 2 2 (2-2,2-2) arrange       gtable[layout] #> 3 3 (1-1,1-2) arrange text[GRID.text.5166]"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the PCA variation in normalized values — plot_variation_pca","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"plot_variation_pca() GGplot2 implementation plotting variability normalized values PCA analysis, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"","code":"plot_variation_pca(data = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_variation_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%   normalize(.method = c(\"linear\", \"loess\", \"randomforest\")) %>%   plot_variation_pca() #> ℹ Normalizing quantitative data #> ℹ ... using linear regression #> ✔ ... using linear regression [228ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.3s] #>  #> ℹ ... using randomforest regression #> ✔ ... using randomforest regression [54.4s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"GGplot2 extension to plot a Venn diagram — plot_venn","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"GGplot2 extension plot Venn diagram","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"","code":"plot_venn(data, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_venn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    subset(match_between_runs == FALSE) %>%    plot_venn() #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot of expression values — plot_volcano","title":"Volcano plot of expression values — plot_volcano","text":"plot_volcano() GGplot2 implementation plotting expression differences foldchange ~ statistical significance. See also plot_proportion().  function can take either tidyproteomics data object table required headers.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot of expression values — plot_volcano","text":"","code":"plot_volcano(   data = NULL,   ...,   log2fc_min = 2,   log2fc_column = \"log2_foldchange\",   significance_max = 0.05,   significance_column = \"adj_p_value\",   labels_column = NULL,   show_pannels = TRUE,   show_lines = TRUE,   show_fc_scale = TRUE,   point_size = NULL,   color_positive = \"dodgerblue\",   color_negative = \"firebrick1\",   destination = \"plot\",   height = 5,   width = 8 )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot of expression values — plot_volcano","text":"data tibble ... two sample comparison log2fc_min numeric defining minimum log2 foldchange highlight. log2fc_column character defining column name log2 foldchange values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. labels_column character defining column name column labeling. show_pannels boolean showing colored /expression panels. show_lines boolean showing threshold lines. show_fc_scale boolean showing secondary foldchange scale. point_size character reference numerical value expression table color_positive character defining color positive () expression. color_negative character defining color negative () expression. destination character string height numeric width numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot of expression values — plot_volcano","text":"ggplot2 object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/plot_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano plot of expression values — plot_volcano","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    expression(knockdown/control) %>%    plot_volcano(knockdown/control, log2fc_min = 0.5, significance_column = \"p_value\") #> Warning: ggrepel: 381 unlabeled data points (too many overlaps). Consider increasing max.overlaps   # generates the same out come # hela_proteins %>% #     expression(knockdown/control) %>% #     export_analysis(knockdown/control, .analysis = \"expression\") %>% #     plot_volcano(log2fc_min = 0.5, significance_column = \"p_value\")  # display the gene name instead hela_proteins %>%    expression(knockdown/control) %>%    plot_volcano(knockdown/control, log2fc_min = 0.5, significance_column = \"p_value\", labels_column = \"gene_name\") #> Warning: Removed 13 rows containing missing values (`geom_text_repel()`). #> Warning: ggrepel: 362 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/print.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — print.tidyproteomics","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"Tidy-Quant data object print definition","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/print.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"","code":"# S3 method for tidyproteomics print(x, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/print.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"x tidyproteomics data object ... unused legacy","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/print.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"print object summary","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/println.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for printing messages — println","title":"Helper function for printing messages — println","text":"Helper function printing messages","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/println.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for printing messages — println","text":"","code":"println(name = \"\", message = \"\", pad_length = 15)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/println.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for printing messages — println","text":"name string message string pad_length string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/println.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for printing messages — println","text":"console print line","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a peptide data to protein sequences for visualization — protein_map","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"Align peptide data protein sequences visualization","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"","code":"protein_map(data = NULL, fasta_path = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"data tidyproteomics data-object, specifically peptide origin fasta_path character string representing path fasta file","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"list protein mappings","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  hela_protein_map <- hela_peptides %>%    protein_map(fasta = path_to_package_data('fasta')) #> ℹ Parsing FASTA file human.fasta #> ✔ Parsing FASTA file human.fasta ... done #>  #> ℹ Sequence mapping #>   Sequence mapping ■■■■■■■■■■■■                      38% | ETA:  3s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■       88% | ETA:  1s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> ℹ Sequence mapping #> ✔ Sequence mapping ... done #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map_munge.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a peptide data to protein sequences for visualization — protein_map_munge","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"Align peptide data protein sequences visualization","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map_munge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"","code":"protein_map_munge(   mapped_data = NULL,   protein = NULL,   row_length = 50,   samples = NULL,   modifications = NULL )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map_munge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"mapped_data tidyproteomics data-object, specifically peptide origin protein character string row_length numeric samples character string modifications character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/protein_map_munge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"plot munged list protein mappings","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data by format type — read_data","title":"Read data by format type — read_data","text":"read_data() helper function assumes format type data table checking ending path string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data by format type — read_data","text":"","code":"read_data(path = NULL, platform = NULL, analyte = c(\"peptides\", \"proteins\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data by format type — read_data","text":"path path character string platform character string analyte character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data by format type — read_data","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_mzTab.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data — read_mzTab","title":"A helper function for importing peptide table data — read_mzTab","text":"helper function importing peptide table data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_mzTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data — read_mzTab","text":"","code":"read_mzTab(path = NULL, analyte = c(\"peptides\", \"proteins\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_mzTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data — read_mzTab","text":"path character string analyte character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/read_mzTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data — read_mzTab","text":"tidyproteomics list data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reassign.html","id":null,"dir":"Reference","previous_headings":"","what":"reassign the sample info — reassign","title":"reassign the sample info — reassign","text":"reassign() enables editing sample descriptive experimental table. function replace sample string update replicate number.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reassign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reassign the sample info — reassign","text":"","code":"reassign(data = NULL, ..., .replace = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reassign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reassign the sample info — reassign","text":"data tidyproteomics data-object ... three part expression (eg. x == ) .replace character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reassign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reassign the sample info — reassign","text":"tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reassign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reassign the sample info — reassign","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # check the experiment table hela_proteins %>% summary(\"experiment\") #>  #> ── Summary: experiment ── #>  #>  sample_id                import_file sample_file    sample replicate #>   e9b20ea7 p97KD_HCT116_proteins.xlsx          f1   control         1 #>   ef79cc4c p97KD_HCT116_proteins.xlsx          f4   control         2 #>   eebba67b p97KD_HCT116_proteins.xlsx          f5   control         3 #>   ebf4b0fe p97KD_HCT116_proteins.xlsx          f2 knockdown         1 #>   ea36dac9 p97KD_HCT116_proteins.xlsx          f3 knockdown         2 #>   ecfd1822 p97KD_HCT116_proteins.xlsx          f6 knockdown         3 #>   # make the modification hela_proteins %>%    reassign(sample == \"control\", .replace = \"ct\") %>%    reassign(sample == \"knockdown\", .replace = \"kd\") %>%    summary(\"sample\") #> ℹ Reassigning 1, 2, and 3 #> ℹ Reassigning 4, 5, and 6 #>  #> ── Summary: sample ── #>  #>  sample proteins peptides peptides_unique quantifiable  CVs #>      ct     7055    66329           58706        0.908 0.16 #>      kd     7055    66329           58706        0.909 0.21 #>   # reassign specific file_ids hela_proteins %>%    reassign(sample_file == \"f1\", .replace = \"new\") %>%    reassign(sample_file == \"f2\", .replace = \"new\") %>%    summary(\"sample\") #> ℹ Reassigning 1 #> ℹ Reassigning 4 #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.14 #>  knockdown     7055    66329           58706        0.908 0.24 #>        new     7055    66329           58706        0.908 0.21 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reverselog_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse the plot axis for log transformation — reverselog_transformation","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"Reverse plot axis log transformation","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reverselog_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"","code":"reverselog_transformation(base = exp(1))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reverselog_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"base numeric","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/reverselog_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"ggplot scale transformation","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rf_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"parallel compute function for randomforest — rf_parallel","title":"parallel compute function for randomforest — rf_parallel","text":"parallel compute function randomforest","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rf_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parallel compute function for randomforest — rf_parallel","text":"","code":"rf_parallel(df)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rf_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parallel compute function for randomforest — rf_parallel","text":"df tibble raw centered values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rf_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parallel compute function for randomforest — rf_parallel","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rm.mbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove MBR from the dataset across segments — rm.mbr","title":"Remove MBR from the dataset across segments — rm.mbr","text":"rm.mbr() function designed remove match_between_runs segments. function return smaller tidyproteomics data-object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rm.mbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove MBR from the dataset across segments — rm.mbr","text":"","code":"rm.mbr(data = NULL, ..., .groups = c(\"all\", \"sample\"))"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rm.mbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove MBR from the dataset across segments — rm.mbr","text":"data tidyproteomics data object ... three part expression (eg. x == ) .groups character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rm.mbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove MBR from the dataset across segments — rm.mbr","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/rm.mbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove MBR from the dataset across segments — rm.mbr","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  hela_proteins %>%    summary('sample') #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 #>   hela_proteins %>%    rm.mbr(.groups = 'sample') %>%    summary('sample') #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     6527    65121           58003        0.920 0.16 #>  knockdown     6556    65344           58095        0.918 0.21 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Store data locally — save_local","title":"Store data locally — save_local","text":"save_local() save tidyproteomics data-object local project, based given type directory ./data/ either proteins.rds peptides.rds. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store data locally — save_local","text":"","code":"save_local(data = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store data locally — save_local","text":"data tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store data locally — save_local","text":"tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Write table data locally — save_table","title":"Write table data locally — save_table","text":"save_table() save summary tibble root directory local project, based extension given file name. passthrough function returns original tibble.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write table data locally — save_table","text":"","code":"save_table(table, file_name = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write table data locally — save_table","text":"table tibble file_name file name extensions one (.csv, .tsv, .rds, .xlsx)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write table data locally — save_table","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/save_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write table data locally — save_table","text":"","code":"if (FALSE) { library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>%    expression(knockdown/control) %>%    export_analysis(knockdown/control, .analysis = \"expression\") %>%    save_table(\"expression_limma_ko_over_wt.csv\") }"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/select_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a normalization method — select_normalization","title":"Select a normalization method — select_normalization","text":"select_normalization() selects best normalization method base low CVs, low PCA (PC1), wide Dynamic Range. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/select_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a normalization method — select_normalization","text":"","code":"select_normalization(data = NULL, normalization = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/select_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a normalization method — select_normalization","text":"data tidyproteomics data object normalization character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/select_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a normalization method — select_normalization","text":"tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/select_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a normalization method — select_normalization","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins <- hela_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\",\"randomforest\")) %>%   select_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [163ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [429ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [212ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [338ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [1.3s] #>  #> ℹ ... using randomforest regression #> ✔ ... using randomforest regression [35s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/set_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"set a named vector — set_vect","title":"set a named vector — set_vect","text":"set named vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/set_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set a named vector — set_vect","text":"","code":"set_vect(config = NULL, category = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/set_vect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set a named vector — set_vect","text":"config data.frame configuration values category character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/set_vect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set a named vector — set_vect","text":"named vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/show_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the current annotation data — show_annotations","title":"Display the current annotation data — show_annotations","text":"Display current annotation data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/show_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the current annotation data — show_annotations","text":"","code":"show_annotations(data, term = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/show_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the current annotation data — show_annotations","text":"data tidyproteomics data object term character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/show_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the current annotation data — show_annotations","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/show_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the current annotation data — show_annotations","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  hela_proteins %>% show_annotations() #> ℹ Current Annotation Terms #>   • protein #>   • description #>   • gene_id_entrez #>   • gene_id_ensemble #>   • gene_name #>   • biological_process #>   • cellular_component #>   • molecular_function #>   • wiki_pathway #>   • reactome_pathway  hela_proteins %>% show_annotations('reactome_pathway') #> ℹ Descriptions for reactome_pathway #>   • Assembly of collagen fibrils and other multimeric structures #>   • Caspase-mediated cleavage of cytoskeletal proteins #>   • Type I hemidesmosome assembly #>   • NA #>   • Separation of Sister Chromatids #>   • MHC class II antigen presentation #>   • Resolution of Sister Chromatid Cohesion #>   • HSP90 chaperone cycle for steroid hormone receptors (SHR) in the presence #>   of ligand #>   • Recruitment of NuMA to mitotic centrosomes #>   • RHO GTPases Activate Formins #>   • COPI-mediated anterograde transport #>   • COPI-independent Golgi-to-ER retrograde traffic #>   • HCMV Early Events #>   • Aggrephagy #>   • EML4 and NUDC in mitotic spindle formation #>   • Regulation of PLK1 Activity at G2/M Transition #>   • Loss of Nlp from mitotic centrosomes #>   • Recruitment of mitotic centrosome proteins and complexes #>   • Anchoring of the basal body to the plasma membrane #>   • AURKA Activation by TPX2 #>   • Neutrophil degranulation #>   • Amplification of signal from unattached kinetochores via a MAD2 inhibitory #>   signal #>   • ChREBP activates metabolic gene expression #>   • Activation of gene expression by SREBF (SREBP) #>   • Fatty acyl-CoA biosynthesis #>   • NR1H2 & NR1H3 regulate gene expression linked to lipogenesis #>   • Vitamin B5 (pantothenate) metabolism #>   • E3 ubiquitin ligases ubiquitinate target proteins #>   • Cytosolic sensors of pathogen-associated DNA #>   • Nonhomologous End-Joining (NHEJ) #>   • IRF3-mediated induction of type I IFN #>   • OAS antiviral response #>   • Platelet degranulation #>   • RHO GTPases activate PAKs #>   • GP1b-IX-V activation signalling #>   • Cell-extracellular matrix interactions #>   • Regulation of actin dynamics for phagocytic cup formation #>   • FCGR3A-mediated phagocytosis #>   • Sensory processing of sound by inner hair cells of the cochlea #>   • Sensory processing of sound by outer hair cells of the cochlea #>   • Translocation of SLC2A4 (GLUT4) to the plasma membrane #>   • Signaling by ALK fusions and activated point mutants #>   • RHO GTPases activate CIT #>   • EPHA-mediated growth cone collapse #>   • Sema4D induced cell migration and growth-cone collapse #>   • RHO GTPases activate PKNs #>   • RHO GTPases Activate ROCKs #>   • CD163 mediating an anti-inflammatory response #>   • ISG15 antiviral mechanism #>   • Platelet degranulation #>   • Signaling by BRAF and RAF1 fusions #>   • XBP1(S) activates chaperone genes #>   • SEMA3A-Plexin repulsion signaling by inhibiting Integrin adhesion #>   • Smooth Muscle Contraction #>   • Signaling by moderate kinase activity BRAF mutants #>   • Paradoxical activation of RAF signaling by kinase inactive BRAF #>   • Signaling downstream of RAS mutants #>   • Signaling by RAF1 mutants #>   • MAP2K and MAPK activation #>   • Signaling by high-kinase activity BRAF mutants #>   • GRB2:SOS provides linkage to MAPK signaling for Integrins #>   • p130Cas linkage to MAPK signaling for integrins #>   • Sensory processing of sound by inner hair cells of the cochlea #>   • RHOV GTPase cycle #>   • RHOU GTPase cycle #>   • Nephrin family interactions #>   • RAF/MAP kinase cascade #>   • NCAM signaling for neurite out-growth #>   • Interaction between L1 and Ankyrins #>   • Signaling by FLT3 fusion proteins #>   • RHOD GTPase cycle #>   • RHOF GTPase cycle #>   • Antigen processing: Ubiquitination & Proteasome degradation #>   • Cell-extracellular matrix interactions #>   • Formation of the cornified envelope #>   • RND3 GTPase cycle #>   • RND1 GTPase cycle #>   • Apoptotic cleavage of cell adhesion proteins #>   • Recruitment of NuMA to mitotic centrosomes #>   • Mitotic Prophase #>   • mRNA Splicing - Major Pathway #>   • mRNA Splicing - Minor Pathway #>   • RHOC GTPase cycle #>   • RHOA GTPase cycle #>   • CDC42 GTPase cycle #>   • RAC1 GTPase cycle #>   • RHOQ GTPase cycle #>   • RHO GTPases activate IQGAPs #>   • RAC2 GTPase cycle #>   • Glucagon-like Peptide-1 (GLP1) regulates insulin secretion #>   • SARS-CoV-2 activates/modulates innate and adaptive immune responses #>   • HCMV Late Events #>   • Separation of Sister Chromatids #>   • ISG15 antiviral mechanism #>   • Transport of the SLBP independent Mature mRNA #>   • Transport of the SLBP Dependant Mature mRNA #>   • Transport of Mature mRNA Derived from an Intronless Transcript #>   • Transport of Mature mRNA derived from an Intron-Containing Transcript #>   • Rev-mediated nuclear export of HIV RNA #>   • Transport of Ribonucleoproteins into the Host Nucleus #>   • NS1 Mediated Effects on Host Pathways #>   • Viral Messenger RNA Synthesis #>   • NEP/NS2 Interacts with the Cellular Export Machinery #>   • Regulation of Glucokinase by Glucokinase Regulatory Protein #>   • Nuclear import of Rev protein #>   • Vpr-mediated nuclear import of PICs #>   • snRNP Assembly #>   • SUMOylation of DNA damage response and repair proteins #>   • SUMOylation of ubiquitinylation proteins #>   • Nuclear Pore Complex (NPC) Disassembly #>   • Regulation of HSF1-mediated heat shock response #>   • SUMOylation of SUMOylation proteins #>   • SUMOylation of chromatin organization proteins #>   • SUMOylation of RNA binding proteins #>   • SUMOylation of DNA replication proteins #>   • Transcriptional regulation by small RNAs #>   • Defective TPR may confer susceptibility towards thyroid papillary carcinoma #>   (TPC) #>   • tRNA processing in the nucleus #>   • EPHA-mediated growth cone collapse #>   • Respiratory electron transport #>   • TP53 Regulates Metabolic Genes #>   • Cytoprotection by HMOX1 #>   • HCMV Late Events #>   • SARS-CoV-2 activates/modulates innate and adaptive immune responses #>   • tRNA modification in the nucleus and cytosol #>   • Selenoamino acid metabolism #>   • Cytosolic tRNA aminoacylation #>   • Pyrimidine biosynthesis #>   • B-WICH complex positively regulates rRNA expression #>   • mRNA Splicing - Major Pathway #>   • Neutrophil degranulation #>   • Protein methylation #>   • Uptake and function of diphtheria toxin #>   • Peptide chain elongation #>   • Synthesis of diphthamide-EEF2 #>   • Syndecan interactions #>   • RHOBTB2 GTPase cycle #>   • Regulation of cytoskeletal remodeling and cell spreading by IPP complex #>   components #>   • RHO GTPases activate CIT #>   • Cytosolic tRNA aminoacylation #>   • Synthesis of active ubiquitin: roles of E1 and E2 enzymes #>   • Antigen processing: Ubiquitination & Proteasome degradation #>   • Regulation of Insulin-like Growth Factor (IGF) transport and uptake by #>   Insulin-like Growth Factor Binding Proteins (IGFBPs) #>   • Post-translational protein phosphorylation #>   • Interleukin-4 and Interleukin-13 signaling #>   • Trafficking and processing of endosomal TLR #>   • Scavenging by Class A Receptors #>   • ATF6 (ATF6-alpha) activates chaperone genes #>   • Regulation of HSF1-mediated heat shock response #>   • COPI-mediated anterograde transport #>   • COPI-dependent Golgi-to-ER retrograde traffic #>   • RIP-mediated NFkB activation via ZBP1 #>   • DEx/H-box helicases activate type I IFN and inflammatory cytokines #>   production #>   • Potential therapeutics for SARS #>   • The role of GTSE1 in G2/M progression after G2 checkpoint #>   • Extra-nuclear estrogen signaling #>   • vRNP Assembly #>   • Estrogen-dependent gene expression #>   • Regulation of necroptotic cell death #>   • Downregulation of ERBB2 signaling #>   • Signaling by ERBB2 KD Mutants #>   • Signaling by ERBB2 TMD/JMD mutants #>   • Sema3A PAK dependent Axon repulsion #>   • DDX58/IFIH1-mediated induction of interferon-alpha/beta #>   • PIWI-interacting RNA (piRNA) biogenesis #>   • VEGFR2 mediated vascular permeability #>   • Chaperone Mediated Autophagy #>   • HSF1 activation #>   • Attenuation phase #>   • eNOS activation #>   • Tetrahydrobiopterin (BH4) synthesis, recycling, salvage and regulation #>   • Constitutive Signaling by Ligand-Responsive EGFR Cancer Variants #>   • Constitutive Signaling by EGFRvIII #>   • Signaling by ERBB2 ECD mutants #>   • Constitutive Signaling by Overexpressed ERBB2 #>   • Scavenging by Class F Receptors #>   • Drug-mediated inhibition of ERBB2 signaling #>   • Resistance of ERBB2 KD mutants to trastuzumab #>   • Resistance of ERBB2 KD mutants to sapitinib #>   • Resistance of ERBB2 KD mutants to tesevatinib #>   • Resistance of ERBB2 KD mutants to neratinib #>   • Resistance of ERBB2 KD mutants to osimertinib #>   • Resistance of ERBB2 KD mutants to afatinib #>   • Resistance of ERBB2 KD mutants to AEE788 #>   • Resistance of ERBB2 KD mutants to lapatinib #>   • Drug resistance in ERBB2 TMD/JMD mutants #>   • Aryl hydrocarbon receptor signalling #>   • The NLRP3 inflammasome #>   • Purinergic signaling in leishmaniasis infection #>   • Butyrophilin (BTN) family interactions #>   • Selenoamino acid metabolism #>   • Effects of PIP2 hydrolysis #>   • Role of phospholipids in phagocytosis #>   • FCERI mediated Ca+2 mobilization #>   • FCGR3A-mediated IL10 synthesis #>   • Antigen activates B Cell Receptor (BCR) leading to generation of second #>   messengers #>   • Sensory perception of sweet, bitter, and umami (glutamate) taste #>   • Ion homeostasis #>   • Ca2+ pathway #>   • VEGFR2 mediated cell proliferation #>   • Elevation of cytosolic Ca2+ levels #>   • PLC beta mediated events #>   • DAG and IP3 signaling #>   • CLEC7A (Dectin-1) induces NFAT activation #>   • Laminin interactions #>   • Purine ribonucleoside monophosphate biosynthesis #>   • Maturation of spike protein #>   • Calnexin/calreticulin cycle #>   • Maturation of spike protein #>   • Major pathway of rRNA processing in the nucleolus and cytosol #>   • rRNA modification in the nucleus and cytosol #>   • ABC-family proteins mediated transport #>   • Hedgehog ligand biogenesis #>   • Hh mutants are degraded by ERAD #>   • Defective CFTR causes cystic fibrosis #>   • Neddylation #>   • KEAP1-NFE2L2 pathway #>   • Attachment and Entry #>   • Ovarian tumor domain proteases #>   • Josephin domain DUBs #>   • RHOH GTPase cycle #>   • Translesion Synthesis by POLH #>   • N-glycan trimming in the ER and Calnexin/Calreticulin cycle #>   • Mitochondrial protein import #>   • TFAP2A acts as a transcriptional repressor during retinoic acid induced #>   cell differentiation #>   • Golgi Associated Vesicle Biogenesis #>   • L13a-mediated translational silencing of Ceruloplasmin expression #>   • Translation initiation complex formation #>   • Formation of a pool of free 40S subunits #>   • Formation of the ternary complex, and subsequently, the 43S complex #>   • Ribosomal scanning and start codon recognition #>   • GTP hydrolysis and joining of the 60S ribosomal subunit #>   • Biotin transport and metabolism #>   • Carnitine metabolism #>   • Defective HLCS causes multiple carboxylase deficiency #>   • RHO GTPases activate IQGAPs #>   • Myogenesis #>   • Adherens junctions interactions #>   • vRNP Assembly #>   • Nuclear events mediated by NFE2L2 #>   • Pentose phosphate pathway #>   • Insulin effects increased synthesis of Xylulose-5-Phosphate #>   • ChREBP activates metabolic gene expression #>   • Recruitment and ATM-mediated phosphorylation of repair and signaling #>   proteins at DNA double strand breaks #>   • Processing of DNA double-strand break ends #>   • G2/M DNA damage checkpoint #>   • SUMOylation of transcription factors #>   • XBP1(S) activates chaperone genes #>   • Signaling by ALK fusions and activated point mutants #>   • MAPK6/MAPK4 signaling #>   • NPAS4 regulates expression of target genes #>   • Heme signaling #>   • Deactivation of the beta-catenin transactivating complex #>   • Estrogen-dependent nuclear events downstream of ESR-membrane signaling #>   • Downregulation of TGF-beta receptor signaling #>   • HuR (ELAVL1) binds and stabilizes mRNA #>   • Cyclin A/B1/B2 associated events during G2/M transition #>   • SUMOylation of DNA damage response and repair proteins #>   • Downregulation of SMAD2/3:SMAD4 transcriptional activity #>   • HDR through MMEJ (alt-NHEJ) #>   • Formation of Incision Complex in GG-NER #>   • DNA Damage Recognition in GG-NER #>   • vRNA Synthesis #>   • POLB-Dependent Long Patch Base Excision Repair #>   • Dual Incision in GG-NER #>   • Recycling pathway of L1 #>   • RHO GTPases Activate WASPs and WAVEs #>   • Clathrin-mediated endocytosis #>   • EPHB-mediated forward signaling #>   • VEGFA-VEGFR2 Pathway #>   • EPH-ephrin mediated repulsion of cells #>   • Formation of annular gap junctions #>   • ER Quality Control Compartment (ERQC) #>   • Iron uptake and transport #>   • FGFR2 alternative splicing #>   • Processing of Capped Intron-Containing Pre-mRNA #>   • Late endosomal microautophagy #>   • AUF1 (hnRNP D0) binds and destabilizes mRNA #>   • Lysosome Vesicle Biogenesis #>   • CHL1 interactions #>   • GABA synthesis, release, reuptake and degradation #>   • Lipophagy #>   • UCH proteinases #>   • Regulation of actin dynamics for phagocytic cup formation #>   • B-WICH complex positively regulates rRNA expression #>   • Factors involved in megakaryocyte development and platelet production #>   • HATs acetylate histones #>   • Prefoldin mediated transfer of substrate to CCT/TriC #>   • Folding of actin by CCT/TriC #>   • Formation of tubulin folding intermediates by CCT/TriC #>   • BBSome-mediated cargo-targeting to cilium #>   • Association of TriC/CCT with target proteins during biosynthesis #>   • Cooperation of PDCL (PhLP1) and TRiC/CCT in G-protein beta folding #>   • RHOBTB1 GTPase cycle #>   • ER-Phagosome pathway #>   • Antigen Presentation: Folding, assembly and peptide loading of class I MHC #>   • Assembly of Viral Components at the Budding Site #>   • Regulation of expression of SLITs and ROBOs #>   • FCERI mediated NF-kB activation #>   • Downstream TCR signaling #>   • Activation of NF-kappaB in B cells #>   • Oxygen-dependent proline hydroxylation of Hypoxia-inducible Factor Alpha #>   • ER-Phagosome pathway #>   • Cross-presentation of soluble exogenous antigens (endosomes) #>   • SCF-beta-TrCP mediated degradation of Emi1 #>   • APC/C:Cdc20 mediated degradation of Securin #>   • APC/C:Cdh1 mediated degradation of Cdc20 and other APC/C:Cdh1 targeted #>   proteins in late mitosis/early G1 #>   • Cdc20:Phospho-APC/C mediated degradation of Cyclin A #>   • Vpu mediated degradation of CD4 #>   • Vif-mediated degradation of APOBEC3G #>   • Degradation of beta-catenin by the destruction complex #>   • Regulation of activated PAK-2p34 by proteasome mediated degradation #>   • Autodegradation of the E3 ubiquitin ligase COP1 #>   • Regulation of ornithine decarboxylase (ODC) #>   • Asymmetric localization of PCP proteins #>   • Degradation of AXIN #>   • Degradation of DVL #>   • Dectin-1 mediated noncanonical NF-kB signaling #>   • Degradation of GLI1 by the proteasome #>   • Degradation of GLI2 by the proteasome #>   • GLI3 is processed to GLI3R by the proteasome #>   • Hedgehog 'on' state #>   • Regulation of RAS by GAPs #>   • NIK-->noncanonical NF-kB signaling #>   • UCH proteinases #>   • Ub-specific processing proteases #>   • Orc1 removal from chromatin #>   • CDK-mediated phosphorylation and removal of Cdc6 #>   • G2/M Checkpoints #>   • Ubiquitin Mediated Degradation of Phosphorylated Cdc25A #>   • Ubiquitin-dependent degradation of Cyclin D #>   • FBXL7 down-regulates AURKA during mitotic entry and in early mitosis #>   • RUNX1 regulates transcription of genes involved in differentiation of HSCs #>   • Regulation of RUNX2 expression and activity #>   • Regulation of PTEN stability and activity #>   • Interleukin-1 signaling #>   • Autodegradation of Cdh1 by Cdh1:APC/C #>   • SCF(Skp2)-mediated degradation of p27/p21 #>   • Assembly of the pre-replicative complex #>   • Regulation of RUNX3 expression and activity #>   • Negative regulation of NOTCH4 signaling #>   • GSK3B and BTRC:CUL1-mediated-degradation of NFE2L2 #>   • FCERI mediated NF-kB activation #>   • RHOA GTPase cycle #>   • RND2 GTPase cycle #>   • RHOG GTPase cycle #>   • Regulation of Insulin-like Growth Factor (IGF) transport and uptake by #>   Insulin-like Growth Factor Binding Proteins (IGFBPs) #>   • RHO GTPases activate KTN1 #>   • Neddylation #>   • Formation of TC-NER Pre-Incision Complex #>   • Dual incision in TC-NER #>   • Gap-filling DNA repair synthesis and ligation in TC-NER #>   • Recognition of DNA damage by PCNA-containing replication complex #>   • Transcriptional activation of mitochondrial biogenesis #>   • Mitochondrial protein import #>   • Cristae formation #>   • Formation of ATP by chemiosmotic coupling #>   • Signaling by BRAF and RAF1 fusions #>   • Generic Transcription Pathway #>   • SUMOylation of transcription cofactors #>   • Glycolysis #>   • Cell surface interactions at the vascular wall #>   • Intraflagellar transport #>   • Microtubule-dependent trafficking of connexons from Golgi to the plasma #>   membrane #>   • Gap junction assembly #>   • Formation of tubulin folding intermediates by CCT/TriC #>   • Post-chaperonin tubulin folding pathway #>   • Carboxyterminal post-translational modifications of tubulin #>   • Assembly and cell surface presentation of NMDA receptors #>   • Activation of AMPK downstream of NMDARs #>   • Sealing of the nuclear envelope (NE) by ESCRT-III #>   • Kinesins #>   • Hedgehog 'off' state #>   • Glycogen breakdown (glycogenolysis) #>   • COPI-dependent Golgi-to-ER retrograde traffic #>   • Insulin processing #>   • Nuclear events stimulated by ALK signaling in cancer #>   • snRNP Assembly #>   • SARS-CoV-2 modulates host translation machinery #>   • 2-LTR circle formation #>   • Potential therapeutics for SARS #>   • Ion homeostasis #>   • Ion transport by P-type ATPases #>   • Pre-NOTCH Processing in Golgi #>   • Reduction of cytosolic Ca++ levels #>   • IRE1alpha activates chaperones #>   • PERK regulates gene expression #>   • Purine ribonucleoside monophosphate biosynthesis #>   • Orc1 removal from chromatin #>   • Activation of ATR in response to replication stress #>   • Activation of the pre-replicative complex #>   • Unwinding of DNA #>   • Degradation of the extracellular matrix #>   • Deregulated CDK5 triggers multiple neurodegenerative pathways in #>   Alzheimer's disease models #>   • rRNA modification in the nucleus and cytosol #>   • Gene and protein expression by JAK-STAT signaling after Interleukin-12 #>   stimulation #>   • Interferon alpha/beta signaling #>   • C6 deamination of adenosine #>   • Formation of editosomes by ADAR proteins #>   • Gluconeogenesis #>   • Manipulation of host energy metabolism #>   • Formation of the cornified envelope #>   • RHOB GTPase cycle #>   • RHOJ GTPase cycle #>   • Mitochondrial tRNA aminoacylation #>   • Ub-specific processing proteases #>   • Amyloid fiber formation #>   • Synthesis of active ubiquitin: roles of E1 and E2 enzymes #>   • Peroxisomal protein import #>   • Meiotic synapsis #>   • Establishment of Sister Chromatid Cohesion #>   • Cohesin Loading onto Chromatin #>   • Recycling pathway of L1 #>   • Formation of RNA Pol II elongation complex #>   • RNA Polymerase II Pre-transcription Events #>   • G alpha (q) signalling events #>   • G beta:gamma signalling through PLC beta #>   • Presynaptic function of Kainate receptors #>   • Fatty Acids bound to GPR40 (FFAR1) regulate insulin secretion #>   • Synthesis of IP3 and IP4 in the cytosol #>   • Acetylcholine regulates insulin secretion #>   • Cargo recognition for clathrin-mediated endocytosis #>   • WNT5A-dependent internalization of FZD4 #>   • LDL clearance #>   • Nef Mediated CD4 Down-regulation #>   • Retrograde neurotrophin signalling #>   • Nef Mediated CD8 Down-regulation #>   • WNT5A-dependent internalization of FZD2, FZD5 and ROR2 #>   • VLDLR internalisation and degradation #>   • Postmitotic nuclear pore complex (NPC) reformation #>   • Apoptosis induced DNA fragmentation #>   • Interferon alpha/beta signaling #>   • Regulation of cholesterol biosynthesis by SREBP (SREBF) #>   • SARS-CoV-1 activates/modulates innate immune responses #>   • Assembly of the ORC complex at the origin of replication #>   • Initiation of Nuclear Envelope (NE) Reformation #>   • Inhibition of nitric oxide production #>   • Formation of HIV elongation complex in the absence of HIV Tat #>   • Formation of HIV-1 elongation complex containing HIV-1 Tat #>   • Pausing and recovery of Tat-mediated HIV elongation #>   • Tat-mediated HIV elongation arrest and recovery #>   • HIV elongation arrest and recovery #>   • Pausing and recovery of HIV elongation #>   • TP53 Regulates Transcription of DNA Repair Genes #>   • Regulation of TP53 Activity through Phosphorylation #>   • Synthesis of UDP-N-acetyl-glucosamine #>   • Defective GFPT1 causes CMSTA1 #>   • Deadenylation of mRNA #>   • TP53 regulates transcription of additional cell cycle genes whose exact #>   role in the p53 pathway remain uncertain #>   • Azathioprine ADME #>   • Mitochondrial translation elongation #>   • SARS-CoV-2 modulates autophagy #>   • tRNA processing in the nucleus #>   • RAB GEFs exchange GTP for GDP on RABs #>   • Citric acid cycle (TCA cycle) #>   • Formation of TC-NER Pre-Incision Complex #>   • Formation of RNA Pol II elongation complex #>   • Formation of the Early Elongation Complex #>   • Formation of the HIV-1 Early Elongation Complex #>   • RNA Pol II CTD phosphorylation and interaction with CE during HIV infection #>   • Abortive elongation of HIV-1 transcript in the absence of Tat #>   • RNA polymerase II transcribes snRNA genes #>   • mRNA Capping #>   • RNA Pol II CTD phosphorylation and interaction with CE #>   • HIV Transcription Initiation #>   • RNA Polymerase II HIV Promoter Escape #>   • RNA Polymerase II Promoter Escape #>   • RNA Polymerase II Transcription Pre-Initiation And Promoter Opening #>   • RNA Polymerase II Transcription Initiation #>   • Activation of anterior HOX genes in hindbrain development during early #>   embryogenesis #>   • MicroRNA (miRNA) biogenesis #>   • Signaling by FGFR2 IIIa TM #>   • Inhibition of DNA recombination at telomere #>   • Biosynthesis of protectins #>   • Synthesis of Leukotrienes (LT) and Eoxins (EX) #>   • Biosynthesis of D-series resolvins #>   • Biosynthesis of E-series 18(S)-resolvins #>   • Biosynthesis of aspirin-triggered D-series resolvins #>   • Biosynthesis of E-series 18(R)-resolvins #>   • Smooth Muscle Contraction #>   • Mitochondrial tRNA aminoacylation #>   • MHC class II antigen presentation #>   • Interleukin-35 Signalling #>   • Interleukin-27 signaling #>   • Cristae formation #>   • Lysine catabolism #>   • Glyoxylate metabolism and glycine degradation #>   • Citric acid cycle (TCA cycle) #>   • Trafficking of GluR2-containing AMPA receptors #>   • Platelet degranulation #>   • HSP90 chaperone cycle for steroid hormone receptors (SHR) in the presence #>   of ligand #>   • Intraflagellar transport #>   • RHOG GTPase cycle #>   • Metabolism of folate and pterines #>   • Carboxyterminal post-translational modifications of tubulin #>   • Budding and maturation of HIV virion #>   • Uptake and function of anthrax toxins #>   • SRP-dependent cotranslational protein targeting to membrane #>   • Asparagine N-linked glycosylation #>   • ATF4 activates genes in response to endoplasmic reticulum stress #>   • KSRP (KHSRP) binds and destabilizes mRNA #>   • Tristetraprolin (TTP, ZFP36) binds and destabilizes mRNA #>   • Butyrate Response Factor 1 (BRF1) binds and destabilizes mRNA #>   • mRNA decay by 3' to 5' exoribonuclease #>   • RND2 GTPase cycle #>   • Apoptotic cleavage of cellular proteins #>   • Recruitment and ATM-mediated phosphorylation of repair and signaling #>   proteins at DNA double strand breaks #>   • Apoptotic execution phase #>   • Toll Like Receptor 9 (TLR9) Cascade #>   • Beta oxidation of palmitoyl-CoA to myristoyl-CoA #>   • RND3 GTPase cycle #>   • Creatine metabolism #>   • Nonsense Mediated Decay (NMD) enhanced by the Exon Junction Complex (EJC) #>   • Nonsense Mediated Decay (NMD) independent of the Exon Junction Complex #>   (EJC) #>   • mRNA decay by 5' to 3' exoribonuclease #>   • Triglyceride catabolism #>   • Retrograde transport at the Trans-Golgi-Network #>   • RHOBTB3 ATPase cycle #>   • TP53 Regulates Metabolic Genes #>   • Nuclear events mediated by NFE2L2 #>   • SUMOylation of RNA binding proteins #>   • Major pathway of rRNA processing in the nucleolus and cytosol #>   • Suppression of apoptosis #>   • PTK6 Regulates Proteins Involved in RNA Processing #>   • Degradation of the extracellular matrix #>   • COPII-mediated vesicle transport #>   • Golgi Cisternae Pericentriolar Stack Reorganization #>   • RHOD GTPase cycle #>   • Depolymerisation of the Nuclear Lamina #>   • Breakdown of the nuclear lamina #>   • Formation of Senescence-Associated Heterochromatin Foci (SAHF) #>   • HDMs demethylate histones #>   • Complex I biogenesis #>   • WNT ligand biogenesis and trafficking #>   • SARS-CoV-1 modulates host translation machinery #>   • Dectin-1 mediated noncanonical NF-kB signaling #>   • PKMTs methylate histone lysines #>   • TAK1-dependent IKK and NF-kappa-B activation #>   • IkBA variant leads to EDA-ID #>   • TRAF6 mediated NF-kB activation #>   • Interleukin-1 processing #>   • DEx/H-box helicases activate type I IFN and inflammatory cytokines #>   production #>   • SUMOylation of immune response proteins #>   • Hedgehog ligand biogenesis #>   • Collagen biosynthesis and modifying enzymes #>   • Detoxification of Reactive Oxygen Species #>   • Interleukin-12 signaling #>   • Interleukin-23 signaling #>   • Chylomicron assembly #>   • VLDL assembly #>   • LDL remodeling #>   • Deposition of new CENPA-containing nucleosomes at the centromere #>   • NoRC negatively regulates rRNA expression #>   • mRNA 3'-end processing #>   • RNA Polymerase II Transcription Termination #>   • Processing of Intronless Pre-mRNAs #>   • ATF4 activates genes in response to endoplasmic reticulum stress #>   • RAC3 GTPase cycle #>   • Transcriptional activation of mitochondrial biogenesis #>   • Interconversion of nucleotide di- and triphosphates #>   • L13a-mediated translational silencing of Ceruloplasmin expression #>   • Fructose catabolism #>   • RNA Polymerase III Abortive And Retractive Initiation #>   • RNA Polymerase III Transcription Initiation From Type 1 Promoter #>   • RNA Polymerase III Transcription Initiation From Type 2 Promoter #>   • Myogenesis #>   • Regulation of TP53 Degradation #>   • PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling #>   • Cyclin D associated events in G1 #>   • Disassembly of the destruction complex and recruitment of AXIN to the #>   membrane #>   • RAF activation #>   • Beta-catenin phosphorylation cascade #>   • Signaling by GSK3beta mutants #>   • CTNNB1 S33 mutants aren't phosphorylated #>   • CTNNB1 S37 mutants aren't phosphorylated #>   • CTNNB1 S45 mutants aren't phosphorylated #>   • CTNNB1 T41 mutants aren't phosphorylated #>   • APC truncation mutants have impaired AXIN binding #>   • AXIN missense mutants destabilize the destruction complex #>   • Truncations of AMER1 destabilize the destruction complex #>   • Nonsense Mediated Decay (NMD) enhanced by the Exon Junction Complex (EJC) #>   • Spry regulation of FGF signaling #>   • MASTL Facilitates Mitotic Progression #>   • Regulation of glycolysis by fructose 2,6-bisphosphate metabolism #>   • Negative regulation of MAPK pathway #>   • Platelet sensitization by LDL #>   • CTLA4 inhibitory signaling #>   • Inhibition of replication initiation of damaged DNA by RB1/E2F1 #>   • DARPP-32 events #>   • PP2A-mediated dephosphorylation of key metabolic factors #>   • ERKs are inactivated #>   • Glycosphingolipid metabolism #>   • Dissolution of Fibrin Clot #>   • PPARA activates gene expression #>   • Transcriptional regulation of white adipocyte differentiation #>   • ABC-family proteins mediated transport #>   • Rev-mediated nuclear export of HIV RNA #>   • Surfactant metabolism #>   • SUMOylation of DNA methylation proteins #>   • PRC2 methylates histones and DNA #>   • Defective pyroptosis #>   • DNA methylation #>   • Golgi Associated Vesicle Biogenesis #>   • RUNX1 interacts with co-factors whose precise effect on RUNX1 targets is #>   not known #>   • RMTs methylate histone arginines #>   • Eukaryotic Translation Elongation #>   • HCMV Early Events #>   • NOTCH3 Activation and Transmission of Signal to the Nucleus #>   • PIP3 activates AKT signaling #>   • Constitutive Signaling by Aberrant PI3K in Cancer #>   • Signaling by ERBB4 #>   • SHC1 events in ERBB2 signaling #>   • GRB2 events in ERBB2 signaling #>   • PI3K events in ERBB2 signaling #>   • ERBB2 Regulates Cell Motility #>   • ERBB2 Activates PTK6 Signaling #>   • Signal transduction by L1 #>   • GRB2 events in EGFR signaling #>   • GAB1 signalosome #>   • SHC1 events in EGFR signaling #>   • EGFR downregulation #>   • EGFR interacts with phospholipase C-gamma #>   • Inhibition of Signaling by Overexpressed EGFR #>   • PLCG1 events in ERBB2 signaling #>   • EGFR Transactivation by Gastrin #>   • PTK6 promotes HIF1A stabilization #>   • TFAP2 (AP-2) family regulates transcription of growth factors and their #>   receptors #>   • Aspartate and asparagine metabolism #>   • Response of EIF2AK1 (HRI) to heme deficiency #>   • Response of EIF2AK4 (GCN2) to amino acid deficiency #>   • Condensation of Prometaphase Chromosomes #>   • MicroRNA (miRNA) biogenesis #>   • Iron uptake and transport #>   • ALKBH3 mediated reversal of alkylation damage #>   • Postmitotic nuclear pore complex (NPC) reformation #>   • Heme biosynthesis #>   • Formation of the active cofactor, UDP-glucuronate #>   • Triglyceride catabolism #>   • Synthesis of PA #>   • SUMOylation of DNA replication proteins #>   • Pyruvate metabolism #>   • PPARA activates gene expression #>   • PINK1-PRKN Mediated Mitophagy #>   • TYSND1 cleaves peroxisomal proteins #>   • Synthesis of bile acids and bile salts via 7alpha-hydroxycholesterol #>   • alpha-linolenic acid (ALA) metabolism #>   • Beta-oxidation of pristanoyl-CoA #>   • Beta-oxidation of very long chain fatty acids #>   • Regulation of pyruvate dehydrogenase (PDH) complex #>   • mTORC1-mediated signalling #>   • Constitutive Signaling by AKT1 E17K in Cancer #>   • Energy dependent regulation of mTOR by LKB1-AMPK #>   • Amino acids regulate mTORC1 #>   • Regulation of PTEN gene transcription #>   • CD28 dependent PI3K/Akt signaling #>   • Macroautophagy #>   • HSF1-dependent transactivation #>   • Interferon gamma signaling #>   • NF-kB activation through FADD/RIP-1 pathway mediated by caspase-8 and -10 #>   • Termination of translesion DNA synthesis #>   • Negative regulators of DDX58/IFIH1 signaling #>   • TRAF3-dependent IRF activation pathway #>   • TRAF6 mediated IRF7 activation #>   • EGR2 and SOX10-mediated initiation of Schwann cell myelination #>   • Clathrin-mediated endocytosis #>   • NGF-stimulated transcription #>   • Toll Like Receptor 4 (TLR4) Cascade #>   • NOSTRIN mediated eNOS trafficking #>   • AUF1 (hnRNP D0) binds and destabilizes mRNA #>   • Deadenylation of mRNA #>   • Amino acids regulate mTORC1 #>   • ROS and RNS production in phagocytes #>   • Insulin receptor recycling #>   • Transferrin endocytosis and recycling #>   • Ion channel transport #>   • Defective HK1 causes hexokinase deficiency (HK deficiency) #>   • Gluconeogenesis #>   • Aspartate and asparagine metabolism #>   • Methionine salvage pathway #>   • CDC42 GTPase cycle #>   • Transport of Mature mRNA derived from an Intron-Containing Transcript #>   • Gene and protein expression by JAK-STAT signaling after Interleukin-12 #>   stimulation #>   • Regulation of TNFR1 signaling #>   • TNFR1-induced NFkappaB signaling pathway #>   • TNFR1-mediated ceramide production #>   • MAPK6/MAPK4 signaling #>   • Oxidative Stress Induced Senescence #>   • Pre-NOTCH Transcription and Translation #>   • Oncogene Induced Senescence #>   • Transcriptional Regulation by VENTX #>   • RUNX1 regulates genes involved in megakaryocyte differentiation and #>   platelet function #>   • Regulation of MECP2 expression and activity #>   • NR1H3 & NR1H2 regulate gene expression linked to cholesterol transport and #>   efflux #>   • Regulation of RUNX1 Expression and Activity #>   • Regulation of NPAS4 mRNA translation #>   • Competing endogenous RNAs (ceRNAs) regulate PTEN translation #>   • ECM proteoglycans #>   • Non-integrin membrane-ECM interactions #>   • L1CAM interactions #>   • MET activates PTK2 signaling #>   • EGR2 and SOX10-mediated initiation of Schwann cell myelination #>   • Regulation of expression of SLITs and ROBOs #>   • Transport and synthesis of PAPS #>   • Metabolism of ingested H2SeO4 and H2SeO3 into H2Se #>   • Role of ABL in ROBO-SLIT signaling #>   • Branched-chain amino acid catabolism #>   • tRNA processing in the mitochondrion #>   • tRNA modification in the mitochondrion #>   • rRNA processing in the mitochondrion #>   • tRNA-derived small RNA (tsRNA or tRNA-related fragment, tRF) biogenesis #>   • Glycogen synthesis #>   • Galactose catabolism #>   • Defective PGM1 causes PGM1-CDG #>   • Interconversion of nucleotide di- and triphosphates #>   • Metabolism of ingested MeSeO2H into MeSeH #>   • Intra-Golgi traffic #>   • TP53 regulates transcription of additional cell cycle genes whose exact #>   role in the p53 pathway remain uncertain #>   • Deposition of new CENPA-containing nucleosomes at the centromere #>   • ALK mutants bind TKIs #>   • SARS-CoV-1-host interactions #>   • RHOC GTPase cycle #>   • G alpha (12/13) signalling events #>   • Cargo concentration in the ER #>   • Interleukin-4 and Interleukin-13 signaling #>   • HATs acetylate histones #>   • Telomere Extension By Telomerase #>   • ECM proteoglycans #>   • Formation of the beta-catenin:TCF transactivating complex #>   • SUMOylation of transcription cofactors #>   • RMTs methylate histone arginines #>   • RUNX1 interacts with co-factors whose precise effect on RUNX1 targets is #>   not known #>   • Viral Messenger RNA Synthesis #>   • Utilization of Ketone Bodies #>   • Synthesis of Ketone Bodies #>   • Cargo recognition for clathrin-mediated endocytosis #>   • Signaling by cytosolic FGFR1 fusion mutants #>   • Signaling by FGFR1 in disease #>   • LRR FLII-interacting protein 1 (LRRFIP1) activates type I IFN production #>   • Fanconi Anemia Pathway #>   • Presynaptic phase of homologous DNA pairing and strand exchange #>   • HDR through Homologous Recombination (HRR) #>   • Meiotic recombination #>   • HDR through Single Strand Annealing (SSA) #>   • Impaired BRCA2 binding to RAD51 #>   • Translesion synthesis by REV1 #>   • Translesion synthesis by POLK #>   • Translesion synthesis by POLI #>   • PCNA-Dependent Long Patch Base Excision Repair #>   • Removal of the Flap Intermediate #>   • Gap-filling DNA repair synthesis and ligation in GG-NER #>   • Removal of the Flap Intermediate from the C-strand #>   • Mismatch repair (MMR) directed by MSH2:MSH6 (MutSalpha) #>   • Mismatch repair (MMR) directed by MSH2:MSH3 (MutSbeta) #>   • Mitochondrial calcium ion transport #>   • FCERI mediated MAPK activation #>   • Generation of second messenger molecules #>   • Regulation of PAK-2p34 activity by PS-GAP/RHG10 #>   • Ephrin signaling #>   • Activation of RAC1 #>   • CD209 (DC-SIGN) signaling #>   • CD28 dependent Vav1 pathway #>   • Nef and signal transduction #>   • Stimulation of the cell death response by PAK-2p34 #>   • AURKA Activation by TPX2 #>   • SUMOylation of ubiquitinylation proteins #>   • Pyrophosphate hydrolysis #>   • PD-1 signaling #>   • Activation of IRF3/IRF7 mediated by TBK1/IKK epsilon #>   • Signal regulatory protein family interactions #>   • Interleukin-3, Interleukin-5 and GM-CSF signaling #>   • RET signaling #>   • PI3K Cascade #>   • GPVI-mediated activation cascade #>   • Signaling by SCF-KIT #>   • Downstream signal transduction #>   • Tie2 Signaling #>   • Interleukin-6 signaling #>   • Signaling by Leptin #>   • Regulation of IFNG signaling #>   • Regulation of IFNA/IFNB signaling #>   • Signaling by CSF3 (G-CSF) #>   • PI-3K cascade:FGFR1 #>   • FRS-mediated FGFR1 signaling #>   • PI-3K cascade:FGFR2 #>   • FRS-mediated FGFR2 signaling #>   • FRS-mediated FGFR3 signaling #>   • PI-3K cascade:FGFR3 #>   • FRS-mediated FGFR4 signaling #>   • PI-3K cascade:FGFR4 #>   • Activated NTRK2 signals through FRS2 and FRS3 #>   • MAPK3 (ERK1) activation #>   • MAPK1 (ERK2) activation #>   • Prolactin receptor signaling #>   • Interleukin-20 family signaling #>   • Netrin mediated repulsion signals #>   • Interleukin-37 signaling #>   • PECAM1 interactions #>   • MET activates PTPN11 #>   • STAT5 activation downstream of FLT3 ITD mutants #>   • STAT5 Activation #>   • RNA polymerase II transcribes snRNA genes #>   • Regulation of Apoptosis #>   • Paracetamol ADME #>   • Transport of RCbl within the body #>   • Heme degradation #>   • Glutathione synthesis and recycling #>   • COPII-mediated vesicle transport #>   • SLBP independent Processing of Histone Pre-mRNAs #>   • SLBP Dependent Processing of Replication-Dependent Histone Pre-mRNAs #>   • Constitutive Signaling by NOTCH1 PEST Domain Mutants #>   • Constitutive Signaling by NOTCH1 HD+PEST Domain Mutants #>   • Circadian Clock #>   • Regulation of BACH1 activity #>   • MAP3K8 (TPL2)-dependent MAPK1/3 activation #>   • NOTCH1 Intracellular Domain Regulates Transcription #>   • Loss of Function of FBXW7 in Cancer and NOTCH1 Signaling #>   • Integrin cell surface interactions #>   • Basigin interactions #>   • Regulation of PLK1 Activity at G2/M Transition #>   • Dual incision in TC-NER #>   • Glyoxylate metabolism and glycine degradation #>   • Glutamate and glutamine metabolism #>   • Degradation of cysteine and homocysteine #>   • Neurexins and neuroligins #>   • MET activates RAP1 and RAC1 #>   • RA biosynthesis pathway #>   • SUMO is conjugated to E1 (UBA2:SAE1) #>   • SUMO is transferred from E1 to E2 (UBE2I, UBC9) #>   • G alpha (i) signalling events #>   • Formyl peptide receptors bind formyl peptides and many other ligands #>   • Antigen Presentation: Folding, assembly and peptide loading of class I MHC #>   • NPAS4 regulates expression of target genes #>   • BMAL1:CLOCK,NPAS2 activates circadian gene expression #>   • Nicotinamide salvaging #>   • Cytosolic iron-sulfur cluster assembly #>   • Stimuli-sensing channels #>   • Immunoregulatory interactions between a Lymphoid and a non-Lymphoid cell #>   • GPER1 signaling #>   • Other semaphorin interactions #>   • Platelet Adhesion to exposed collagen #>   • Molecules associated with elastic fibres #>   • TGF-beta receptor signaling activates SMADs #>   • Fibronectin matrix formation #>   • Localization of the PINCH-ILK-PARVIN complex to focal adhesions #>   • MET interacts with TNS proteins #>   • Sphingolipid de novo biosynthesis #>   • Synthesis of bile acids and bile salts #>   • Telomere Extension By Telomerase #>   • SUMOylation of nuclear envelope proteins #>   • Acyl chain remodelling of PS #>   • Collagen biosynthesis and modifying enzymes #>   • Other interleukin signaling #>   • Ovarian tumor domain proteases #>   • Nef mediated downregulation of MHC class I complex cell surface expression #>   • Recycling of eIF2:GDP #>   • Interleukin-7 signaling #>   • Signaling by phosphorylated juxtamembrane, extracellular and kinase domain #>   KIT mutants #>   • Signaling by PDGFRA transmembrane, juxtamembrane and kinase domain mutants #>   • Signaling by PDGFRA extracellular domain mutants #>   • Interleukin-10 signaling #>   • Senescence-Associated Secretory Phenotype (SASP) #>   • Growth hormone receptor signaling #>   • PTK6 Activates STAT3 #>   • Inactivation of CSF3 (G-CSF) signaling #>   • Signaling by cytosolic FGFR1 fusion mutants #>   • STAT3 nuclear events downstream of ALK signaling #>   • BH3-only proteins associate with and inactivate anti-apoptotic BCL-2 #>   members #>   • POU5F1 (OCT4), SOX2, NANOG activate genes related to proliferation #>   • Transcriptional regulation of granulopoiesis #>   • Signalling to STAT3 #>   • MET activates STAT3 #>   • Interleukin-15 signaling #>   • Interleukin-9 signaling #>   • Interleukin-21 signaling #>   • Transport of Mature mRNA Derived from an Intronless Transcript #>   • FOXO-mediated transcription of oxidative stress, metabolic and neuronal #>   genes #>   • Serine biosynthesis #>   • Cytochrome P450 - arranged by substrate type #>   • Glycolysis #>   • Hypusine synthesis from eIF5A-lysine #>   • Advanced glycosylation endproduct receptor signaling #>   • SRP-dependent cotranslational protein targeting to membrane #>   • Viral mRNA Translation #>   • Selenocysteine synthesis #>   • Eukaryotic Translation Termination #>   • NRAGE signals death through JNK #>   • Apoptotic cleavage of cellular proteins #>   • The NLRP3 inflammasome #>   • Glutamate and glutamine metabolism #>   • SHOC2 M1731 mutant abolishes MRAS complex function #>   • Gain-of-function MRAS complexes activate RAF signaling #>   • Interleukin-37 signaling #>   • Endogenous sterols #>   • Pregnenolone biosynthesis #>   • Defective CYP11A1 causes AICSR #>   • Electron transport from NADPH to Ferredoxin #>   • Receptor-type tyrosine-protein phosphatases #>   • Axonal growth inhibition (RHOA activation) #>   • Methylation #>   • Sulfur amino acid metabolism #>   • Metabolism of ingested SeMet, Sec, MeSec into H2Se #>   • Defective AHCY causes HMAHCHD #>   • Purine catabolism #>   • Ribavirin ADME #>   • Purine salvage #>   • Defective PNP disrupts phosphorolysis of (deoxy)guanosine and #>   (deoxy)inosine #>   • Nucleotide catabolism #>   • G alpha (i) signalling events #>   • G alpha (z) signalling events #>   • Adenylate cyclase inhibitory pathway #>   • ADP signalling through P2Y purinoceptor 12 #>   • ADORA2B mediated anti-inflammatory cytokines production #>   • Adrenaline,noradrenaline inhibits insulin secretion #>   • Glycerophospholipid biosynthesis #>   • Synthesis of bile acids and bile salts #>   • Synthesis of very long-chain fatty acyl-CoAs #>   • Intracellular metabolism of fatty acids regulates insulin secretion #>   • Downregulation of TGF-beta receptor signaling #>   • Mitochondrial translation initiation #>   • Mitochondrial translation elongation #>   • Mitochondrial translation termination #>   • Peptide ligand-binding receptors #>   • COPI-independent Golgi-to-ER retrograde traffic #>   • Sensing of DNA Double Strand Breaks #>   • CaMK IV-mediated phosphorylation of CREB #>   • CREB1 phosphorylation through the activation of CaMKII/CaMKK/CaMKIV #>   cascasde #>   • EML4 and NUDC in mitotic spindle formation #>   • Regulation of NF-kappa B signaling #>   • Plasmalogen biosynthesis #>   • TYSND1 cleaves peroxisomal proteins #>   • Phase I - Functionalization of compounds #>   • Vitamin C (ascorbate) metabolism #>   • Condensation of Prophase Chromosomes #>   • Condensation of Prometaphase Chromosomes #>   • Downstream TCR signaling #>   • Mismatch repair (MMR) directed by MSH2:MSH6 (MutSalpha) #>   • Defective Mismatch Repair Associated With MSH2 #>   • Defective Mismatch Repair Associated With MSH6 #>   • TP53 Regulates Transcription of Genes Involved in G2 Cell Cycle Arrest #>   • G1/S-Specific Transcription #>   • Transcription of E2F targets under negative control by DREAM complex #>   • Polymerase switching on the C-strand of the telomere #>   • Polymerase switching #>   • RNA Polymerase I Transcription Initiation #>   • RNA Polymerase I Promoter Escape #>   • RNA Polymerase I Transcription Termination #>   • Estrogen-dependent gene expression #>   • HDACs deacetylate histones #>   • HDMs demethylate histones #>   • Activated PKN1 stimulates transcription of AR (androgen receptor) regulated #>   genes KLK2 and KLK3 #>   • Signaling by Retinoic Acid #>   • RORA activates gene expression #>   • Transcriptional regulation of white adipocyte differentiation #>   • Ethanol oxidation #>   • Metabolism of serotonin #>   • Notch-HLH transcription pathway #>   • Loss of MECP2 binding ability to the NCoR/SMRT complex #>   • Glutathione conjugation #>   • Regulation of TP53 Activity through Methylation #>   • Detoxification of Reactive Oxygen Species #>   • FCERI mediated MAPK activation #>   • Thrombin signalling through proteinase activated receptors (PARs) #>   • SMAD2/SMAD3:SMAD4 heterotrimer regulates transcription #>   • Signaling by NODAL #>   • Regulation of the apoptosome activity #>   • RUNX2 regulates osteoblast differentiation #>   • RSK activation #>   • Estrogen-stimulated signaling through PRKCZ #>   • Suppression of apoptosis #>   • Signaling by Activin #>   • Activation of the AP-1 family of transcription factors #>   • Frs2-mediated activation #>   • Signal attenuation #>   • Gastrin-CREB signalling pathway via PKC and MAPK #>   • ESR-mediated signaling #>   • Negative feedback regulation of MAPK pathway #>   • RHO GTPases Activate NADPH Oxidases #>   • Signaling by MAP2K mutants #>   • phospho-PLA2 pathway #>   • Signaling by MAPK mutants #>   • Processing of SMDT1 #>   • Signal transduction by L1 #>   • WNT mediated activation of DVL #>   • Receptor Mediated Mitophagy #>   • Synthesis of PC #>   • Negative regulators of DDX58/IFIH1 signaling #>   • Glucuronidation #>   • Signaling by Hippo #>   • Chk1/Chk2(Cds1) mediated inactivation of Cyclin B:Cdk1 complex #>   • SARS-CoV-1 targets host intracellular signalling and regulatory pathways #>   • SARS-CoV-2 targets host intracellular signalling and regulatory pathways #>   • NADE modulates death signalling #>   • Activation of BAD and translocation to mitochondria #>   • Regulation of PTEN gene transcription #>   • mTORC1-mediated signalling #>   • ER Quality Control Compartment (ERQC) #>   • Mitochondrial transcription initiation #>   • ERCC6 (CSB) and EHMT2 (G9a) positively regulate rRNA expression #>   • Transcriptional Regulation by E2F6 #>   • Regulation of TP53 Activity through Acetylation #>   • Polo-like kinase mediated events #>   • Cyclin E associated events during G1/S transition #>   • Cyclin A:Cdk2-associated events at S phase entry #>   • Transcription of E2F targets under negative control by p107 (RBL1) and p130 #>   (RBL2) in complex with HDAC1 #>   • Regulation of TP53 Degradation #>   • Budding and maturation of HIV virion #>   • Integration of provirus #>   • APOBEC3G mediated resistance to HIV-1 infection #>   • Calcineurin activates NFAT #>   • Binding and entry of HIV virion #>   • Assembly Of The HIV Virion #>   • Uncoating of the HIV Virion #>   • Minus-strand DNA synthesis #>   • Plus-strand DNA synthesis #>   • PCNA-Dependent Long Patch Base Excision Repair #>   • Transport to the Golgi and subsequent modification #>   • ERK/MAPK targets #>   • CREB phosphorylation #>   • RAF activation #>   • Processing of SMDT1 #>   • Anchoring of the basal body to the plasma membrane #>   • Glycogen storage disease type II (GAA) #>   • Pyruvate metabolism #>   • Aspirin ADME #>   • Proton-coupled monocarboxylate transport #>   • Defective SLC16A1 causes symptomatic deficiency in lactate transport (SDLT) #>   • Extra-nuclear estrogen signaling #>   • Maturation of nucleoprotein #>   • Translocation of SLC2A4 (GLUT4) to the plasma membrane #>   • mRNA decay by 3' to 5' exoribonuclease #>   • PTK6 Expression #>   • Cytoprotection by HMOX1 #>   • MECP2 regulates transcription of neuronal ligands #>   • Regulation of lipid metabolism by PPARalpha #>   • MECP2 regulates neuronal receptors and channels #>   • Loss of MECP2 binding ability to 5mC-DNA #>   • Generation of second messenger molecules #>   • Signaling by ROBO receptors #>   • Integrin cell surface interactions #>   • Defective GSS causes GSS deficiency #>   • Insulin-like Growth Factor-2 mRNA Binding Proteins (IGF2BPs/IMPs/VICKZs) #>   bind RNA #>   • Activation of anterior HOX genes in hindbrain development during early #>   embryogenesis #>   • Defective MOGS causes CDG-2b #>   • Inactivation, recovery and regulation of the phototransduction cascade #>   • tRNA processing in the mitochondrion #>   • Metabolism of polyamines #>   • TP53 regulates transcription of several additional cell death genes whose #>   specific roles in p53-dependent apoptosis remain uncertain #>   • HuR (ELAVL1) binds and stabilizes mRNA #>   • Condensation of Prophase Chromosomes #>   • Viral mRNA Translation #>   • Formation of xylulose-5-phosphate #>   • Fructose biosynthesis #>   • RAC1 GTPase cycle #>   • Displacement of DNA glycosylase by APEX1 #>   • Abasic sugar-phosphate removal via the single-nucleotide replacement #>   pathway #>   • Interferon gamma signaling #>   • p75NTR negatively regulates cell cycle via SC1 #>   • Cross-presentation of particulate exogenous antigens (phagosomes) #>   • Synthesis of UDP-N-acetyl-glucosamine #>   • Processing of DNA double-strand break ends #>   • RHOQ GTPase cycle #>   • RUNX2 regulates bone development #>   • Formation of xylulose-5-phosphate #>   • 5-Phosphoribose 1-diphosphate biosynthesis #>   • TP53 Regulates Transcription of DNA Repair Genes #>   • Defective Mismatch Repair Associated With MSH3 #>   • Purine catabolism #>   • Amyloid fiber formation #>   • Collagen degradation #>   • Activated NOTCH1 Transmits Signal to the Nucleus #>   • Constitutive Signaling by NOTCH1 HD Domain Mutants #>   • NOTCH2 Activation and Transmission of Signal to the Nucleus #>   • Constitutive Signaling by NOTCH1 t(7 #>   • 9)(NOTCH1:M1580_K2555) Translocation Mutant #>   • Signaling by EGFR #>   • NOTCH4 Activation and Transmission of Signal to the Nucleus #>   • Carnitine synthesis #>   • Regulation of pyruvate dehydrogenase (PDH) complex #>   • Branched-chain amino acid catabolism #>   • Glycine degradation #>   • CLEC7A (Dectin-1) signaling #>   • Effects of PIP2 hydrolysis #>   • Calmodulin induced events #>   • Growth hormone receptor signaling #>   • Negative regulation of MET activity #>   • Integrin signaling #>   • PTK6 Down-Regulation #>   • SMAD2/SMAD3:SMAD4 heterotrimer regulates transcription #>   • Noncanonical activation of NOTCH3 #>   • Galactose catabolism #>   • Defective GALE causes EDG #>   • Maturation of nucleoprotein #>   • Synthesis of PIPs at the plasma membrane #>   • Synthesis of PIPs at the Golgi membrane #>   • Asymmetric localization of PCP proteins #>   • Methylation #>   • Enzymatic degradation of dopamine by COMT #>   • Enzymatic degradation of Dopamine by monoamine oxidase #>   • Transport of the SLBP independent Mature mRNA #>   • Peroxisomal protein import #>   • Abnormal conversion of 2-oxoglutarate to 2-hydroxyglutarate #>   • NADPH regeneration #>   • RHOH GTPase cycle #>   • Regulation of TP53 Activity through Association with Co-factors #>   • Glycerophospholipid catabolism #>   • mRNA 3'-end processing #>   • Factors involved in megakaryocyte development and platelet production #>   • RNA Polymerase I Promoter Opening #>   • Vpr-mediated nuclear import of PICs #>   • Integration of viral DNA into host genomic DNA #>   • Autointegration results in viral DNA circles #>   • RAC2 GTPase cycle #>   • HDR through Homologous Recombination (HRR) #>   • Class B/2 (Secretin family receptors) #>   • RHOBTB2 GTPase cycle #>   • G alpha (q) signalling events #>   • Activation of G protein gated Potassium channels #>   • G-protein activation #>   • G beta:gamma signalling through PI3Kgamma #>   • Prostacyclin signalling through prostacyclin receptor #>   • ADP signalling through P2Y purinoceptor 1 #>   • Glucagon-type ligand receptors #>   • Thromboxane signalling through TP receptor #>   • Vasopressin regulates renal water homeostasis via Aquaporins #>   • G beta:gamma signalling through BTK #>   • G beta:gamma signalling through CDC42 #>   • Inhibition of voltage gated Ca2+ channels via Gbeta/gamma subunits #>   • Glucagon signaling in metabolic regulation #>   • Activation of RAC1 downstream of NMDARs #>   • RNA Polymerase III Transcription Termination #>   • Cdc20:Phospho-APC/C mediated degradation of Cyclin A #>   • APC/C:Cdc20 mediated degradation of Cyclin B #>   • Phosphorylation of the APC/C #>   • Transcriptional regulation by RUNX2 #>   • E2F-enabled inhibition of pre-replication complex formation #>   • Activation of NIMA Kinases NEK9, NEK6, NEK7 #>   • G2/M DNA replication checkpoint #>   • Phosphorylation of proteins involved in the G2/M transition by Cyclin #>   A:Cdc2 complexes #>   • Phosphorylation of Emi1 #>   • Nephrin family interactions #>   • Repression of WNT target genes #>   • Generic Transcription Pathway #>   • Glutamate Neurotransmitter Release Cycle #>   • Gap-filling DNA repair synthesis and ligation in TC-NER #>   • APEX1-Independent Resolution of AP Sites via the Single Nucleotide #>   Replacement Pathway #>   • Resolution of AP sites via the single-nucleotide replacement pathway #>   • Processing of Capped Intron-Containing Pre-mRNA #>   • G alpha (12/13) signalling events #>   • Olfactory Signaling Pathway #>   • Synthesis, secretion, and inactivation of Glucagon-like Peptide-1 (GLP-1) #>   • Inactivation, recovery and regulation of the phototransduction cascade #>   • Activation of the phototransduction cascade #>   • Assembly of the ORC complex at the origin of replication #>   • Inactivation of APC/C via direct inhibition of the APC/C complex #>   • APC/C:Cdc20 mediated degradation of mitotic proteins #>   • APC-Cdc20 mediated degradation of Nek2A #>   • Association of TriC/CCT with target proteins during biosynthesis #>   • Defective GCLC causes HAGGSD #>   • Metabolism of folate and pterines #>   • Carnitine synthesis #>   • ESR-mediated signaling #>   • RUNX1 regulates transcription of genes involved in differentiation of HSCs #>   • Nuclear signaling by ERBB4 #>   • YAP1- and WWTR1 (TAZ)-stimulated gene expression #>   • RUNX3 regulates YAP1-mediated transcription #>   • L1CAM interactions #>   • NRAGE signals death through JNK #>   • Regulation of localization of FOXO transcription factors #>   • Activation of BAD and translocation to mitochondria #>   • Rap1 signalling #>   • Recruitment of mitotic centrosome proteins and complexes #>   • Regulation of TP53 Activity through Phosphorylation #>   • Glycogen synthesis #>   • Myoclonic epilepsy of Lafora #>   • Glycogen storage disease type XV (GYG1) #>   • Glycogen storage disease type 0 (muscle GYS1) #>   • Role of phospholipids in phagocytosis #>   • CLEC7A (Dectin-1) signaling #>   • DAP12 signaling #>   • Erythropoietin activates Phospholipase C gamma (PLCG) #>   • Dectin-2 family #>   • Mitochondrial Fatty Acid Beta-Oxidation #>   • ARMS-mediated activation #>   • Defective GALK1 causes GALCT2 #>   • Purine salvage #>   • Regulation of PTEN stability and activity #>   • Late Phase of HIV Life Cycle #>   • Activation, myristolyation of BID and translocation to mitochondria #>   • NOTCH4 Intracellular Domain Regulates Transcription #>   • Cholesterol biosynthesis #>   • Abacavir metabolism #>   • NOTCH3 Intracellular Domain Regulates Transcription #>   • Regulation of gene expression in late stage (branching morphogenesis) #>   pancreatic bud precursor cells #>   • RUNX3 regulates NOTCH signaling #>   • InlB-mediated entry of Listeria monocytogenes into host cell #>   • Biogenic amines are oxidatively deaminated to aldehydes by MAOA and MAOB #>   • Signaling by PDGF #>   • Retrograde transport at the Trans-Golgi-Network #>   • Signaling by membrane-tethered fusions of PDGFRA or PDGFRB #>   • Regulation of insulin secretion #>   • Neurexins and neuroligins #>   • Acetylcholine regulates insulin secretion #>   • Circadian Clock #>   • Cytosolic sulfonation of small molecules #>   • NoRC negatively regulates rRNA expression #>   • Synthesis of PE #>   • Inhibition of PKR #>   • Acyl chain remodeling of CL #>   • mitochondrial fatty acid beta-oxidation of unsaturated fatty acids #>   • Beta oxidation of decanoyl-CoA to octanoyl-CoA-CoA #>   • Beta oxidation of octanoyl-CoA to hexanoyl-CoA #>   • Beta oxidation of hexanoyl-CoA to butanoyl-CoA #>   • Beta oxidation of myristoyl-CoA to lauroyl-CoA #>   • Beta oxidation of lauroyl-CoA to decanoyl-CoA-CoA #>   • Metabolism of Angiotensinogen to Angiotensins #>   • FCGR3A-mediated IL10 synthesis #>   • PKA activation #>   • PKA activation in glucagon signalling #>   • CREB1 phosphorylation through the activation of Adenylate Cyclase #>   • ROBO receptors bind AKAP5 #>   • RHOT2 GTPase cycle #>   • RHOT1 GTPase cycle #>   • Aflatoxin activation and detoxification #>   • CLEC7A/inflammasome pathway #>   • Apoptosis induced DNA fragmentation #>   • Striated Muscle Contraction #>   • GDP-fucose biosynthesis #>   • Intra-Golgi traffic #>   • CRMPs in Sema3A signaling #>   • Hedgehog 'on' state #>   • E3 ubiquitin ligases ubiquitinate target proteins #>   • Polymerase switching on the C-strand of the telomere #>   • Meiotic synapsis #>   • Recognition and association of DNA glycosylase with site containing an #>   affected purine #>   • Recognition and association of DNA glycosylase with site containing an #>   affected pyrimidine #>   • Cleavage of the damaged pyrimidine #>   • Cleavage of the damaged purine #>   • Packaging Of Telomere Ends #>   • DNA Damage/Telomere Stress Induced Senescence #>   • Telomere C-strand synthesis initiation #>   • RAB geranylgeranylation #>   • Transport of nucleosides and free purine and pyrimidine bases across the #>   plasma membrane #>   • Influenza Virus Induced Apoptosis #>   • Vpr-mediated induction of apoptosis by mitochondrial outer membrane #>   permeabilization #>   • Synthesis of Prostaglandins (PG) and Thromboxanes (TX) #>   • PIP3 activates AKT signaling #>   • Sema4D mediated inhibition of cell attachment and migration #>   • MET Receptor Activation #>   • MET activates RAS signaling #>   • MET activates PI3K/AKT signaling #>   • MET receptor recycling #>   • Drug-mediated inhibition of MET activation #>   • Presynaptic phase of homologous DNA pairing and strand exchange #>   • Fanconi Anemia Pathway #>   • VxPx cargo-targeting to cilium #>   • Regulation of signaling by CBL #>   • PTK6 Regulates RHO GTPases, RAS GTPase and MAP kinases #>   • LDL clearance #>   • VLDL clearance #>   • Cyclin D associated events in G1 #>   • Post-transcriptional silencing by small RNAs #>   • RAF/MAP kinase cascade #>   • TP53 regulates transcription of several additional cell death genes whose #>   specific roles in p53-dependent apoptosis remain uncertain #>   • Synthesis of IP2, IP, and Ins in the cytosol #>   • HDR through MMEJ (alt-NHEJ) #>   • Early Phase of HIV Life Cycle #>   • Urea cycle #>   • Utilization of Ketone Bodies #>   • Deactivation of the beta-catenin transactivating complex #>   • Signaling by TCF7L2 mutants #>   • FCERI mediated Ca+2 mobilization #>   • RHOF GTPase cycle #>   • DSCAM interactions #>   • Activation of gene expression by SREBF (SREBP) #>   • Cholesterol biosynthesis #>   • Assembly of collagen fibrils and other multimeric structures #>   • Asparagine N-linked glycosylation #>   • RHO GTPases Activate Formins #>   • PCP/CE pathway #>   • Purinergic signaling in leishmaniasis infection #>   • Pyrimidine catabolism #>   • Nicotinate metabolism #>   • FGFR2 alternative splicing #>   • PTK6 Regulates Proteins Involved in RNA Processing #>   • Eukaryotic Translation Elongation #>   • Repression of WNT target genes #>   • Endosomal Sorting Complex Required For Transport (ESCRT) #>   • Inhibition of membrane repair #>   • Prevention of phagosomal-lysosomal fusion #>   • NF-kB is activated and signals survival #>   • Regulated proteolysis of p75NTR #>   • Endosomal Sorting Complex Required For Transport (ESCRT) #>   • NOSIP mediated eNOS trafficking #>   • HDL assembly #>   • Loss of phosphorylation of MECP2 at T308 #>   • PKA-mediated phosphorylation of key metabolic factors #>   • Sulfide oxidation to sulfate #>   • Glycogen breakdown (glycogenolysis) #>   • Glycogen storage disease type IV (GBE1) #>   • Beta oxidation of butanoyl-CoA to acetyl-CoA #>   • Plasmalogen biosynthesis #>   • Collagen degradation #>   • RAB geranylgeranylation #>   • TBC/RABGAPs #>   • Amino acid transport across the plasma membrane #>   • Signaling by BMP #>   • FOXO-mediated transcription of cell cycle genes #>   • Germ layer formation at gastrulation #>   • Transcriptional regulation of pluripotent stem cells #>   • RUNX3 regulates BCL2L11 (BIM) transcription #>   • RUNX2 regulates bone development #>   • RUNX3 regulates CDKN1A transcription #>   • SMAD4 MH2 Domain Mutants in Cancer #>   • SMAD2/3 MH2 Domain Mutants in Cancer #>   • Anchoring fibril formation #>   • Class I peroxisomal membrane protein import #>   • ALK mutants bind TKIs #>   • CD22 mediated BCR regulation #>   • PD-1 signaling #>   • Interleukin receptor SHC signaling #>   • Signaling by ALK #>   • Regulation of KIT signaling #>   • Josephin domain DUBs #>   • RET signaling #>   • Cyclin A/B1/B2 associated events during G2/M transition #>   • Signaling by cytosolic PDGFRA and PDGFRB fusion proteins #>   • Oxidative Stress Induced Senescence #>   • Stimuli-sensing channels #>   • Membrane binding and targetting of GAG proteins #>   • Late endosomal microautophagy #>   • IKK complex recruitment mediated by RIP1 #>   • TRAF6-mediated induction of TAK1 complex within TLR4 complex #>   • IRAK2 mediated activation of TAK1 complex upon TLR7/8 or 9 stimulation #>   • Metalloprotease DUBs #>   • Negative regulation of FLT3 #>   • Downregulation of ERBB2:ERBB3 signaling #>   • JNK (c-Jun kinases) phosphorylation and activation mediated by activated #>   human TAK1 #>   • NOD1/2 Signaling Pathway #>   • TICAM1, RIP1-mediated IKK complex recruitment #>   • p75NTR recruits signalling complexes #>   • Regulation of TNFR1 signaling #>   • IRAK1 recruits IKK complex #>   • IRAK1 recruits IKK complex upon TLR7/8 or 9 stimulation #>   • TICAM1-dependent activation of IRF3/IRF7 #>   • TICAM1,TRAF6-dependent induction of TAK1 complex #>   • Modulation by Mtb of host immune system #>   • activated TAK1 mediates p38 MAPK activation #>   • IRAK2 mediated activation of TAK1 complex #>   • Alpha-protein kinase 1 signaling pathway #>   • RAS processing #>   • Regulation of FZD by ubiquitination #>   • InlA-mediated entry of Listeria monocytogenes into host cells #>   • TGF-beta receptor signaling in EMT (epithelial to mesenchymal transition) #>   • NRIF signals cell death from the nucleus #>   • Downregulation of ERBB4 signaling #>   • Regulation of innate immune responses to cytosolic DNA #>   • PTK6 Regulates RTKs and Their Effectors AKT1 and DOK1 #>   • Regulation of PTEN localization #>   • Pexophagy #>   • Maturation of protein E #>   • FLT3 signaling by CBL mutants #>   • TRAF6 mediated IRF7 activation in TLR7/8 or 9 signaling #>   • Androgen biosynthesis #>   • Coenzyme A biosynthesis #>   • O-linked glycosylation of mucins #>   • Ribavirin ADME #>   • Prevention of phagosomal-lysosomal fusion #>   • RAB GEFs exchange GTP for GDP on RABs #>   • Suppression of autophagy #>   • Downregulation of SMAD2/3:SMAD4 transcriptional activity #>   • Insertion of tail-anchored proteins into the endoplasmic reticulum membrane #>   • Reelin signalling pathway #>   • Class I peroxisomal membrane protein import #>   • Transcriptional regulation by small RNAs #>   • RNA Polymerase II Pre-transcription Events #>   • Creatine metabolism #>   • Glycosphingolipid metabolism #>   • Peptide ligand-binding receptors #>   • Cargo concentration in the ER #>   • RNA Polymerase III Transcription Initiation From Type 3 Promoter #>   • RNA Polymerase III Chain Elongation #>   • Pyrimidine salvage #>   • STAT6-mediated induction of chemokines #>   • IRF3 mediated activation of type 1 IFN #>   • Paracetamol ADME #>   • Glutathione conjugation #>   • Other interleukin signaling #>   • Retinoid metabolism and transport #>   • Cation-coupled Chloride cotransporters #>   • Signaling by Hippo #>   • eNOS activation #>   • MyD88 deficiency (TLR2/4) #>   • IRAK4 deficiency (TLR2/4) #>   • Regulation of TLR by endogenous ligand #>   • Pyroptosis #>   • Synthesis of PIPs at the Golgi membrane #>   • Synthesis of PIPs at the early endosome membrane #>   • Synthesis of PIPs at the late endosome membrane #>   • Degradation of cysteine and homocysteine #>   • IKBKB deficiency causes SCID #>   • IKBKG deficiency causes anhidrotic ectodermal dysplasia with #>   immunodeficiency (EDA-ID) (via TLR) #>   • AKT phosphorylates targets in the cytosol #>   • Synthesis of GDP-mannose #>   • Defective MPI causes MPI-CDG #>   • MET Receptor Activation #>   • Signaling by MST1 #>   • Biotin transport and metabolism #>   • Azathioprine ADME #>   • Defective HPRT1 disrupts guanine and hypoxanthine salvage #>   • Beta oxidation of hexanoyl-CoA to butanoyl-CoA #>   • Transport and synthesis of PAPS #>   • Defective PAPSS2 causes SEMD-PA #>   • Ion transport by P-type ATPases #>   • Attachment of GPI anchor to uPAR #>   • Insertion of tail-anchored proteins into the endoplasmic reticulum membrane #>   • Synthesis of Dolichyl-phosphate #>   • PI and PC transport between ER and Golgi membranes #>   • Sphingolipid de novo biosynthesis #>   • Vitamins B6 activation to pyridoxal phosphate #>   • TALDO1 deficiency: failed conversion of SH7P, GA3P to Fru(6)P, E4P #>   • TALDO1 deficiency: failed conversion of Fru(6)P, E4P to SH7P, GA3P #>   • Regulation of the apoptosome activity #>   • Negative regulation of MET activity #>   • Sialic acid metabolism #>   • Nef Mediated CD4 Down-regulation #>   • Blockage of phagosome acidification #>   • PI3K/AKT activation #>   • RHO GTPases Activate Rhotekin and Rhophilins #>   • SLIT2:ROBO1 increases RHOA activity #>   • Axonal growth stimulation #>   • Axonal growth inhibition (RHOA activation) #>   • Small interfering RNA (siRNA) biogenesis #>   • Intrinsic Pathway of Fibrin Clot Formation #>   • Apoptotic factor-mediated response #>   • Defective Intrinsic Pathway for Apoptosis Due to p14ARF Loss of Function #>   • Nuclear Envelope Breakdown #>   • Heme signaling #>   • Phosphorylation of CD3 and TCR zeta chains #>   • Vitamins B6 activation to pyridoxal phosphate #>   • Sulfide oxidation to sulfate #>   • Organic anion transporters #>   • The canonical retinoid cycle in rods (twilight vision) #>   • Retinoid cycle disease events #>   • Trafficking of myristoylated proteins to the cilium #>   • PKMTs methylate histone lysines #>   • Miscellaneous transport and binding events #>   • Phenylalanine metabolism #>   • Essential pentosuria #>   • Processive synthesis on the lagging strand #>   • Processive synthesis on the C-strand of the telomere #>   • ERBB2 Regulates Cell Motility #>   • Mitochondrial translation termination #>   • Conversion from APC/C:Cdc20 to APC/C:Cdh1 in late anaphase #>   • Regulation of APC/C activators between G1/S and early anaphase #>   • Aberrant regulation of mitotic exit in cancer due to RB1 defects #>   • Mitochondrial ABC transporters #>   • Defective ABCB6 causes MCOPCB7 #>   • APEX1-Independent Resolution of AP Sites via the Single Nucleotide #>   Replacement Pathway #>   • Ribosomal scanning and start codon recognition #>   • mRNA decay by 5' to 3' exoribonuclease #>   • Interactions of Tat with host cellular proteins #>   • Pentose phosphate pathway #>   • RNA Pol II CTD phosphorylation and interaction with CE during HIV infection #>   • Signaling by plasma membrane FGFR1 fusions #>   • Ethanol oxidation #>   • Defective APRT disrupts adenine salvage #>   • Regulation of insulin secretion #>   • Glutamate Neurotransmitter Release Cycle #>   • Serotonin Neurotransmitter Release Cycle #>   • Norepinephrine Neurotransmitter Release Cycle #>   • Dopamine Neurotransmitter Release Cycle #>   • Acetylcholine Neurotransmitter Release Cycle #>   • Toxicity of botulinum toxin type B (botB) #>   • Toxicity of botulinum toxin type G (botG) #>   • CDC6 association with the ORC:origin complex #>   • RHOT2 GTPase cycle #>   • Nonsense Mediated Decay (NMD) independent of the Exon Junction Complex #>   (EJC) #>   • Activation of AMPK downstream of NMDARs #>   • Propionyl-CoA catabolism #>   • Defective MMAA causes MMA, cblA type #>   • Defective MUT causes MMAM #>   • Cobalamin (Cbl) metabolism #>   • Synaptic adhesion-like molecules #>   • Transcriptional Regulation by E2F6 #>   • Recycling of eIF2:GDP #>   • Degradation of DVL #>   • rRNA modification in the mitochondrion #>   • TP53 Regulates Transcription of Genes Involved in Cytochrome C Release #>   • Prefoldin mediated transfer of substrate to CCT/TriC #>   • HS-GAG degradation #>   • Sialic acid metabolism #>   • Keratan sulfate degradation #>   • Defective NEU1 causes sialidosis #>   • MPS IV - Morquio syndrome B #>   • Reversible hydration of carbon dioxide #>   • Erythrocytes take up carbon dioxide and release oxygen #>   • Erythrocytes take up oxygen and release carbon dioxide #>   • Nonhomologous End-Joining (NHEJ) #>   • Release of Hh-Np from the secreting cell #>   • TNF signaling #>   • Regulation of necroptotic cell death #>   • Assembly and cell surface presentation of NMDA receptors #>   • Ras activation upon Ca2+ influx through NMDA receptor #>   • Unblocking of NMDA receptors, glutamate binding and activation #>   • Negative regulation of NMDA receptor-mediated neuronal transmission #>   • Long-term potentiation #>   • Trafficking of AMPA receptors #>   • Phase 0 - rapid depolarisation #>   • Synthesis of PIPs at the plasma membrane #>   • FCGR activation #>   • Role of LAT2/NTAL/LAB on calcium mobilization #>   • CD22 mediated BCR regulation #>   • Erythropoietin activates Phosphoinositide-3-kinase (PI3K) #>   • Erythropoietin activates STAT5 #>   • Erythropoietin activates RAS #>   • CD28 co-stimulation #>   • Mitotic Telophase/Cytokinesis #>   • trans-Golgi Network Vesicle Budding #>   • RHO GTPases regulate CFTR trafficking #>   • Nuclear events stimulated by ALK signaling in cancer #>   • PI5P Regulates TP53 Acetylation #>   • Synthesis of PIPs in the nucleus #>   • AKT phosphorylates targets in the nucleus #>   • Regulation of TP53 Activity through Association with Co-factors #>   • MTOR signalling #>   • FLT3 Signaling #>   • RUNX2 regulates genes involved in cell migration #>   • AKT-mediated inactivation of FOXO1A #>   • Regulation of signaling by CBL #>   • RPIA deficiency: failed conversion of R5P to RU5P #>   • RPIA deficiency: failed conversion of RU5P to R5P #>   • Complex I biogenesis #>   • POLB-Dependent Long Patch Base Excision Repair #>   • Nuclear Receptor transcription pathway #>   • RA biosynthesis pathway #>   • Threonine catabolism #>   • DEx/H-box helicases activate type I IFN and inflammatory cytokines #>   production #>   • Cysteine formation from homocysteine #>   • FOXO-mediated transcription of oxidative stress, metabolic and neuronal #>   genes #>   • Nicotinamide salvaging #>   • Signaling by CSF3 (G-CSF) #>   • Signaling by RAS GAP mutants #>   • Signaling by RAS GTPase mutants #>   • RUNX3 regulates p14-ARF #>   • SUMOylation of DNA methylation proteins #>   • Endosomal/Vacuolar pathway #>   • Chondroitin sulfate biosynthesis #>   • mitochondrial fatty acid beta-oxidation of unsaturated fatty acids #>   • Small interfering RNA (siRNA) biogenesis #>   • Basigin interactions #>   • Transcriptional Regulation by MECP2 #>   • Inhibition of Host mRNA Processing and RNA Silencing #>   • RHOBTB1 GTPase cycle #>   • Regulation of innate immune responses to cytosolic DNA #>   • Senescence-Associated Secretory Phenotype (SASP) #>   • Acyl chain remodeling of DAG and TAG #>   • Organic anion transporters #>   • Translation of Replicase and Assembly of the Replication Transcription #>   Complex #>   • Aggrephagy #>   • Propionyl-CoA catabolism #>   • Activation of caspases through apoptosome-mediated cleavage #>   • SMAC (DIABLO) binds to IAPs #>   • SMAC(DIABLO)-mediated dissociation of IAP:caspase complexes #>   • Cohesin Loading onto Chromatin #>   • Defective GNE causes sialuria, NK and IBM2 #>   • Pregnenolone biosynthesis #>   • Synthesis of IPs in the ER lumen #>   • Tight junction interactions #>   • TBC/RABGAPs #>   • Cytosolic sulfonation of small molecules #>   • Macroautophagy #>   • Localization of the PINCH-ILK-PARVIN complex to focal adhesions #>   • Digestion #>   • SUMOylation of chromatin organization proteins #>   • Regulation by c-FLIP #>   • RIPK1-mediated regulated necrosis #>   • CASP8 activity is inhibited #>   • TP53 Regulates Transcription of Death Receptors and Ligands #>   • Dimerization of procaspase-8 #>   • TRAIL signaling #>   • Post-translational modification: synthesis of GPI-anchored proteins #>   • TGFBR1 LBD Mutants in Cancer #>   • Transport of fatty acids #>   • Defective SLC27A4 causes ichthyosis prematurity syndrome (IPS) #>   • Wax biosynthesis #>   • Estrogen biosynthesis #>   • RHOV GTPase cycle #>   • Synthesis of Leukotrienes (LT) and Eoxins (EX) #>   • Synthesis of Lipoxins (LX) #>   • RNA Polymerase I Promoter Escape #>   • Glycerophospholipid biosynthesis #>   • Ubiquitin Mediated Degradation of Phosphorylated Cdc25A #>   • p38MAPK events #>   • Activation of PPARGC1A (PGC-1alpha) by phosphorylation #>   • Regulation of glycolysis by fructose 2,6-bisphosphate metabolism #>   • Activation of SMO #>   • G alpha (s) signalling events #>   • RHOJ GTPase cycle #>   • Signaling by ERBB2 KD Mutants #>   • SHC1 events in ERBB4 signaling #>   • Signalling to RAS #>   • Interleukin-2 signaling #>   • Reactions specific to the complex N-glycan synthesis pathway #>   • Activation and oligomerization of BAK protein #>   • Activation, translocation and oligomerization of BAX #>   • Alpha-oxidation of phytanate #>   • Synthesis of bile acids and bile salts via 24-hydroxycholesterol #>   • Astrocytic Glutamate-Glutamine Uptake And Metabolism #>   • MTF1 activates gene expression #>   • Interleukin-10 signaling #>   • Interleukin-18 signaling #>   • Synthesis of wybutosine at G37 of tRNA(Phe) #>   • Proline catabolism #>   • Reversal of alkylation damage by DNA dioxygenases #>   • Regulation of ornithine decarboxylase (ODC) #>   • Antigen activates B Cell Receptor (BCR) leading to generation of second #>   messengers #>   • Synaptic adhesion-like molecules #>   • RUNX1 regulates transcription of genes involved in differentiation of #>   myeloid cells #>   • RUNX2 regulates genes involved in differentiation of myeloid cells #>   • Constitutive Signaling by AKT1 E17K in Cancer #>   • TRIF-mediated programmed cell death #>   • TLR3-mediated TICAM1-dependent programmed cell death #>   • TNFR1-induced proapoptotic signaling #>   • Microbial modulation of RIPK1-mediated regulated necrosis #>   • FasL/ CD95L signaling #>   • Defective RIPK1-mediated regulated necrosis #>   • RAS processing #>   • DCC mediated attractive signaling #>   • Inactivation of CDC42 and RAC1 #>   • Signaling by Retinoic Acid #>   • Synthesis of PIPs at the ER membrane #>   • SHC-mediated cascade:FGFR1 #>   • SHC-mediated cascade:FGFR2 #>   • Signaling by FGFR2 in disease #>   • SHC-mediated cascade:FGFR3 #>   • SHC-mediated cascade:FGFR4 #>   • Signaling by FGFR3 in disease #>   • Activation of RAS in B cells #>   • SOS-mediated signalling #>   • SHC-related events triggered by IGF1R #>   • Signaling by FGFR4 in disease #>   • RAS signaling downstream of NF1 loss-of-function variants #>   • Insulin receptor signalling cascade #>   • Activated NTRK2 signals through RAS #>   • Activated NTRK3 signals through RAS #>   • Signaling by FLT3 ITD and TKD mutants #>   • APC/C:Cdh1 mediated degradation of Cdc20 and other APC/C:Cdh1 targeted #>   proteins in late mitosis/early G1 #>   • Defective binding of RB1 mutants to E2F1,(E2F2, E2F3) #>   • Phosphorylation of proteins involved in G1/S transition by active Cyclin #>   E:Cdk2 complexes #>   • Defective translocation of RB1 mutants to the nucleus #>   • Replication of the SARS-CoV-1 genome #>   • Replication of the SARS-CoV-2 genome #>   • Degradation of GABA #>   • TP53 Regulates Transcription of Genes Involved in Cytochrome C Release #>   • FOXO-mediated transcription of cell death genes #>   • Regulation of FOXO transcriptional activity by acetylation #>   • Activation of the TFAP2 (AP-2) family of transcription factors #>   • Regulation of gene expression by Hypoxia-inducible Factor #>   • Toll Like Receptor 9 (TLR9) Cascade #>   • rRNA modification in the mitochondrion #>   • SARS-CoV-2 modulates host translation machinery #>   • SMAC (DIABLO) binds to IAPs #>   • Release of apoptotic factors from the mitochondria #>   • Interconversion of 2-oxoglutarate and 2-hydroxyglutarate #>   • Tryptophan catabolism #>   • Bicarbonate transporters #>   • Immunoregulatory interactions between a Lymphoid and a non-Lymphoid cell #>   • Defective PMM2 causes PMM2-CDG #>   • Synthesis of GDP-mannose #>   • SMAD2/3 Phosphorylation Motif Mutants in Cancer #>   • TGFBR1 KD Mutants in Cancer #>   • Signaling by ERBB2 #>   • Regulation of commissural axon pathfinding by SLIT and ROBO #>   • Activated NTRK2 signals through FYN #>   • Activated NTRK3 signals through PI3K #>   • Costimulation by the CD28 family #>   • Nuclear Receptor transcription pathway #>   • Cell surface interactions at the vascular wall #>   • Hyaluronan uptake and degradation #>   • Acyl chain remodelling of PI #>   • BBSome-mediated cargo-targeting to cilium #>   • Methionine salvage pathway #>   • Vitamin B2 (riboflavin) metabolism #>   • Hyaluronan uptake and degradation #>   • Attachment of GPI anchor to uPAR #>   • Transcriptional regulation by RUNX2 #>   • Cilium Assembly #>   • Acyl chain remodelling of PC #>   • Cytosolic iron-sulfur cluster assembly #>   • SARS-CoV-2 modulates autophagy #>   • OAS antiviral response #>   • APC-Cdc20 mediated degradation of Nek2A #>   • MPS IIID - Sanfilippo syndrome D #>   • TP53 Regulates Transcription of Genes Involved in G1 Cell Cycle Arrest #>   • p53-Dependent G1 DNA Damage Response #>   • TFAP2 (AP-2) family regulates transcription of cell cycle factors #>   • Transcriptional activation of cell cycle inhibitor p21 #>   • RND1 GTPase cycle #>   • Synthesis of IP3 and IP4 in the cytosol #>   • Disinhibition of SNARE formation #>   • Synthesis, secretion, and inactivation of Glucagon-like Peptide-1 (GLP-1) #>   • Binding of TCF/LEF:CTNNB1 to target gene promoters #>   • RUNX3 regulates WNT signaling #>   • Formation of Incision Complex in GG-NER #>   • SUMOylation of intracellular receptors #>   • Vitamin D (calciferol) metabolism #>   • Negative regulation of activity of TFAP2 (AP-2) family transcription #>   factors #>   • Ubiquinol biosynthesis #>   • TFAP2 (AP-2) family regulates transcription of growth factors and their #>   receptors #>   • Synthesis of PA #>   • GRB7 events in ERBB2 signaling #>   • Transcription-Coupled Nucleotide Excision Repair (TC-NER) #>   • O-linked glycosylation #>   • Defective POMGNT1 causes MDDGA3, MDDGB3 and MDDGC3 #>   • Defective POMT2 causes MDDGA2, MDDGB2 and MDDGC2 #>   • Defective POMT1 causes MDDGA1, MDDGB1 and MDDGC1 #>   • Acyl chain remodelling of PC #>   • Acyl chain remodelling of PG #>   • Insulin processing #>   • TP53 Regulates Transcription of Genes Involved in G2 Cell Cycle Arrest #>   • NTRK3 as a dependence receptor #>   • Nectin/Necl trans heterodimerization #>   • Formation of the Editosome #>   • Defective ADA disrupts (deoxy)adenosine deamination #>   • SEMA3A-Plexin repulsion signaling by inhibiting Integrin adhesion #>   • Pyrophosphate hydrolysis #>   • ABC transporters in lipid homeostasis #>   • Rap1 signalling #>   • Defective OPLAH causes OPLAHD #>   • Synthesis of diphthamide-EEF2 #>   • GABA receptor activation #>   • Signaling by SCF-KIT #>   • Invadopodia formation #>   • Selenocysteine synthesis #>   • RAF-independent MAPK1/3 activation #>   • RAC3 GTPase cycle #>   • Synthesis of IP2, IP, and Ins in the cytosol #>   • Lysosomal oligosaccharide catabolism #>   • ERKs are inactivated #>   • RUNX1 regulates expression of components of tight junctions #>   • RUNX1 regulates transcription of genes involved in differentiation of #>   keratinocytes #>   • RUNX1 regulates estrogen receptor mediated transcription #>   • RUNX1 regulates transcription of genes involved in WNT signaling #>   • RUNX1 and FOXP3 control the development of regulatory T lymphocytes (Tregs) #>   • RUNX1 regulates transcription of genes involved in interleukin signaling #>   • RUNX2 regulates chondrocyte maturation #>   • RUNX3 Regulates Immune Response and Cell Migration #>   • RUNX1 regulates transcription of genes involved in BCR signaling #>   • RUNX3 regulates RUNX1-mediated transcription #>   • Downstream signal transduction #>   • TRIF-mediated programmed cell death #>   • TRP channels #>   • SARS-CoV-1-mediated effects on programmed cell death #>   • Cellular response to hypoxia #>   • SIRT1 negatively regulates rRNA expression #>   • Synthesis of Prostaglandins (PG) and Thromboxanes (TX) #>   • Recognition and association of DNA glycosylase with site containing an #>   affected pyrimidine #>   • Displacement of DNA glycosylase by APEX1 #>   • Defective NTHL1 substrate processing #>   • Defective NTHL1 substrate binding #>   • Regulation of HMOX1 expression and activity #>   • O-linked glycosylation of mucins #>   • Post-chaperonin tubulin folding pathway #>   • TP53 Regulates Transcription of Death Receptors and Ligands #>   • Activation of PUMA and translocation to mitochondria #>   • WNT mediated activation of DVL #>   • Metalloprotease DUBs #>   • Oxygen-dependent proline hydroxylation of Hypoxia-inducible Factor Alpha #>   • Degradation of AXIN #>   • XAV939 stabilizes AXIN #>   • Post-translational modification: synthesis of GPI-anchored proteins #>   • Arachidonic acid metabolism #>   • Acyl chain remodelling of PS #>   • Acyl chain remodelling of PE #>   • Acyl chain remodelling of PI #>   • Acyl chain remodeling of CL #>   • Hydrolysis of LPC #>   • Adherens junctions interactions #>   • Tight junction interactions #>   • Sodium/Calcium exchangers #>   • Golgi Cisternae Pericentriolar Stack Reorganization #>   • Fatty acids #>   • Miscellaneous substrates #>   • Eicosanoids #>   • Maturation of replicase proteins #>   • Phospholipase C-mediated cascade: FGFR1 #>   • Phospholipase C-mediated cascade #>   • FGFR2 #>   • FGFR3 #>   • FGFR4 #>   • Role of second messengers in netrin-1 signaling #>   • PLC-gamma1 signalling #>   • Activated NTRK2 signals through PLCG1 #>   • Activated NTRK3 signals through PLCG1 #>   • Sealing of the nuclear envelope (NE) by ESCRT-III #>   • Negative regulation of NMDA receptor-mediated neuronal transmission #>   • HS-GAG degradation #>   • MPS IIIA - Sanfilippo syndrome A #>   • Synthesis of PG #>   • Metallothioneins bind metals #>   • A tetrasaccharide linker sequence is required for GAG synthesis #>   • Defective B4GALT7 causes EDS, progeroid type #>   • Defective B3GAT3 causes JDSSDHD #>   • Defective B3GALT6 causes EDSP2 and SEMDJL1 #>   • Chondroitin sulfate biosynthesis #>   • Dermatan sulfate biosynthesis #>   • CS/DS degradation #>   • Defective CHST3 causes SEDCJD #>   • Defective CHST14 causes EDS, musculocontractural type #>   • Defective CHSY1 causes TPBS #>   • NGF-stimulated transcription #>   • HSF1 activation #>   • Activation of BIM and translocation to mitochondria #>   • Vasopressin regulates renal water homeostasis via Aquaporins #>   • Activation of BMF and translocation to mitochondria #>   • Trafficking and processing of endosomal TLR #>   • NOTCH3 Activation and Transmission of Signal to the Nucleus #>   • Oncogene Induced Senescence #>   • Formation of Senescence-Associated Heterochromatin Foci (SAHF) #>   • HS-GAG biosynthesis #>   • Defective EXT2 causes exostoses 2 #>   • Defective EXT1 causes exostoses 1, TRPS2 and CHDS #>   • Elastic fibre formation #>   • Negative regulation of TCF-dependent signaling by DVL-interacting proteins #>   • WNT5:FZD7-mediated leishmania damping #>   • Degradation of GLI2 by the proteasome #>   • CRMPs in Sema3A signaling #>   • Regulation of cytoskeletal remodeling and cell spreading by IPP complex #>   components #>   • Activation of the pre-replicative complex #>   • DNA replication initiation #>   • Defective Inhibition of DNA Recombination at Telomere Due to DAXX Mutations #>   • Defective Inhibition of DNA Recombination at Telomere Due to ATRX Mutations #>   • Pyrimidine salvage #>   • Synthesis of dolichyl-phosphate-glucose #>   • Caspase activation via Dependence Receptors in the absence of ligand #>   • Constitutive Signaling by NOTCH1 PEST Domain Mutants #>   • NOTCH2 intracellular domain regulates transcription #>   • Synthesis, secretion, and inactivation of Glucose-dependent Insulinotropic #>   Polypeptide (GIP) #>   • Synthesis, secretion, and deacylation of Ghrelin #>   • Regulation by c-FLIP #>   • Biogenic amines are oxidatively deaminated to aldehydes by MAOA and MAOB #>   • Defective MAOA causes BRUNS #>   • Synthesis of PC #>   • Choline catabolism #>   • Transport of bile salts and organic acids, metal ions and amine compounds #>   • Biosynthesis of the N-glycan precursor (dolichol lipid-linked #>   oligosaccharide, LLO) and transfer to a nascent protein #>   • Defective ALG2 causes CDG-1i #>   • Pre-NOTCH Processing in the Endoplasmic Reticulum #>   • Synthesis of PS #>   • Activation of AKT2 #>   • Negative regulation of the PI3K/AKT network #>   • PDE3B signalling #>   • Inhibition of TSC complex formation by PKB #>   • Interleukin-1 signaling #>   • VEGFA-VEGFR2 Pathway #>   • Synthesis of 15-eicosatetraenoic acid derivatives #>   • Synthesis of 12-eicosatetraenoic acid derivatives #>   • Synthesis of 5-eicosatetraenoic acids #>   • tRNA modification in the mitochondrion #>   • Activation of caspases through apoptosome-mediated cleavage #>   • Cellular hexose transport #>   • Lactose synthesis #>   • Defective SLC2A1 causes GLUT1 deficiency syndrome 1 (GLUT1DS1) #>   • RNA Polymerase III Abortive And Retractive Initiation #>   • RHOU GTPase cycle #>   • Metallothioneins bind metals #>   • G1/S-Specific Transcription #>   • Intrinsic Pathway of Fibrin Clot Formation #>   • Common Pathway of Fibrin Clot Formation #>   • Unwinding of DNA #>   • Nicotinate metabolism #>   • Induction of Cell-Cell Fusion #>   • Cholesterol biosynthesis via desmosterol #>   • Cholesterol biosynthesis via lathosterol #>   • Evasion of Oncogene Induced Senescence Due to Defective p16INK4A binding to #>   CDK4 and CDK6 #>   • Evasion of Oxidative Stress Induced Senescence Due to Defective p16INK4A #>   binding to CDK4 and CDK6 #>   • Drug-mediated inhibition of CDK4/CDK6 activity #>   • NTRK2 activates RAC1 #>   • Activated NTRK2 signals through CDK5 #>   • Defective TPMT causes TPMT deficiency #>   • Membrane binding and targetting of GAG proteins #>   • Maturation of protein 3a #>   • Synthesis of PG #>   • Peroxisomal lipid metabolism #>   • Recognition and association of DNA glycosylase with site containing an #>   affected purine #>   • SARS-CoV-1 activates/modulates innate immune responses #>   • Lysosome Vesicle Biogenesis #>   • Nuclear signaling by ERBB4 #>   • MyD88:MAL(TIRAP) cascade initiated on plasma membrane #>   • TRAF6 mediated induction of NFkB and MAP kinases upon TLR7/8 or 9 #>   activation #>   • MyD88 cascade initiated on plasma membrane #>   • NOTCH2 Activation and Transmission of Signal to the Nucleus #>   • Pre-NOTCH Processing in the Endoplasmic Reticulum #>   • Defective LFNG causes SCDO3 #>   • p38MAPK events #>   • Signaling by MST1 #>   • Vitamin B5 (pantothenate) metabolism #>   • Regulation of TP53 Activity through Methylation #>   • Activation of BIM and translocation to mitochondria #>   • Interleukin-38 signaling #>   • CYP2E1 reactions #>   • Resolution of D-loop Structures through Holliday Junction Intermediates #>   • Resolution of D-loop Structures through Synthesis-Dependent Strand #>   Annealing (SDSA) #>   • Defective HDR through Homologous Recombination (HRR) due to BRCA1 #>   loss-of-function #>   • Defective HDR through Homologous Recombination Repair (HRR) due to PALB2 #>   loss of BRCA1 binding function #>   • Defective HDR through Homologous Recombination Repair (HRR) due to PALB2 #>   loss of BRCA2/RAD51/RAD51C binding function #>   • Impaired BRCA2 binding to PALB2 #>   • Cholesterol biosynthesis via desmosterol #>   • EPHB-mediated forward signaling #>   • Carnitine metabolism #>   • G alpha (z) signalling events #>   • Signaling by BMP #>   • tRNA modification in the nucleus and cytosol #>   • Synthesis of PIPs at the early endosome membrane #>   • Transport of nucleosides and free purine and pyrimidine bases across the #>   plasma membrane #>   • Arachidonate production from DAG #>   • Regulation of Complement cascade #>   • SIRT1 negatively regulates rRNA expression #>   • Molybdenum cofactor biosynthesis #>   • Synthesis of pyrophosphates in the cytosol #>   • Tyrosine catabolism #>   • Signaling by PDGF #>   • NCAM1 interactions #>   • Collagen chain trimerization #>   • Synthesis of very long-chain fatty acyl-CoAs #>   • Linoleic acid (LA) metabolism #>   • Transport of vitamins, nucleosides, and related molecules #>   • Defective SLC33A1 causes spastic paraplegia 42 (SPG42) #>   • Electric Transmission Across Gap Junctions #>   • Neurofascin interactions #>   • Activation of the mRNA upon binding of the cap-binding complex and eIFs, #>   and subsequent binding to 43S #>   • WNT ligand biogenesis and trafficking #>   • TCF dependent signaling in response to WNT #>   • InlA-mediated entry of Listeria monocytogenes into host cells #>   • Transport of fatty acids #>   • Miscellaneous transport and binding events #>   • RHO GTPases Activate Rhotekin and Rhophilins #>   • Dissolution of Fibrin Clot #>   • Regulation of TP53 Activity through Acetylation #>   • PI5P, PP2A and IER3 Regulate PI3K/AKT Signaling #>   • IRS activation #>   • Surfactant metabolism #>   • Molecules associated with elastic fibres #>   • NR1H2 & NR1H3 regulate gene expression linked to triglyceride lipolysis in #>   adipose #>   • NR1H2 & NR1H3 regulate gene expression to control bile acid homeostasis #>   • NR1H2 & NR1H3 regulate gene expression to limit cholesterol uptake #>   • NR1H2 & NR1H3 regulate gene expression linked to gluconeogenesis #>   • Recognition of DNA damage by PCNA-containing replication complex #>   • STING mediated induction of host immune responses #>   • SUMOylation of transcription factors #>   • TP53 Regulates Transcription of Caspase Activators and Caspases #>   • PINK1-PRKN Mediated Mitophagy #>   • Caspase activation via Dependence Receptors in the absence of ligand #>   • PI3K events in ERBB4 signaling #>   • Activated NTRK2 signals through PI3K #>   • Erythrocytes take up carbon dioxide and release oxygen #>   • Synthesis of pyrophosphates in the cytosol #>   • Zinc efflux and compartmentalization by the SLC30 family #>   • Protein repair #>   • Transport of nucleotide sugars #>   • Zinc influx into cells by the SLC39 gene family #>   • Fatty acyl-CoA biosynthesis #>   • MPS VII - Sly syndrome #>   • Formation of the beta-catenin:TCF transactivating complex #>   • Cobalamin (Cbl) metabolism #>   • Defective MMAB causes MMA, cblB type #>   • Glycine degradation #>   • Response of EIF2AK4 (GCN2) to amino acid deficiency #>   • Antimicrobial peptides #>   • Terminal pathway of complement #>   • Defective ABCD1 causes ALD #>   • Keratan sulfate degradation #>   • MPS IV - Morquio syndrome A #>   • Amino acid transport across the plasma membrane #>   • Triglyceride biosynthesis #>   • RUNX1 regulates transcription of genes involved in interleukin signaling #>   • Cooperation of PDCL (PhLP1) and TRiC/CCT in G-protein beta folding #>   • Estrogen-dependent nuclear events downstream of ESR-membrane signaling #>   • PTK6 Regulates Cell Cycle #>   • ARL13B-mediated ciliary trafficking of INPP5E #>   • Peroxisomal lipid metabolism #>   • The role of GTSE1 in G2/M progression after G2 checkpoint #>   • MPS IIIB - Sanfilippo syndrome B #>   • Evasion of Oncogene Induced Senescence Due to Defective p16INK4A binding to #>   CDK4 #>   • Evasion of Oxidative Stress Induced Senescence Due to Defective p16INK4A #>   binding to CDK4 #>   • Vitamin C (ascorbate) metabolism #>   • The activation of arylsulfatases #>   • Protein repair #>   • Mitochondrial iron-sulfur cluster biogenesis #>   • Nef mediated downregulation of MHC class I complex cell surface expression #>   • Phosphate bond hydrolysis by NUDT proteins #>   • Sodium-coupled phosphate cotransporters #>   • Defective SLC20A2 causes idiopathic basal ganglia calcification 1 (IBGC1) #>   • O-linked glycosylation #>   • Assembly of active LPL and LIPC lipase complexes #>   • Class B/2 (Secretin family receptors) #>   • Signaling by RNF43 mutants #>   • Zinc efflux and compartmentalization by the SLC30 family #>   • Ca2+ pathway #>   • cGMP effects #>   • Beta oxidation of decanoyl-CoA to octanoyl-CoA-CoA #>   • The NLRP1 inflammasome #>   • Defective MAN1B1 causes MRT15 #>   • O-glycosylation of TSR domain-containing proteins #>   • Non-integrin membrane-ECM interactions #>   • Physiological factors #>   • Protein methylation #>   • Mitochondrial iron-sulfur cluster biogenesis #>   • Gamma carboxylation, hypusine formation and arylsulfatase activation #>   • Defective ALG1 causes CDG-1k #>   • VxPx cargo-targeting to cilium #>   • Regulation of NF-kappa B signaling #>   • Ceramide signalling #>   • NFG and proNGF binds to p75NTR #>   • Role of LAT2/NTAL/LAB on calcium mobilization #>   • UNC93B1 deficiency - HSE #>   • TP53 Regulates Transcription of Genes Involved in G1 Cell Cycle Arrest #>   • Defective RFT1 causes CDG-1n #>   • SARS-CoV-2 targets PDZ proteins in cell-cell junction #>   • SARS-CoV-1 targets PDZ proteins in cell-cell junction #>   • AMPK inhibits chREBP transcriptional activation activity #>   • Synthesis of dolichyl-phosphate mannose #>   • Defective DPM1 causes DPM1-CDG #>   • Defective DPM3 causes DPM3-CDG #>   • Defective DPM2 causes DPM2-CDG #>   • BMAL1:CLOCK,NPAS2 activates circadian gene expression #>   • Defective SLC35A2 causes congenital disorder of glycosylation 2M (CDG2M) #>   • Choline catabolism #>   • Activation of NOXA and translocation to mitochondria #>   • Defective ALG8 causes CDG-1h #>   • Heme biosynthesis #>   • Resolution of D-loop Structures through Holliday Junction Intermediates #>   • HSF1-dependent transactivation #>   • Sensory processing of sound by outer hair cells of the cochlea #>   • Regulation of cortical dendrite branching #>   • TNF receptor superfamily (TNFSF) members mediating non-canonical NF-kB #>   pathway #>   • ALKBH2 mediated reversal of alkylation damage #>   • Fatty acids #>   • Defective GALT can cause GALCT #>   • Scavenging by Class A Receptors #>   • Pre-NOTCH Transcription and Translation #>   • Vitamin B1 (thiamin) metabolism #>   • Pre-NOTCH Processing in Golgi #>   • Mitochondrial translation initiation #>   • PI5P Regulates TP53 Acetylation #>   • Endogenous sterols #>   • Recycling of bile acids and salts #>   • Synthesis of bile acids and bile salts via 27-hydroxycholesterol #>   • Synthesis of Ketone Bodies #>   • TNFs bind their physiological receptors #>   • Transport of RCbl within the body #>   • Defective CD320 causes MMATC #>   • Synthesis of glycosylphosphatidylinositol (GPI) #>   • Activation of Matrix Metalloproteinases #>   • SCF(Skp2)-mediated degradation of p27/p21 #>   • Phosphate bond hydrolysis by NUDT proteins #>   • Stabilization of p53 #>   • Platelet homeostasis #>   • Entry of Influenza Virion into Host Cell via Endocytosis #>   • GPVI-mediated activation cascade #>   • Activated NOTCH1 Transmits Signal to the Nucleus #>   • Defective SLC35A1 causes congenital disorder of glycosylation 2F (CDG2F) #>   • Regulation of RAS by GAPs #>   • Mitochondrial Fatty Acid Beta-Oxidation #>   • Defective SLC17A5 causes Salla disease (SD) and ISSD #>   • Synthesis of PI #>   • Metal ion SLC transporters #>   • Histidine catabolism #>   • SUMO is conjugated to E1 (UBA2:SAE1) #>   • SUMO is proteolytically processed #>   • Defective ALG6 causes CDG-1c #>   • Acyl chain remodelling of PG #>   • Degradation of GLI1 by the proteasome #>   • DARPP-32 events #>   • Extrinsic Pathway of Fibrin Clot Formation #>   • Scavenging of heme from plasma #>   • TNF receptor superfamily (TNFSF) members mediating non-canonical NF-kB #>   pathway #>   • The retinoid cycle in cones (daylight vision) #>   • PKA-mediated phosphorylation of CREB #>   • CREB1 phosphorylation through NMDA receptor-mediated activation of RAS #>   signaling #>   • MECP2 regulates transcription factors #>   • Defective SLC12A6 causes agenesis of the corpus callosum, with peripheral #>   neuropathy (ACCPN) #>   • Nuclear Envelope Breakdown #>   • Release of apoptotic factors from the mitochondria #>   • Transcriptional regulation of testis differentiation #>   • NOD1/2 Signaling Pathway #>   • EGFR downregulation #>   • Regulation of TLR by endogenous ligand #>   • CD163 mediating an anti-inflammatory response #>   • Synthesis of PE #>   • FGFR3c ligand binding and activation #>   • Defective GALNT3 causes HFTC #>   • Chylomicron clearance #>   • Progressive trimming of alpha-1,2-linked mannose residues from #>   Man9/8/7GlcNAc2 to produce Man5GlcNAc2 #>   • Transport of organic anions #>   • NCAM1 interactions #>   • Defective GALNT12 causes CRCS1 #>   • Acetylation #>   • Activation of PUMA and translocation to mitochondria #>   • Negative regulation of TCF-dependent signaling by WNT ligand antagonists #>   • Signaling by LRP5 mutants #>   • Negative regulation of MAPK pathway #>   • Defective ALG11 causes CDG-1p #>   • A tetrasaccharide linker sequence is required for GAG synthesis #>   • HS-GAG biosynthesis #>   • Retinoid metabolism and transport #>   • Sensory perception of salty taste #>   • Defective MPDU1 causes CDG-1f #>   • ROS and RNS production in phagocytes #>   • AMPK inhibits chREBP transcriptional activation activity #>   • Transcriptional Regulation by MECP2 #>   • PTEN Loss of Function in Cancer #>   • Regulation of PTEN mRNA translation #>   • WNT5A-dependent internalization of FZD2, FZD5 and ROR2 #>   • MECP2 regulates neuronal receptors and channels #>   • Defective ALG3 causes CDG-1d #>   • Activation of ATR in response to replication stress #>   • NOTCH3 Intracellular Domain Regulates Transcription #>   • Defective ALG14 causes ALG14-CMS #>   • Vitamin B2 (riboflavin) metabolism #>   • Sodium/Proton exchangers #>   • Regulation of PAK-2p34 activity by PS-GAP/RHG10 #>   • RNA Polymerase I Transcription Initiation #>   • Striated Muscle Contraction #>   • Phosphorylation of CD3 and TCR zeta chains #>   • Translocation of ZAP-70 to Immunological synapse #>   • Gamma carboxylation, hypusine formation and arylsulfatase activation #>   • Tandem of pore domain in a weak inwardly rectifying K+ channels (TWIK) #>   • Phase 4 - resting membrane potential #>   • mRNA Splicing - Minor Pathway #>   • Sensory perception of sweet, bitter, and umami (glutamate) taste #>   • Phase 0 - rapid depolarisation #>   • IL-6-type cytokine receptor ligand interactions #>   • TAK1-dependent IKK and NF-kappa-B activation #>   • Platelet degranulation #>   • TP53 Regulates Transcription of Caspase Activators and Caspases #>   • MyD88:MAL(TIRAP) cascade initiated on plasma membrane #>   • IRAK4 deficiency (TLR5) #>   • Expression and translocation of olfactory receptors #>   • SUMO is proteolytically processed #>   • IRE1alpha activates chaperones #>   • Activation of NF-kappaB in B cells #>   • PRC2 methylates histones and DNA #>   • Scavenging by Class B Receptors #>   • HDL clearance #>   • Defective ABCA1 causes TGD #>   • Chylomicron remodeling #>   • HDL remodeling #>   • Synthesis of Dolichyl-phosphate #>   • Defective SLC39A4 causes acrodermatitis enteropathica, zinc-deficiency type #>   (AEZ) #>   • Lysosomal oligosaccharide catabolism #>   • Defective MTRR causes HMAE #>   • Defective MTR causes HMAG #>   • Homologous DNA Pairing and Strand Exchange #>   • G0 and Early G1 #>   • Transcriptional activation of cell cycle inhibitor p21 #>   • Mtb iron assimilation by chelation #>   • Metal sequestration by antimicrobial proteins #>   • FGFRL1 modulation of FGFR1 signaling #>   • Termination of translesion DNA synthesis #>   • ATF6 (ATF6-alpha) activates chaperones #>   • CREB3 factors activate genes #>   • Assembly of active LPL and LIPC lipase complexes #>   • Defective DHDDS causes RP59 #>   • Defective SLC35C1 causes congenital disorder of glycosylation 2C (CDG2C) #>   • N-glycan trimming in the ER and Calnexin/Calreticulin cycle #>   • Ca2+ activated K+ channels #>   • Signal regulatory protein family interactions #>   • Mitotic Metaphase/Anaphase Transition #>   • Assembly of the pre-replicative complex #>   • Removal of aminoterminal propeptides from gamma-carboxylated proteins #>   • NGF processing #>   • Synthesis and processing of ENV and VPU #>   • Tetrahydrobiopterin (BH4) synthesis, recycling, salvage and regulation #>   • RUNX1 regulates transcription of genes involved in BCR signaling #>   • Xenobiotics #>   • Defective B3GALTL causes PpS #>   • O-glycosylation of TSR domain-containing proteins #>   • MET interacts with TNS proteins #>   • Keratan sulfate biosynthesis #>   • Beta oxidation of butanoyl-CoA to acetyl-CoA #>   • Eukaryotic Translation Termination #>   • Proton-coupled monocarboxylate transport #>   • Activation of IRF3/IRF7 mediated by TBK1/IKK epsilon #>   • Dectin-2 family #>   • Termination of O-glycan biosynthesis #>   • Defective C1GALT1C1 causes TNPS #>   • Transport of inorganic cations/anions and amino acids/oligopeptides #>   • Defective SLC1A3 causes episodic ataxia 6 (EA6) #>   • Proton/oligopeptide cotransporters #>   • APC/C:Cdc20 mediated degradation of Securin #>   • Aflatoxin activation and detoxification #>   • TRP channels #>   • Initiation of Nuclear Envelope (NE) Reformation #>   • Neurofascin interactions #>   • Sema4D induced cell migration and growth-cone collapse #>   • Aspirin ADME #>   • Glucuronidation #>   • Prednisone ADME #>   • MAP2K and MAPK activation #>   • Elevation of cytosolic Ca2+ levels #>   • Platelet homeostasis #>   • Long-term potentiation #>   • IRF3-mediated induction of type I IFN #>   • Regulation by TREX1 #>   • FOXO-mediated transcription of cell death genes #>   • Meiotic recombination #>   • The canonical retinoid cycle in rods (twilight vision) #>   • Retrograde neurotrophin signalling #>   • Degradation of beta-catenin by the destruction complex #>   • Phosphate bond hydrolysis by NTPDase proteins #>   • Organic anion transport #>   • Reactions specific to the complex N-glycan synthesis pathway #>   • Defective MGAT2 causes CDG-2a #>   • Cross-presentation of soluble exogenous antigens (endosomes) #>   • Lipid particle organization #>   • Hedgehog 'off' state #>   • N-Glycan antennae elongation #>   • Keratan sulfate biosynthesis #>   • Interaction With Cumulus Cells And The Zona Pellucida #>   • Defective B4GALT1 causes B4GALT1-CDG (CDG-2d) #>   • Defective B4GALT1 causes CDG-2d #>   • Atorvastatin ADME #>   • Defective ABCC2 causes DJS #>   • Pyrimidine catabolism #>   • Lewis blood group biosynthesis #>   • Transferrin endocytosis and recycling #>   • EPH-ephrin mediated repulsion of cells #>   • Na+/Cl- dependent neurotransmitter transporters #>   • Dopamine clearance from the synaptic cleft #>   • Defective SLC6A3 causes Parkinsonism-dystonia infantile (PKDYS) #>   • ABC transporters in lipid homeostasis #>   • Sodium/Calcium exchangers #>   • Regulation of cholesterol biosynthesis by SREBP (SREBF) #>   • Arachidonic acid metabolism #>   • APC truncation mutants are not K63 polyubiquitinated #>   • Defective ALG12 causes CDG-1g #>   • Defective DPAGT1 causes CDG-1j, CMSTA2 #>   • Adenylate cyclase activating pathway #>   • G0 and Early G1 #>   • Butyrophilin (BTN) family interactions #>   • Pexophagy #>   • Phosphate bond hydrolysis by NTPDase proteins #>   • Defective Mismatch Repair Associated With MLH1 #>   • Defective Mismatch Repair Associated With PMS2 #>   • RNA Polymerase II Transcription Termination #>   • IRS-related events triggered by IGF1R #>   • Establishment of Sister Chromatid Cohesion #>   • Netrin-1 signaling #>   • Metabolism of ingested SeMet, Sec, MeSec into H2Se #>   • Regulation of Complement cascade #>   • Activation of C3 and C5 #>   • Glucagon-like Peptide-1 (GLP1) regulates insulin secretion #>   • G alpha (s) signalling events #>   • Class A/1 (Rhodopsin-like receptors) #>   • Electric Transmission Across Gap Junctions #>   • Transport of bile salts and organic acids, metal ions and amine compounds #>   • PI Metabolism #>   • Regulation of NPAS4 gene transcription #>   • PIWI-interacting RNA (piRNA) biogenesis #>   • Spry regulation of FGF signaling #>   • Gamma-carboxylation of protein precursors #>   • Defective gamma-carboxylation of F9 #>   • Synthesis of 15-eicosatetraenoic acid derivatives #>   • NrCAM interactions #>   • Neurotransmitter release cycle #>   • Metabolism of vitamin K #>   • Class C/3 (Metabotropic glutamate/pheromone receptors) #>   • Lysosphingolipid and LPA receptors #>   • TGFBR2 Kinase Domain Mutants in Cancer #>   • Interaction between L1 and Ankyrins #>   • Serotonin and melatonin biosynthesis #>   • Amine ligand-binding receptors"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_contamination.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the relative amount of protein contamination — stats_contamination","title":"Assess the relative amount of protein contamination — stats_contamination","text":"stats_contamination() analysis function can take regular expression means assign subsets proteins contaminant.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_contamination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the relative amount of protein contamination — stats_contamination","text":"","code":"stats_contamination(data = NULL, pattern = \"CRAP\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_contamination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the relative amount of protein contamination — stats_contamination","text":"data tidyproteomics data object pattern character string, regular expression","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_contamination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the relative amount of protein contamination — stats_contamination","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for displaying data — stats_print","title":"Helper function for displaying data — stats_print","text":"Helper function displaying data","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for displaying data — stats_print","text":"","code":"stats_print(table, title = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for displaying data — stats_print","text":"table tibble title character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for displaying data — stats_print","text":"print table console","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the protein accounting — stats_summary","title":"Summarize the protein accounting — stats_summary","text":"stats_summary() analysis function computes protein summary statistics given tidyproteomics data object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the protein accounting — stats_summary","text":"","code":"stats_summary(   data,   group_by = c(\"global\", \"sample\", \"replicate\", \"experiment\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the protein accounting — stats_summary","text":"data tidyproteomics data object group_by summarize","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/stats_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the protein accounting — stats_summary","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/str_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize the column names in a tibble — str_normalize","title":"Normalize the column names in a tibble — str_normalize","text":"Normalize column names tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/str_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize the column names in a tibble — str_normalize","text":"","code":"str_normalize(x)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/str_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize the column names in a tibble — str_normalize","text":"x vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/str_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize the column names in a tibble — str_normalize","text":"vector","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data subset — subset","title":"Create a data subset — subset","text":"subset() main function sub-setting quantitative data tidyproteomics data-object based regular expression targeted annotation. function return smaller tidyproteomics data-object. Note: rm.mbr() run default, remove MBR proteins may longer original \"anchor\" observation present.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data subset — subset","text":"","code":"subset(data = NULL, ..., rm.mbr = TRUE, .verbose = TRUE)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data subset — subset","text":"data tidyproteomics data object ... three part expression (eg. x == ) rm.mbr boolean .verbose boolean","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data subset — subset","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data subset — subset","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # creates a subset of just Ribosomes, based on the string in the annotation # protein_description hela_proteins %>%    subset(description %like% \"Ribosome\") %>%    summary() #>  #> ℹ Subsetting data: description %like% Ribosome #> ✔ Subsetting data: description %like% Ribosome ... done #>  #>  #> ── Summary: global ── #>  #>  proteins peptides peptides_unique quantifiable  CVs #>        18      224             224        0.986 0.24 #>   # creates a subset without Ribosomes hela_proteins %>%    subset(!description %like% \"Ribosome\") %>%    summary() #>  #> ℹ Subsetting data: !description %like% Ribosome #> ✔ Subsetting data: !description %like% Ribosome ... done #>  #>  #> ── Summary: global ── #>  #>  proteins peptides peptides_unique quantifiable  CVs #>      7037    66105           58482        0.908 0.25 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/summary.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data — summary.tidyproteomics","title":"Summarize the data — summary.tidyproteomics","text":"summary() analysis function computes protein summary statistics given tidyproteomics data object. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/summary.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data — summary.tidyproteomics","text":"","code":"# S3 method for tidyproteomics summary(object, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/summary.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data — summary.tidyproteomics","text":"object tidyproteomics data object ... passthrough arguments","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/summary.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data — summary.tidyproteomics","text":"tibble print, tidyproteomics data-object save","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/summary.tidyproteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data — summary.tidyproteomics","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # a global summary hela_proteins %>% summary() #>  #> ── Summary: global ── #>  #>  proteins peptides peptides_unique quantifiable  CVs #>      7055    66329           58706        0.908 0.25 #>   # a summary by sample hela_proteins %>% summary(\"sample\") #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     7055    66329           58706        0.908 0.16 #>  knockdown     7055    66329           58706        0.909 0.21 #>   # a summary by sample with match_between_runs removed hela_proteins %>%    subset(match_between_runs == FALSE) %>%    summary(\"sample\") #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>  #>  #> ── Summary: sample ── #>  #>     sample proteins peptides peptides_unique quantifiable  CVs #>    control     6527    62871           56511        0.940 0.16 #>  knockdown     6556    63319           56819        0.937 0.21 #>   # a summary of match_between_runs hela_proteins %>% summary(\"match_between_runs\") #>  #> ── Summary: match_between_runs ── #>  #>  match_between_runs proteins peptides peptides_unique quantifiable  CVs #>               FALSE     7055    63095           56665        0.939 0.25 #>                TRUE     2379     3235            2042        0.315 0.25 #>   hela_proteins %>% summary(\"cellular_component\") #>  #> ── Summary: cellular_component ── #>  #>     cellular_component proteins peptides peptides_unique quantifiable   CVs #>                  Golgi        9       44              35        0.902 0.200 #>           cell surface       18       52              52        0.712 0.275 #>             chromosome        3        6               6        0.111 0.320 #>              cytoplasm     7055    66329           58706        0.908 0.250 #>           cytoskeleton      127      504             422        0.691 0.280 #>                cytosol      121     1275            1208        0.935 0.240 #>  endoplasmic reticulum       24      182              75        0.776 0.220 #>               endosome      111      975             883        0.907 0.240 #>          extracellular       33      341             296        0.819 0.310 #>               membrane      431     4082            3535        0.890 0.250 #>          mitochondrion       16       88              87        0.831 0.310 #>                nucleus      186     1169             959        0.843 0.280 #>   hela_proteins %>% summary(\"biological_process\") #>  #> ── Summary: biological_process ── #>  #>                biological_process proteins peptides peptides_unique #>                cell communication        9      100              93 #>                        cell death        1        3               1 #>              cell differentiation        3        9               9 #>                       cell growth      104     1419             839 #>  cell organization and biogenesis       17      241             241 #>                cell proliferation     7055    66329           58706 #>       cellular component movement        6       13              11 #>              cellular homeostasis      324     2854            2631 #>                       coagulation        9       68              58 #>                       conjugation      181     1460            1240 #>                  defense response       15       83              76 #>                       development       38      180             164 #>                 metabolic process      342     2804            2422 #>  quantifiable   CVs #>         0.920 0.200 #>         1.000 0.340 #>         0.389 0.305 #>         0.803 0.280 #>         0.967 0.210 #>         0.908 0.250 #>         0.679 0.410 #>         0.938 0.260 #>         0.885 0.220 #>         0.893 0.260 #>         0.709 0.275 #>         0.730 0.245 #>         0.886 0.250 #>"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/svm_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"parallel compute function for randomforest — svm_parallel","title":"parallel compute function for randomforest — svm_parallel","text":"parallel compute function randomforest","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/svm_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parallel compute function for randomforest — svm_parallel","text":"","code":"svm_parallel(df)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/svm_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parallel compute function for randomforest — svm_parallel","text":"df tibble raw centered values","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/svm_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parallel compute function for randomforest — svm_parallel","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/table_quantrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to quantitation plots — table_quantrank","title":"Helper function to quantitation plots — table_quantrank","text":"table_quantrank()","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/table_quantrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to quantitation plots — table_quantrank","text":"","code":"table_quantrank(   data = NULL,   accounting = NULL,   display_filter = c(\"none\", \"log2_foldchange\", \"p_value\", \"adj_p_value\") )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/table_quantrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to quantitation plots — table_quantrank","text":"data tidyproteomics data object accounting character string display_filter numeric 0 1","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/table_quantrank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to quantitation plots — table_quantrank","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/table_quantrank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to quantitation plots — table_quantrank","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) hela_proteins %>% plot_quantrank()   hela_proteins %>% plot_quantrank(type = 'lines')   hela_proteins %>% plot_quantrank(type = 'lines', display_filter = 'log2_foldchange', display_cutoff = 1) #> Warning: ggrepel: 350 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/theme_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for having nice colors — theme_palette","title":"helper function for having nice colors — theme_palette","text":"helper function nice colors","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/theme_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for having nice colors — theme_palette","text":"","code":"theme_palette(n = 16)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/theme_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for having nice colors — theme_palette","text":"character vector curated html colors","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — tidyproteomics","title":"Tidy-Quant data object print definition — tidyproteomics","text":"Tidy-Quant data object print definition","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — tidyproteomics","text":"","code":"tidyproteomics(obj)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — tidyproteomics","text":"obj tidyproteomics data object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — tidyproteomics","text":"print object summary","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset a data frame — tidyproteomics_quo","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"Helper function subset data frame","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"","code":"tidyproteomics_quo(...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"... quo","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"list object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get a name from the ... — tidyproteomics_quo_name","title":"Helper function to get a name from the ... — tidyproteomics_quo_name","text":"Helper function get name ...","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get a name from the ... — tidyproteomics_quo_name","text":"","code":"tidyproteomics_quo_name(...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get a name from the ... — tidyproteomics_quo_name","text":"... quo","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_quo_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get a name from the ... — tidyproteomics_quo_name","text":"character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to summarize the data — tidyproteomics_summary","title":"Helper function to summarize the data — tidyproteomics_summary","text":"summary() analysis function computes protein summary statistics given tidyproteomics data object. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to summarize the data — tidyproteomics_summary","text":"","code":"tidyproteomics_summary(   data,   by = c(\"global\"),   destination = c(\"print\", \"save\", \"return\"),   limit = 25,   contamination = NULL )"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to summarize the data — tidyproteomics_summary","text":"data tidyproteomics data object summarize destination character string, one (save, print) limit numeric limit number output groups contamination character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/tidyproteomics_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to summarize the data — tidyproteomics_summary","text":"tibble print, tidyproteomics data-object save","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"helper function normalizing quantitative data tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"","code":"transform_factor(data, data_factor = NULL, ...)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"data tidyproteomics data object data_factor tidyproteomics data object ... pass arguments","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_log2.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing a quantitative table — transform_log2","title":"helper function for normalizing a quantitative table — transform_log2","text":"helper function normalizing quantitative table","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_log2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing a quantitative table — transform_log2","text":"","code":"transform_log2(table, values = \"abundance\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_log2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing a quantitative table — transform_log2","text":"table tibble values character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_log2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing a quantitative table — transform_log2","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_median.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"helper function normalizing quantitative data tidyproteomics data-object","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"","code":"transform_median(data, group_by = c(\"identifier\"), rename = \"log2_med\")"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"data tidyproteomics data object group_by character vector rename character string","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/transform_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/write_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functio to write data table locally — write_local","title":"Helper functio to write data table locally — write_local","text":"write_local() save data table local project,","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/write_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functio to write data table locally — write_local","text":"","code":"write_local(table = NULL, file_name = NULL)"},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/write_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functio to write data table locally — write_local","text":"table tibble file_name tibble","code":""},{"path":"https://jeffsocal.github.io/tidyproteomics/reference/write_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functio to write data table locally — write_local","text":"tidyproteomics data object","code":""}]
