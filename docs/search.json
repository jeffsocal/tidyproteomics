[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 tidyproteomics authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/01-workflow-simple.html","id":"importing-data","dir":"Articles","previous_headings":"","what":"Importing Data","title":"01 Import and Summarize","text":"","code":"# path_to_package_data() loads data specific to this package # for your project load local data # example:  # your_proteins <- \"./data/your_exported_results.xlsx\" %>% #   import(\"ProteomeDiscoverer\", \"proteins\")  ecoli_proteins <- path_to_package_data(\"pd_ecoli-hint_proteins.xlsx\") %>%   import(\"ProteomeDiscoverer\", \"proteins\") #>  [36mℹ [39m Importing  [3mpd_ecoli-hint_proteins.xlsx [23m #>  [33m! [39m .. not all expected annotation columns present in import file #>  [36mℹ [39m Importing  [3mpd_ecoli-hint_proteins.xlsx [23m  [32m✔ [39m Importing  [3mpd_ecoli-hint_proteins.xlsx [23m  [38;5;249m[739ms] [39m"},{"path":"/articles/01-workflow-simple.html","id":"print-data-contents","dir":"Articles","previous_headings":"Importing Data","what":"Print Data Contents","title":"01 Import and Summarize","text":"Printing imported data object, simply exposing object show summary data object contents operations performed data, contents summarized","code":"ecoli_proteins #>  #> ── Quantitative Proteomics Data Object ── #>  #> ProteomeDiscoverer -> proteins (4.13 MB) #> Quantitation    8 files  #>                 2 samples (hint_ko, wt)  #>                 2772 proteins  #>                 4.8 log10 dynamic range  #> Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name #>                 biological_process cellular_component #>                 molecular_function wiki_pathway #>                 reactome_pathway  #> ecoli_proteins %>%   reassign(field = 'sample', pattern = 'hint_ko', replace = 'ko') %>%   expression(ko/wt) %>%   enrichment(ko/wt, .term = 'biological_process') %>%   enrichment(ko/wt, .term = 'molecular_function') #> Warning in preparePathwaysAndStats(pathways, stats, minSize, maxSize, #> gseaParam, : There are duplicate gene names, fgsea may produce unexpected #> results.  #> Warning in preparePathwaysAndStats(pathways, stats, minSize, maxSize, #> gseaParam, : There are duplicate gene names, fgsea may produce unexpected #> results. #>  #> ── Quantitative Proteomics Data Object ── #>  #> ProteomeDiscoverer -> proteins (4.46 MB) #> Quantitation    8 files  #>                 2 samples (ko, wt)  #>                 2772 proteins  #>                 4.8 log10 dynamic range  #> Accounting      (4) match_between_runs num_peptides num_unique_peptides num_psms  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name #>                 biological_process cellular_component #>                 molecular_function wiki_pathway #>                 reactome_pathway  #> Analyses        (1)  #>                 ko/wt -> expression & enrichment (biological_process, molecular_function)  #>"},{"path":"/articles/01-workflow-simple.html","id":"summarize-quantitative-data","dir":"Articles","previous_headings":"Importing Data","what":"Summarize Quantitative Data","title":"01 Import and Summarize","text":"Use explicit summary() function summarize data, case globally. summary unique sample names summary includes contamination description contains ‘CRAP’, crap-ome summary contamination specify description contains ‘ribosome’ summary based term set provided annotations","code":"ecoli_proteins %>% summary() #>  #> ── Summary: global ── #>  #>  files proteins protein_groups peptides peptides_unique quantifiable       CVs #>      8     2772           2772    31271           31025         98.5 0.1573717 #> ecoli_proteins %>% summary(by = 'sample')  #>  #> ── Summary: sample ── #>  #>   sample files proteins protein_groups peptides peptides_unique quantifiable #>  hint_ko     4     2772           2772    31271           31025         98.4 #>       wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 #> ecoli_proteins %>% summary(contamination = 'CRAP')  #>  #> ── Summary: contamination ── #>  #>   sample replicate native     BSA Keratin   Other  Trypsin sample_id #>  hint_ko         1  99.7%  0.103% 0.0946%  0.103% 0.00843%  f87cee7e #>  hint_ko         2  99.7%    0.1% 0.0924%    0.1% 0.00774%  fa3a5027 #>  hint_ko         3  99.7% 0.0884% 0.0788% 0.0884% 0.00961%  fbf83a10 #>  hint_ko         4  99.7%  0.102% 0.0951%  0.102% 0.00676%  feb72c95 #>       wt         1  99.7% 0.0861% 0.0779% 0.0861%  0.0082%  ff7546a2 #>       wt         2  99.7% 0.0858% 0.0801% 0.0858% 0.00577%  fd33f8fb #>       wt         3  99.6%  0.117%  0.109%  0.117% 0.00786%  fcf192cc #>       wt         4  99.6%  0.133%  0.125%  0.133% 0.00801%  f7add5f1 #>                  import_file sample_file #>  pd_ecoli-hint_proteins.xlsx          f1 #>  pd_ecoli-hint_proteins.xlsx          f2 #>  pd_ecoli-hint_proteins.xlsx          f3 #>  pd_ecoli-hint_proteins.xlsx          f4 #>  pd_ecoli-hint_proteins.xlsx          f5 #>  pd_ecoli-hint_proteins.xlsx          f6 #>  pd_ecoli-hint_proteins.xlsx          f7 #>  pd_ecoli-hint_proteins.xlsx          f8 #> ecoli_proteins %>% summary(contamination = \"ribosome\")  #>  #> ── Summary: contamination ── #>  #>   sample replicate native ribosome sample_id                 import_file #>  hint_ko         1  99.6%   0.389%  f87cee7e pd_ecoli-hint_proteins.xlsx #>  hint_ko         2  99.7%   0.349%  fa3a5027 pd_ecoli-hint_proteins.xlsx #>  hint_ko         3  99.6%   0.368%  fbf83a10 pd_ecoli-hint_proteins.xlsx #>  hint_ko         4  99.6%   0.363%  feb72c95 pd_ecoli-hint_proteins.xlsx #>       wt         1  99.6%   0.356%  ff7546a2 pd_ecoli-hint_proteins.xlsx #>       wt         2  99.6%   0.392%  fd33f8fb pd_ecoli-hint_proteins.xlsx #>       wt         3  99.7%    0.35%  fcf192cc pd_ecoli-hint_proteins.xlsx #>       wt         4  99.6%    0.38%  f7add5f1 pd_ecoli-hint_proteins.xlsx #>  sample_file #>           f1 #>           f2 #>           f3 #>           f4 #>           f5 #>           f6 #>           f7 #>           f8 #> ecoli_proteins %>% summary('biological_process') #>  #> ── Summary: biological_process ── #>  #>                biological_process files proteins protein_groups peptides #>                     cell adhesion     8        1              1        1 #>  cell cycle OR cell proliferation     8        3              3       39 #>  cell organization and biogenesis     8       15             15      198 #>               cell-cell signaling     8     2772           2772    31271 #>           developmental processes     8        3              3        4 #>                    DNA metabolism     8     2772           2772    31271 #>        other biological processes     8      175            175     1262 #>         other metabolic processes     8      610            610     8233 #>                protein metabolism     8       18             18      332 #>   RNA metabolism OR transcription     8     2772           2772    31271 #>               signal transduction     8        1              1       18 #>                   stress response     8       45             45      330 #>                         transport     8      196            196     1542 #>  peptides_unique quantifiable       CVs #>                1         62.5 0.2738303 #>               39        100.0 0.1084535 #>              197         98.4 0.1615593 #>            31025         98.5 0.1573717 #>                4         75.0 0.1980664 #>            31025         98.5 0.1573717 #>             1258         98.4 0.1752463 #>             8179         98.6 0.1511318 #>              332         99.9 0.1944947 #>            31025         98.5 0.1573717 #>               18        100.0 0.1228771 #>              316         93.6 0.1537054 #>             1529         97.6 0.1815972 #>"},{"path":"/articles/02-workflow-publication.html","id":"import","dir":"Articles","previous_headings":"","what":"Import","title":"02 Pubication Demo","text":"","code":"rdata <- path_to_package_data('pd_ecoli-hint_proteins.xlsx') %>%   # import the data set   import('ProteomeDiscoverer', 'proteins') %>%   # change the labels on the samples containing 'ko'   reassign('sample', 'ko', 'ko')"},{"path":"/articles/02-workflow-publication.html","id":"summary-plots","dir":"Articles","previous_headings":"","what":"Summary Plots","title":"02 Pubication Demo","text":"","code":"rdata <- rdata %>%   # plot some simple summary stats   plot_counts(destination) %>%   plot_quantrank(destination = \"png\") %>%   plot_venn(destination = \"png\") %>%   plot_euler(destination = \"png\")"},{"path":"/articles/02-workflow-publication.html","id":"summary-stats","dir":"Articles","previous_headings":"","what":"Summary Stats","title":"02 Pubication Demo","text":"","code":"rdata <- rdata %>%   # save a table of simple summary stats   summary('sample', destination = 'save') %>%   # save a report on contamination   summary(contamination = 'CRAP', destination = 'save') %>%   # remove contamination   subset(description %!like% \"^CRAP\")"},{"path":"/articles/02-workflow-publication.html","id":"normalization-and-imputation","dir":"Articles","previous_headings":"","what":"Normalization and Imputation","title":"02 Pubication Demo","text":"","code":"rdata <- rdata %>%   # normalize via several methods, best method will be automatically selected   normalize(c('median','linear','limma','randomforest')) %>%   # impute with a minimum value (this is a knock-out)   impute(base::min)   # plot visualizations comparing normalization methods   plot_normalization(destination = 'png') %>%   plot_variation_cv(destination = 'png') %>%    plot_variation_pca(destination = 'png') %>%   plot_dynamic_range(destination = 'png') %>%   # plot visualizations of unbiased clustering   plot_heatmap(destination = 'png') %>%   plot_pca(destination = 'png')"},{"path":"/articles/02-workflow-publication.html","id":"expression-analysis","dir":"Articles","previous_headings":"","what":"Expression Analysis","title":"02 Pubication Demo","text":"","code":"rdata <- rdata %>%   # calculate the expression between experiment: ko and control: wt   expression(ko/wt) %>%   # plot the expression analysis   plot_volcano(ko/wt, destination = 'png', significance_column = 'p_value') %>%    plot_proportion(ko/wt, destination = 'png')"},{"path":"/articles/02-workflow-publication.html","id":"enrichment-analysis","dir":"Articles","previous_headings":"","what":"Enrichment Analysis","title":"02 Pubication Demo","text":"","code":"rdata <- rdata %>%   # calculate the enrichment of the GO term(s) using the results   # from the expression analysis   enrichment(ko/wt, .term = 'biological_process') %>%   enrichment(ko/wt, .term = 'cellular_component') %>%   enrichment(ko/wt, .term = 'molecular_function') %>%   # plot the enrichment analysis   plot_enrichment(ko/wt, .term = 'biological_process', destination = 'png') %>%   plot_enrichment(ko/wt, .term = 'cellular_component', destination = 'png') %>%   plot_enrichment(ko/wt, .term = 'molecular_function', destination = 'png')"},{"path":[]},{"path":"/articles/02-workflow-publication.html","id":"plot-quantitation-rank-with-log2-cutoff","dir":"Articles","previous_headings":"Advanced","what":"Plot Quantitation-Rank with Log2 Cutoff","title":"02 Pubication Demo","text":"","code":"# SUPPLEMENTAL FIGURES # plot an alternate quantitative ranking rdata %>%   plot_quantrank(display_filter = 'log2_foldchange',                  display_cutoff = 5) ggsave(\"plot_proteins_quantitation_rank_filtered.png\",        width = 6, h = 4)"},{"path":"/articles/02-workflow-publication.html","id":"plot-comparison-of-two-expressions","dir":"Articles","previous_headings":"Advanced","what":"Plot Comparison of Two Expressions","title":"02 Pubication Demo","text":"","code":"# import the data again to now avoid imputation rdata <- path_to_package_data('pd_ecoli-hint_proteins.xlsx') %>%   # import the data set   import('ProteomeDiscoverer', 'proteins') %>%   # change the labels on the samples containing 'ko'   reassign('sample', 'ko', 'ko')  # run a an expression analysis using a t.test statistical comparison tbl_expression_ttest <- rdata %>%   expression(ko/wt, .method = stats::t.test) %>%   # export the results table to the assigned object   export_analysis(ko/wt, .analysis = 'expression')  # run a an expression analysis using the limma statistical method tbl_expression_limma <- rdata %>%   expression(ko/wt, .method = 'limma') %>%   # export the results table to the assigned object   export_analysis(ko/wt, .analysis = 'expression')  # plot the two expression tables two compare similarities between methods plot_compexp(tbl_expression_ttest,              tbl_expression_limma,              labels_column = 'gene_name',              log2fc_min = 1, significance_column = 'p_value') +   ggplot2::labs(x = \"(log2 FC) Wilcoxon Rank Sum\",                 y = \"(log2 FC) Emperical Bayes (limma)\",                 title = \"Ecoli Hint KO ~ WT\")  ggsave(\"plot_enrichment_comparison.png\",        width = 6, h = 4)"},{"path":[]},{"path":"/articles/get-started.html","id":"data-manipulation","dir":"Articles","previous_headings":"Package overview","what":"data manipulation","title":"Get Started","text":"import() - imports data several sources tidyproteomics data object subset() - subset tidyproteomics data object given regex reassign() - quickly reassign data different sample sets merge() - combines multiple imported data sets single object export_quant() - exports tidyproteomics data object .csv, .tsv, .xlsx .rds export_analysis() - exports tidyproteomics data object .csv, .tsv, .xlsx .rds","code":""},{"path":"/articles/get-started.html","id":"basic-analysis","dir":"Articles","previous_headings":"Package overview","what":"basic analysis","title":"Get Started","text":"summary() - provides quick accounting number proteins observed plot_counts() - provides quick bar chart number proteins observed plot_quantrank() - provides quick plot quantitative expression proteins observed","code":""},{"path":"/articles/get-started.html","id":"normalization","dir":"Articles","previous_headings":"Package overview","what":"normalization","title":"Get Started","text":"normalize() - normalize raw data tidyproteomics data object select_normalization() - use weighted scheme automatically pick best normalization method, manually set one -stream analysis","code":""},{"path":"/articles/get-started.html","id":"impute-missing-values","dir":"Articles","previous_headings":"Package overview","what":"impute missing values","title":"Get Started","text":"impute() - impute missing values tidyproteomics data object","code":""},{"path":"/articles/get-started.html","id":"data-visualization","dir":"Articles","previous_headings":"Package overview","what":"data visualization","title":"Get Started","text":"plot_normalization() - boxplot raw normalized values plot_variation_cv() - scatter plot raw normalized CV dynamic range values plot_variation_pca() - scatter plot raw normalized PCA values plot_dynamic_range() - 2d density plot raw normalized CVs log10 abundance plot_venn() - Venn accounting diagram protein overlap samples plot_euler() - Euler accounting diagram protein overlap samples plot_pca() - scatter plot PCA values selected normalized data values plot_heatmap() - heatmap protein sample selected normalized data values, clustered dimensions","code":""},{"path":[]},{"path":"/articles/get-started.html","id":"expression-differences","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"expression differences","title":"Get Started","text":"expression() - calculates two-sample statistical differences protein plot_volcano() - scatter plot log2-foldchange p-values given expression test plot_proportion() - scatter plot log2-foldchange proportional-expression given expression test plot_compexp() - scatter plot comparison two expression tests visualize intersection / difference","code":""},{"path":"/articles/get-started.html","id":"term-enrichment","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"term enrichment","title":"Get Started","text":"enrichment() - term enrichment given expression test using Wilcoxon Rank Sum plot_enrichment() - bubble plot visualization term enrichment given expression test","code":""},{"path":[]},{"path":"/articles/get-started.html","id":"a-simple-work-flow-for-importing-data-and-summarizing","dir":"Articles","previous_headings":"Workflows","what":"A simple work flow for importing data and summarizing","title":"Get Started","text":"","code":"library(\"tidyproteomics\") ecoli_proteins <- path_to_package_data(\"proteins\") %>%   import(\"ProteomeDiscoverer\", \"proteins\")   ecoli_proteins %>% summary() ecoli_proteins %>% summary(by = 'sample')  ecoli_proteins %>% summary(by = 'contamination')"},{"path":"/articles/importing.html","id":"proteomediscoverer","dir":"Articles","previous_headings":"","what":"ProteomeDiscoverer","title":"Importing","text":"ProteomeDiscoverer software suite ability export data post analysis peptides proteins. can accomplished opening Study Results, selecting File \\> Export \\> Microsoft Excel. pop keep Level 1 checked, select either “Proteins” “Peptide Groups”. See Exporting section make sure required columns present.","code":""},{"path":"/articles/importing.html","id":"initial-set-up","dir":"Articles","previous_headings":"ProteomeDiscoverer","what":"Initial Set Up","title":"Importing","text":"setting experiment essential create sample names Study Definition tab open Study, navigate Study Factors box simply add Catigorical Factor name (eg. My_Sample) name study groups (eg. WT KO). destinations need applied import files Samples tab. Notice left column added Catigorical Factor named supplied. line pull-menu designating file (label TMT) one Catigorical Factors. now ensure importing data properly labeled sample. big deal hasn’t done, can fixed modify() function.","code":""},{"path":[]},{"path":"/articles/importing.html","id":"proteins","dir":"Articles","previous_headings":"ProteomeDiscoverer > Exporting","what":"Proteins","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/proteomediscoverer_protein_headers:","code":""},{"path":"/articles/importing.html","id":"peptides","dir":"Articles","previous_headings":"ProteomeDiscoverer > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/proteomediscoverer_peptide_headers:","code":"# replace path_to_package_data(\"proteins\") with the path to your local data. # ecoli_proteins <- \"./data/ecoli_export_table.xlsx\" %>% #    import(\"ProteomeDiscoverer\", \"proteins\")  ecoli_proteins <- path_to_package_data(\"ecoli-hint_proteins\") %>%    import(\"ProteomeDiscoverer\", \"proteins\")"},{"path":"/articles/importing.html","id":"maxquant","dir":"Articles","previous_headings":"","what":"MaxQuant","title":"Importing","text":"MaxQuant software suite creates files project sub directories following current_project \\> combined \\> txt data peptides (evidence.txt) proteins (proteinGroups.txt).","code":""},{"path":"/articles/importing.html","id":"initial-set-up-1","dir":"Articles","previous_headings":"MaxQuant","what":"Initial Set Up","title":"Importing","text":"evidence.txt contains values imported file (important comparative statistics), proteinGroups.txt file contain entry file initial MaxQuant configuration Experiment column raw data tab unique value file (eg 1, 2, 3, …), otherwise values get merged common experiment groups output protein level data. sample groups can set modify() function.","code":""},{"path":[]},{"path":"/articles/importing.html","id":"proteins-1","dir":"Articles","previous_headings":"MaxQuant > Exporting","what":"Proteins","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/MaxQuant_proteins.tsv:","code":""},{"path":"/articles/importing.html","id":"peptides-1","dir":"Articles","previous_headings":"MaxQuant > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/MaxQuant_peptides.tsv:","code":"ecoli_proteins <- \"path_to_maxquant_project/combined/txt/proteinGroups.txt\" %>%    import(\"MaxQuant\", \"proteins\") %>%    reassign(field = 'sample', pattern = 'sample_1', replace = 'hint_ko') %>%    reassign(field = 'sample', pattern = 'sample_2', replace = 'hint_ko') %>%    reassign(field = 'sample', pattern = 'sample_3', replace = 'hint_ko') %>%    reassign(field = 'sample', pattern = 'sample_4', replace = 'hint_ko') %>%    reassign(field = 'sample', pattern = 'sample_5', replace = 'wt') %>%    reassign(field = 'sample', pattern = 'sample_6', replace = 'wt') %>%    reassign(field = 'sample', pattern = 'sample_7', replace = 'wt') %>%    reassign(field = 'sample', pattern = 'sample_8', replace = 'wt')"},{"path":"/articles/importing.html","id":"skyline","dir":"Articles","previous_headings":"","what":"Skyline","title":"Importing","text":"Skyline software suite can export quantitative peptide data analyses.","code":""},{"path":"/articles/importing.html","id":"initial-set-up-2","dir":"Articles","previous_headings":"Skyline","what":"Initial Set Up","title":"Importing","text":"report need established, File > Export > Report. Select Edit list..., Group: > External Tools click Add.... Select Columns correspond required values shown , name report Report Name: click OK.","code":""},{"path":[]},{"path":"/articles/importing.html","id":"proteins-2","dir":"Articles","previous_headings":"Skyline > Exporting","what":"Proteins","title":"Importing","text":"yet supported. Peptides can combined proteins rollup().","code":""},{"path":"/articles/importing.html","id":"peptides-2","dir":"Articles","previous_headings":"Skyline > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/SkyLine_peptides.tsv:","code":"ecoli_proteins <- \"path_to_skyline_project/output_file_name.csv\" %>%    import(\"Skyline\", \"peptides\")"},{"path":"/articles/importing.html","id":"dia-nn","dir":"Articles","previous_headings":"","what":"DIA-NN","title":"Importing","text":"DIA-NN software suite exports quantitative peptide data back project folder report.tsv.","code":""},{"path":[]},{"path":"/articles/importing.html","id":"proteins-3","dir":"Articles","previous_headings":"DIA-NN > Exporting","what":"Proteins","title":"Importing","text":"yet supported. Peptides can combined proteins rollup().","code":""},{"path":"/articles/importing.html","id":"peptides-3","dir":"Articles","previous_headings":"DIA-NN > Exporting","what":"Peptides","title":"Importing","text":"columns following columns considered. can modified file tidyproteomics/inst/extdata/config/DIA-NN_peptides.tsv:","code":"ecoli_proteins <- \"path_to_diann_project/output_file_name.csv\" %>%    import(\"DIA-NN\", \"peptides\")"},{"path":"/articles/imputing.html","id":"imputing","dir":"Articles","previous_headings":"","what":"Imputing","title":"Imputation","text":"","code":"# path_to_package_data() loads data specific to this package # for your project load local data # example:  # your_proteins <- \"./data/your_exported_results.xlsx\" %>% #   import(\"ProteomeDiscoverer\", \"proteins\")  rdata <- path_to_package_data(\"pd_ecoli-hint_proteins.xlsx\") %>%   import(\"ProteomeDiscoverer\", \"proteins\")"},{"path":"/articles/imputing.html","id":"using-within","dir":"Articles","previous_headings":"Imputing","what":"Using within","title":"Imputation","text":"Note difference using within ..","code":"rdata %>%    impute(impute_function = base::min, method = 'within') %>%   subset(protein %like% \"P05706|P0A8R4|P0A9K1|P0AAJ8|P0ACE7|P18776|P24252|P31826|P32674\") %>%    extract() %>%   ggplot(aes(replicate, abundance)) +   geom_point(aes(color=sample)) +   facet_wrap(~identifier) +   scale_y_log10() #> ℹ Imputing within samples by .Primitive(\"min\") #> ✔ Imputing within samples by .Primitive(\"min\") [54ms] #>  #> ℹ ... 439 values imputed #>  #> ℹ Subsetting data: protein %like% P05706|P0A8R4|P0A9K1|P0AAJ8|P0ACE7|P18776|P24… #> ✔ Subsetting data: protein %like% P05706|P0A8R4|P0A9K1|P0AAJ8|P0ACE7|P18776|P24… #>"},{"path":"/articles/imputing.html","id":"using-between","dir":"Articles","previous_headings":"Imputing","what":"Using between","title":"Imputation","text":".. opposed . method can considered contain bias real offset, note protein P0ACE7 (.e hinT), shows expected offset within method, method. Consider using methods imputing values suspect missing--random. case P0ACE7 (.e hinT) missing---random, performed genetic knockout mutation.","code":"rdata %>%    impute(impute_function = base::min, method = 'between') %>%   subset(protein %like% \"P05706|P0A8R4|P0A9K1|P0AAJ8|P0ACE7|P18776|P24252|P31826|P32674\") %>%    extract() %>%   ggplot(aes(replicate, abundance)) +   geom_point(aes(color=sample)) +   facet_wrap(~identifier) +   scale_y_log10() #> ℹ Imputing between samples by .Primitive(\"min\") #> ✔ Imputing between samples by .Primitive(\"min\") [69ms] #>  #> ℹ ... 439 values imputed #>  #> ℹ Subsetting data: protein %like% P05706|P0A8R4|P0A9K1|P0AAJ8|P0ACE7|P18776|P24… #> ✔ Subsetting data: protein %like% P05706|P0A8R4|P0A9K1|P0AAJ8|P0ACE7|P18776|P24… #>"},{"path":"/articles/normalizing.html","id":"normalization-of-the-whole-proteome","dir":"Articles","previous_headings":"","what":"Normalization of the whole proteome","title":"Normalization","text":"","code":"# path_to_package_data() loads data specific to this package # for your project load local data # example:  # your_proteins <- \"./data/your_exported_results.xlsx\" %>% #   import(\"ProteomeDiscoverer\", \"proteins\")  rdata <- path_to_package_data(\"pd_ecoli-hint_proteins.xlsx\") %>%   import(\"ProteomeDiscoverer\", \"proteins\") %>%   normalize()"},{"path":"/articles/normalizing.html","id":"visualizing","dir":"Articles","previous_headings":"","what":"Visualizing","title":"Normalization","text":"Plotting overall variation dynamic range. easy reduce variability simply squashing dynamic range - plotting can ensure happen. Keep mind overall dynamic range several mis-aligned sets smaller properly normalized - often median normalization immediate impact CVs least rigorous. Note dramatic reduction CVs randomforest yielded also maintaining overall dynamic range.","code":""},{"path":"/articles/normalizing.html","id":"cvs-and-dynamic-range","dir":"Articles","previous_headings":"Visualizing","what":"CVs and Dynamic Range","title":"Normalization","text":"","code":"rdata %>% plot_variation_cv()"},{"path":"/articles/normalizing.html","id":"pca","dir":"Articles","previous_headings":"Visualizing","what":"PCA","title":"Normalization","text":"","code":"rdata %>% plot_variation_pca()"},{"path":"/articles/normalizing.html","id":"effect-of-normalization-on-dynamic-range","dir":"Articles","previous_headings":"Visualizing","what":"Effect of Normalization on Dynamic Range","title":"Normalization","text":"effect randomforest data noticable lower dynamic range, seen plot CVs values 10^6 abundance dramatically reduced. hunting low abundant biomarkers, method highly recomended.","code":"path_to_package_data(\"pd_ecoli-hint_proteins.xlsx\") %>%   import(\"ProteomeDiscoverer\", \"proteins\") %>%   normalize(.method = c('median', 'randomforest')) %>%    plot_dynamic_range()"},{"path":"/articles/normalizing.html","id":"normalization-based-on-a-subset","dir":"Articles","previous_headings":"","what":"Normalization based on a subset","title":"Normalization","text":"addition proteome wide normalization, subset can used basis normalization, case spike-quantitative analytes perhaps bait protein immunoprecipitation experiment. accomplished semantic syntax subset() function reflected recorded operations. aware using regression smaller dynamic range full proteome may predict well beyond limts subset. NOTE: randomforest normalization method, implemented, requires prediction set size match training test size, therefore applicable normalization whole proteome. limma normalization method also accept subset normalization. methods skipped subset implemented.","code":"rdata <- path_to_package_data(\"pd_ecoli-hint_proteins.xlsx\") %>%   import(\"ProteomeDiscoverer\", \"proteins\") %>%   normalize(description %like% 'ribosome',             .method = c('median', 'linear', 'loess', 'svm'))   rdata %>% plot_variation_cv() rdata %>% plot_dynamic_range() rdata %>% operations() #> ℹ Data Transformations #>   • Data files (pd_ecoli-hint_proteins.xlsx) were imported as proteins from #>   ProteomeDiscoverer #>  #>   • Data normalized via median, linear, loess, svm. #>  #>   • Data normalized using subset description %like% ribosome. #>  #>   • ... based on a subset 2772 of 2661 identifiers #>  #>   • Normalization automatically selected as linear."},{"path":"/articles/romics.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"tidyproteomics","text":"install, open R type: also need Bioconductor packages limma, qvalue, fgsea, install type:","code":"install.packages(\"devtools\") devtools::install_github(\"jeffsocal/tidyproteomics\") install.packages(\"BiocManager\") BiocManager::install(c(\"limma\",\"qvalue\",\"fgsea\"))"},{"path":[]},{"path":[]},{"path":"/articles/romics.html","id":"data-manipulation","dir":"Articles","previous_headings":"Package overview","what":"data manipulation","title":"tidyproteomics","text":"import() - imports data several sources tidyproteomics data object export() - exports tidyproteomics data object .csv, .tsv, .xlsx .rds subset() - subset tidyproteomics data object given pattern save_to_project() - saves tidyproteomics data object current project folder load_from_project() - loads tidyproteomics data object current project folder save_table() - saves flat table analysis function current project folder","code":""},{"path":"/articles/romics.html","id":"basic-analysis","dir":"Articles","previous_headings":"Package overview","what":"basic analysis","title":"tidyproteomics","text":"summary() - provides quick accounting number proteins observed","code":""},{"path":"/articles/romics.html","id":"normalization","dir":"Articles","previous_headings":"Package overview","what":"normalization","title":"tidyproteomics","text":"normalize() - normalize raw data tidyproteomics data object select_normalization() - use weighted scheme automatically pick best normalization method, manually set one -stream analysis","code":""},{"path":"/articles/romics.html","id":"impute-missing-values","dir":"Articles","previous_headings":"Package overview","what":"impute missing values","title":"tidyproteomics","text":"impute() - impute missing values tidyproteomics data object","code":""},{"path":"/articles/romics.html","id":"data-visualization","dir":"Articles","previous_headings":"Package overview","what":"data visualization","title":"tidyproteomics","text":"plot_normalization() - boxplot raw normalized values plot_variation() - scatter plot raw normalized CV dynamic range values plot_variation_pca() - scatter plot raw normalized PCA values plot_dynamic_range() - 2d density plot raw normalized CVs log10 abundance plot_venn() - Venn accounting diagram protein overlap samples plot_euler() - Euler accounting diagram protein overlap samples plot_pca() - scatter plot PCA values selected normalized data values plot_heatmap() - heatmap protein sample selected normalized data values, clustered dimensions","code":""},{"path":[]},{"path":"/articles/romics.html","id":"expression-differences","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"expression differences","title":"tidyproteomics","text":"expression() - calculates two-sample statistical differences protein","code":""},{"path":"/articles/romics.html","id":"expression-visualization","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"expression visualization","title":"tidyproteomics","text":"plot_volcano() - scatter plot log2-foldchange p-values given expression test plot_proportion() - scatter plot log2-foldchange proportional-expression given expression test","code":""},{"path":"/articles/romics.html","id":"term-enrichment","dir":"Articles","previous_headings":"Package overview > two-sample analysis","what":"term enrichment","title":"tidyproteomics","text":"enrichment() - term enrichment given expression test using Wilcoxon Rank Sum","code":""},{"path":"/articles/romics.html","id":"an-tidyproteomics-data-object","dir":"Articles","previous_headings":"","what":"An tidyproteomics data object","title":"tidyproteomics","text":"underlying data list object structure detailed . Fundamentally, quantitative data requires minimum identifying data - mainly, observation (protein), sample observed , sample replicate. , underlying analyses transformation need minimum information, rest simply annotations data aptly stored annotations accounting.","code":". ├── origin                     string[ProteomeDiscoverer, MaxQuant] ├── analyte                    string[proteins, peptides] ├── identifier                 string[protein] ├── quantitative_source        string[raw, ...] ├── operations                 list ├── experiments                tibble (lcms runs / samples / replicates)  │   ├── file_id │   ├── sample │   └── replicate ├── annotations                tibble (annotation terms and groups) │   ├── protein │   ├── term │   └── annotation ├── quantitative               tibble (quantitative values / normalized) │   ├── protein │   ├── sample │   ├── replicate │   └── abundance_[raw, ...] └── accounting                 tibble (summary and qualitative values)     ├── protein     ├── file_id     ├── sample     ├── replicate     ├── num_[peptides, ...]     └── match_between_runs"},{"path":"/articles/romics.html","id":"quick-starts","dir":"Articles","previous_headings":"","what":"Quick starts","title":"tidyproteomics","text":"simple work flow importing data summarizing workflow importing assessing contamination workflow importing visualizing data workflow importing data, filtering contaminants, normalizing visualizing data workflow , using data previous run expression analysis generate volcano plot workflow , using data previous run expression analysis GSEA analysis","code":"library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\") %>%   analysis_summary() %>%   analysis_summary(group_by = 'sample') library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\")  data %>% analysis_contamination(pattern = 'CRAP', values = \"description\") library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\")  data %>% plot_venn() data %>% plot_hclust() library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\") %>%   subset_out(pattern = \"CRAP\", values = \"description\") %>%   normalize(c(\"scaled\",\"median\",\"linear\",\"limma\",\"loess\")) %>%   select_normalization() %>%   save_to_project() %>%   plot_normalization('save') %>% # note the use of 'save' to pipeline the plot functions   plot_variation('save') %>%   plot_dynamic_range('save') %>%   plot_variation_pca('save') %>%   plot_venn('save') %>%   plot_pca('save') %>%   plot_hclust('save') data %>%    expression_limma(experiment = 'mut', control = 'wt') %>%   plot_volcano(significance_column = 'p_value',                log2fc_column = 'log2_foldchange',                log2fc_min = 1,                significance_max = 0.05) data %>%    expression_limma(experiment = 'mut', control = 'wt') %>%   enrichment_gsea(data, 'biological_process')"},{"path":"/articles/subsetting.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Subsetting","text":"Subsetting can powerful way slice--dice data, print quick stats provide quick visualization. example, ecoli data set can subset just proteins “Ribosome” description: Aside filtering directly protein_accession values, subsetting can use columns experiments table: terms accounting table: terms annotations table:","code":"ecoli_proteins %>% subset(description %like% \"Ribosome\") %>% summary('sample') #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4       11             11      116             115         99.1 #>      wt     4       11             11      116             115         99.1 #>        CVs #>  0.1425569 #>  0.1588590 colnames(ecoli_proteins$experiments) #> [1] \"sample_id\"   \"import_file\" \"sample_file\" \"sample\"      \"replicate\" colnames(ecoli_proteins$accounting) #> [1] \"sample_id\"           \"protein\"             \"protein_group\"       #> [4] \"match_between_runs\"  \"num_peptides\"        \"num_unique_peptides\" #> [7] \"num_psms\" ecoli_proteins$annotations$term %>% unique() #> [1] \"description\"        \"gene_id_entrez\"     \"gene_id_ensemble\"   #> [4] \"gene_name\"          \"biological_process\" \"cellular_component\" #> [7] \"molecular_function\" \"wiki_pathway\"       \"reactome_pathway\""},{"path":"/articles/subsetting.html","id":"using-annotations","dir":"Articles","previous_headings":"","what":"Using Annotations","title":"Subsetting","text":"allows specific importing specialized terms annotate() subsetting can performed. Additionally, provided quantitative platform produces imputed value commonly referred “match runs”, data can filtered exclude values. can valuable cases true presence/absence desired, larger portions proteome differ.","code":"ecoli_proteins %>% subset(cellular_component %like% \"nucleus\") %>% summary('sample') #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4        6              6       78              71         90.1 #>      wt     4        6              6       78              71         91.0 #>        CVs #>  0.1244344 #>  0.1502377"},{"path":"/articles/subsetting.html","id":"using-accountings","dir":"Articles","previous_headings":"","what":"Using Accountings","title":"Subsetting","text":"Also, data can filtered proteins containing desired number underlying peptides.","code":"ecoli_proteins %>% subset(match_between_runs == FALSE) %>% summary('sample') #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2683           2683    30779           30562         99.1 #>      wt     4     2666           2666    30811           30589         99.1 #>        CVs #>  0.1329208 #>  0.1558694 ecoli_proteins %>% subset(mum_peptides <= 1) %>% summary('sample') #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2772           2772    31271           31025         98.4 #>      wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 ecoli_proteins %>% subset(num_unique_peptides <= 1) %>% summary('sample') #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4      336            336      396             336         50.7 #>      wt     4      336            336      396             336         50.3 #>        CVs #>  0.2357830 #>  0.2518408 ecoli_proteins %>%    subset(cellular_component %like% \"cytosol\") %>%    summary()  #>  files proteins protein_groups peptides peptides_unique quantifiable     CVs #>      8      969            969    14954           14828         98.9 0.13241"},{"path":"/articles/subsetting.html","id":"split-then-merge","dir":"Articles","previous_headings":"","what":"Split then Merge","title":"Subsetting","text":"example data split two groups, independently manipulated, merged back together. advisable experiment like , just demonstration purposes.","code":"data_ko <- ecoli_proteins %>%    subset(sample %like% \"ko\") %>%    normalize(.method = c('median')) %>%   impute()  data_wt <- ecoli_proteins %>%    subset(sample %like% \"wt\") %>%    normalize(.method = c('median')) %>%   impute()  data_new <- merge(list(data_ko, data_wt), quantitative_source = 'all') data_new #> Quantitation    8 files  #>                 2 samples (ko, wt)  #>                 2772 proteins  #>                 4.8 log10 dynamic range  #>  *imputed       within samples via .Primitive(\"min\"). within samples via .Primitive(\"min\").  #> Accounting      (5) match_between_runs num_peptides num_unique_peptides num_psms #>                 imputed  #> Annotations     (9) description gene_id_entrez gene_id_ensemble gene_name #>                 biological_process cellular_component #>                 molecular_function wiki_pathway #>                 reactome_pathway  #> data_new %>% summary('sample') #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2772           2772    31271           31025         98.4 #>      wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 data_new %>% operations() #> ℹ Data Transformations #>   • ProteomeDiscoverer [1]: Data files (pd_ecoli-hint_proteins.xlsx) were #>   imported as proteins from ProteomeDiscoverer #>  #>   • ProteomeDiscoverer [1]: Data reassigned sample to ko where 'sample like #>   hint' #>  #>   • ProteomeDiscoverer [1]: Data subset `sample` %like% `ko` #>  #>   • ProteomeDiscoverer [1]: Data normalized via median. #>  #>   • ProteomeDiscoverer [1]: Normalization automatically selected as median. #>  #>   • ProteomeDiscoverer [1]: Missing values imputed within samples via #>   .Primitive(\"min\"). #>  #>   • ProteomeDiscoverer [1]: ... 197 values imputed #>  #>   • ProteomeDiscoverer [2]: Data files (pd_ecoli-hint_proteins.xlsx) were #>   imported as proteins from ProteomeDiscoverer #>  #>   • ProteomeDiscoverer [2]: Data reassigned sample to ko where 'sample like #>   hint' #>  #>   • ProteomeDiscoverer [2]: Data subset `sample` %like% `wt` #>  #>   • ProteomeDiscoverer [2]: Data normalized via median. #>  #>   • ProteomeDiscoverer [2]: Normalization automatically selected as median. #>  #>   • ProteomeDiscoverer [2]: Missing values imputed within samples via #>   .Primitive(\"min\"). #>  #>   • ProteomeDiscoverer [2]: ... 212 values imputed #>  #>   • Merged 2 data sets"},{"path":[]},{"path":"/articles/updates.html","id":"version-1-0-2---2022-11-28","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 1.0.2 - 2022.11.28","title":"Update History","text":"implemented S3 object tidyproteomics data object refactored functions accout new data object fixed minor issues exporting data plots","code":""},{"path":"/articles/updates.html","id":"version-0-4-2---2022-11-15","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.4.2 - 2022.11.15","title":"Update History","text":"modified expression() accurately account imputation ratio","code":""},{"path":"/articles/updates.html","id":"version-0-4-1---2022-11-03","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.4.1 - 2022.11.03","title":"Update History","text":"refactored plotting utilize generalized save function facilitate pipelining modified subset behave like tidyverse function also introducing operators like !like subset data based string matching comparison updated functions normalize(), plot_counts() summary() utilize subset()","code":""},{"path":"/articles/updates.html","id":"version-0-4-0---2022-10-28","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.4.0 - 2022.10.28","title":"Update History","text":"refactored import() allow user based configurations refactored subset(), eliminating remove(), account value comparison pattern matching refactored reassign(), modify(), improve sample renaming","code":""},{"path":"/articles/updates.html","id":"version-0-3-0---2022-10-15","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.3.0 - 2022.10.15","title":"Update History","text":"added plot_quantrank() fixed issue ProteomeDiscoverer importing TMT data","code":""},{"path":"/articles/updates.html","id":"version-0-2-8---2022-09-29","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.2.8 - 2022.09.29","title":"Update History","text":"minor bug fixes refactored rollup() collapse() defined meld() codify() create uniformity data import segmentation","code":""},{"path":"/articles/updates.html","id":"version-0-2-6---2022-09-23","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.2.6 - 2022.09.23","title":"Update History","text":"created remove() migrated subset(match_between_runs = FALSE) improved protein accounting import() rollup() include protein group accounting added plot_counts() added import(‘Skyline’, ‘peptides’), Skyline can handel DDA, PRM via MSAmanda DIA vi DIA-Umpire added import(‘DIA-NN’, ‘peptides’), DIA-NN can handel DIA","code":""},{"path":"/articles/updates.html","id":"version-0-2-4---2022-09-19","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.2.4 - 2022.09.19","title":"Update History","text":"fixed issue “memory” subset(match_between_runs = FALSE) fixed x-axis ordering bug plot_variation() fixed minor bug importing ProteomeDiscoverer peptide data","code":""},{"path":"/articles/updates.html","id":"version-0-2-2---2022-09-13","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.2.2 - 2022.09.13","title":"Update History","text":"fixed minor bug importing MaxQuant data (empty data object) fixed minor bug plot_protein() fixed bug annotations() fixed bug impute() randomforest fixed bug expression() limma","code":""},{"path":"/articles/updates.html","id":"version-0-2-1---2022-09-08","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.2.1 - 2022.09.08","title":"Update History","text":"added import() MaxQuant peptides (evidence.txt) added import() MaxQuant proteins (proteinGroups.txt) updated import() ProteomeDiscoverer (better configs)","code":""},{"path":"/articles/updates.html","id":"version-0-1-3","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.1.3","title":"Update History","text":"added protein rollup() function, integrated rfasta","code":""},{"path":"/articles/updates.html","id":"version-0-1-2","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.1.2","title":"Update History","text":"updated impute() accounting added plot_enrichment() added history data transformations via operations()","code":""},{"path":"/articles/updates.html","id":"version-0-1-0","dir":"Articles","previous_headings":"A condensed accounting of version updates","what":"Version: 0.1.0","title":"Update History","text":"initial cohesion loose collection functions R package","code":""},{"path":[]},{"path":"/articles/workflow_simple.html","id":"a-simple-work-flow-for-importing-data-and-summarizing","dir":"Articles","previous_headings":"Workflows","what":"A simple work flow for importing data and summarizing","title":"tidyproteomics","text":"","code":"library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\")   data %>% summary() data %>% summary(by = 'sample')  data %>% summary(by = 'contamination')"},{"path":"/articles/workflow_simple.html","id":"a-workflow-for-importing-and-visualizing-the-data","dir":"Articles","previous_headings":"Workflows","what":"A workflow for importing and visualizing the data","title":"tidyproteomics","text":"","code":"library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\")  data %>% plot_venn() data %>% plot_hclust()"},{"path":"/articles/workflow_simple.html","id":"a-workflow-for-importing-data-filtering-out-contaminants-normalizing-and-visualizing-the-data","dir":"Articles","previous_headings":"Workflows","what":"A workflow for importing data, filtering out contaminants, normalizing and visualizing the data","title":"tidyproteomics","text":"","code":"library(\"tidyproteomics\") data <- \"data/test_expression-20201211_proteins.xlsx\" %>%   import(\"proteins\", \"ProteomeDiscoverer\") %>%   subset_out(pattern = \"CRAP\", values = \"description\") %>%   normalize(c(\"scaled\",\"median\",\"linear\",\"limma\",\"loess\")) %>%   select_normalization() %>%   save_to_project() %>%   plot_normalization('save') %>% # note the use of 'save' to pipeline the plot functions   plot_variation('save') %>%   plot_dynamic_range('save') %>%   plot_variation_pca('save') %>%   plot_venn('save') %>%   plot_pca('save') %>%   plot_hclust('save')"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeff Jones. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jones J (2022). tidyproteomics: S3 data object framework common quantitative proteomic analyses. R package version 1.0.2.","code":"@Manual{,   title = {tidyproteomics: An S3 data object and framework for common quantitative proteomic analyses},   author = {Jeff Jones},   year = {2022},   note = {R package version 1.0.2}, }"},{"path":"/index.html","id":"tidyproteomics-","dir":"","previous_headings":"","what":"An S3 data object and framework for common quantitative proteomic analyses","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"R package post processing analysis quantitative proteomic data - effectively wiring inputs outputs complex analyses akin bundled copper wires used create circuit residential electrical services. package supports high level: data filtering data visualization quantitative normalization & imputation two-sample expression & term enrichment analysis","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"install, open R type: also need Bioconductor packages limma, qvalue, fgsea, install type:","code":"install.packages(\"devtools\") devtools::install_github(\"jeffsocal/tidyproteomics\") devtools::install_github(\"jeffsocal/rfasta\") install.packages(\"BiocManager\") BiocManager::install(c(\"limma\",\"qvalue\",\"fgsea\"))"},{"path":"/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"An S3 data object and framework for common quantitative proteomic analyses","text":"simple get started. Make new project, drop raw data folder labeled data. information see vignette(\"workflow-simple\")","code":"library(tidyproteomics)  data <- \"./data/some_ProteomeDiscoverer_data.xlsx\" %>%   import(\"ProteomeDiscoverer\", \"proteins\")    data %>% summary(\"samples\")"},{"path":"/reference/add_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for adding annotations to a romics data-object — add_annotations","title":"Main function for adding annotations to a romics data-object — add_annotations","text":"Main function adding annotations tidyproteomics data-object","code":""},{"path":"/reference/add_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for adding annotations to a romics data-object — add_annotations","text":"","code":"add_annotations(data = NULL, annotations = NULL)"},{"path":"/reference/add_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for adding annotations to a romics data-object — add_annotations","text":"data tidyproteomics data list-object annotations character string vector","code":""},{"path":"/reference/add_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for adding annotations to a romics data-object — add_annotations","text":"tidyproteomics data list-object","code":""},{"path":"/reference/align_modification.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a modification to a peptide sequence — align_modification","title":"Align a modification to a peptide sequence — align_modification","text":"Align modification peptide sequence","code":""},{"path":"/reference/align_modification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a modification to a peptide sequence — align_modification","text":"","code":"align_modification(peptide = NULL, modification = NULL)"},{"path":"/reference/align_modification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a modification to a peptide sequence — align_modification","text":"peptide character string representing peptide sequence modification character string representing modification location probability","code":""},{"path":"/reference/align_modification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a modification to a peptide sequence — align_modification","text":"tidyproteomics data-object","code":""},{"path":"/reference/align_peptide.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a peptide sequence to a protein sequence — align_peptide","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"Align peptide sequence protein sequence","code":""},{"path":"/reference/align_peptide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"","code":"align_peptide(peptide = NULL, protein = NULL)"},{"path":"/reference/align_peptide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"peptide character string representing peptide sequence protein character string representing protein sequence","code":""},{"path":"/reference/align_peptide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a peptide sequence to a protein sequence — align_peptide","text":"tidyproteomics data-object","code":""},{"path":"/reference/analysis_contamination.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the relative amount of protein contamination — analysis_contamination","title":"Assess the relative amount of protein contamination — analysis_contamination","text":"analysis_contamination() analysis function can take regular expression means assign subsets proteins contaminant. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/analysis_contamination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the relative amount of protein contamination — analysis_contamination","text":"","code":"analysis_contamination(data = NULL, pattern = \"CRAP\", destination = \"print\")"},{"path":"/reference/analysis_contamination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the relative amount of protein contamination — analysis_contamination","text":"data tidyproteomics data object pattern character string, regular expression destination character string, one (save, print)","code":""},{"path":"/reference/analysis_contamination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the relative amount of protein contamination — analysis_contamination","text":"tibble","code":""},{"path":"/reference/analysis_contamination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assess the relative amount of protein contamination — analysis_contamination","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) protein_data <- protein_data %>% analysis_contamination() #>  #> ── Summary: contamination ── #>  #>  file_id sample replicate native #>       f1     ap         1   100% #>       f2     ap         2   100% #>       f3     ap         3   100% #>       f4     ap         4   100% #>       f5     dp         1   100% #>       f6     dp         2   100% #>       f7     dp         3   100% #>       f8     dp         4   100% #>       f9     ep         1   100% #>      f10     ep         2   100% #>      f11     ep         3   100% #>      f12     ep         4   100% #>      f13     wp         1   100% #>      f14     wp         2   100% #>      f15     wp         3   100% #>      f16     wp         4   100% #>"},{"path":"/reference/analysis_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the protein accounting — analysis_summary","title":"Summarize the protein accounting — analysis_summary","text":"analysis_summary() analysis function computes protein summary statistics given tidyproteomics data object. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/analysis_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the protein accounting — analysis_summary","text":"","code":"analysis_summary(data, group_by = NULL, destination = \"print\")"},{"path":"/reference/analysis_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the protein accounting — analysis_summary","text":"data tidyproteomics data object group_by summarize destination character string, one (save, print)","code":""},{"path":"/reference/analysis_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the protein accounting — analysis_summary","text":"nothing success, messages fail","code":""},{"path":"/reference/analysis_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the protein accounting — analysis_summary","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) protein_data <- protein_data %>% analysis_summary() #>  #> ── Summary: global ── #>  #>  proteins peptides quantifiable       CVs #>        46     5808         99.5 0.8607941 #>   protein_data <- protein_data %>% analysis_summary(\"sample\") #>  #> ── Summary: sample ── #>  #>  sample proteins peptides quantifiable       CVs #>      ap       46     1452         99.0 1.3393163 #>      dp       46     1452         99.7 0.4103631 #>      ep       46     1452         99.5 0.3799818 #>      wp       46     1452         99.8 0.3938391 #>   protein_data <- protein_data %>%    subset_out(values = 'match_between_runs') %>%    analysis_summary(\"sample\") #>  #> ℹ Subsetting data to exclude match_between_runs #> ✔ Subsetting data to exclude match_between_runs ... done #>  #>  #> ── Summary: sample ── #>  #>  sample proteins peptides quantifiable       CVs #>      ap       41     1259          100 1.2131747 #>      dp       39     1316          100 0.3541822 #>      ep       39     1337          100 0.3693461 #>      wp       42     1392          100 0.3867154 #>"},{"path":"/reference/annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for adding annotations to a tidyproteomics data-object — annotate","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"Main function adding annotations tidyproteomics data-object","code":""},{"path":"/reference/annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"","code":"annotate(   data = NULL,   annotations = NULL,   duplicates = c(\"replace\", \"merge\", \"leave\") )"},{"path":"/reference/annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"data tidyproteomics data list-object annotations character string vector duplicates character string, handle duplicate terms","code":""},{"path":"/reference/annotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for adding annotations to a tidyproteomics data-object — annotate","text":"tidyproteomics data list-object","code":""},{"path":"/reference/annotate_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Write table data locally — annotate_table","title":"Write table data locally — annotate_table","text":"annotate_table() add annotations table","code":""},{"path":"/reference/annotate_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write table data locally — annotate_table","text":"","code":"annotate_table(table, data = NULL, annotations = NULL)"},{"path":"/reference/annotate_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write table data locally — annotate_table","text":"table tibble data tidyproteomics data-object annotations character vector acceptable annotations. See get_annotation_terms().","code":""},{"path":"/reference/annotate_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write table data locally — annotate_table","text":"tibble","code":""},{"path":"/reference/annotate_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write table data locally — annotate_table","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    expression(\"ko\",\"wt\") %>%    annotate_table(ecoli_proteins, c(\"gene_name\",\"description\")) #> ℹ Merging annotations #> ✔ Merging annotations ... done #>  #> # A tibble: 2,575 × 11 #>    protein imputed     n avera…¹ propo…² foldc…³ log2_…⁴ p_value adj_p…⁵ descr…⁶ #>    <chr>     <dbl> <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   #>  1 P76086    0         8  6.55e6 1.10e-5    4.79    2.26  0.182        1 Transc… #>  2 P76241    0.5       8  2.50e5 4.21e-7    2.85    1.51  0.286        1 HTH-ty… #>  3 P09152    0         8  7.49e6 1.26e-5    2.78    1.48  0.212        1 Respir… #>  4 P0AEU3    0.25      8  1.71e6 2.89e-6    2.48    1.31  0.560        1 Histid… #>  5 P10903    0.625     8  4.05e5 6.83e-7    2.36    1.24  0.347        1 Nitrat… #>  6 P0A9I8    0         8  2.89e6 4.87e-6    2.28    1.19  0.0353       1 Nitrit… #>  7 P0AF26    0.5       8  3.72e5 6.28e-7    2.22    1.15  0.308        1 Nitrat… #>  8 P0AC33    0         8  1.65e8 2.78e-4    2.19    1.13  0.204        1 Fumara… #>  9 P0ADT2    0         8  2.67e7 4.50e-5    2.14    1.10  0.165        1 UPF044… #> 10 P31825    0         8  7.59e6 1.28e-5    2.11    1.07  0.291        1 tRNA1(… #> # … with 2,565 more rows, 1 more variable: gene_name <chr>, and abbreviated #> #   variable names ¹​average_expression, ²​proportional_expression, ³​foldchange, #> #   ⁴​log2_foldchange, ⁵​adj_p_value, ⁶​description #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"/reference/center.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing a quantitative table — center","title":"helper function for normalizing a quantitative table — center","text":"helper function normalizing quantitative table","code":""},{"path":"/reference/center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing a quantitative table — center","text":"","code":"center(   table,   group_by = c(\"identifier\"),   values = \"abundance\",   method = c(\"median\", \"mean\", \"geomean\", \"sum\") )"},{"path":"/reference/center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing a quantitative table — center","text":"table tibble group_by character vector values character string method character string","code":""},{"path":"/reference/center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing a quantitative table — center","text":"tibble","code":""},{"path":"/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of a tidyproteomics data object — check_data","title":"Check the integrity of a tidyproteomics data object — check_data","text":"check_data() helper function checks structure contents tidyproteomics data object","code":""},{"path":"/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of a tidyproteomics data object — check_data","text":"","code":"check_data(data = NULL)"},{"path":"/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of a tidyproteomics data object — check_data","text":"data tidyproteomics data object","code":""},{"path":"/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of a tidyproteomics data object — check_data","text":"silent success, abort message fail","code":""},{"path":"/reference/check_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the integrity of a tidyproteomics quantitative tibble — check_table","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"check_table() helper function checks structure contents tidyproteomics quantitative tibble","code":""},{"path":"/reference/check_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"","code":"check_table(table = NULL)"},{"path":"/reference/check_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"table tibble","code":""},{"path":"/reference/check_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the integrity of a tidyproteomics quantitative tibble — check_table","text":"silent success, abort message fail","code":""},{"path":"/reference/check_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Check user input against a set of expected values — check_ui","title":"Check user input against a set of expected values — check_ui","text":"check_ui() helper function checking user input expectations, stay silent cause abort error failure.","code":""},{"path":"/reference/check_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check user input against a set of expected values — check_ui","text":"","code":"check_ui(str_ui, str_uis, str_ui_name = \"set\")"},{"path":"/reference/check_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check user input against a set of expected values — check_ui","text":"str_ui character string user input str_uis character vector acceptable user input strings str_ui_name character string collection function tested","code":""},{"path":"/reference/check_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check user input against a set of expected values — check_ui","text":"silent success, abort message fail","code":""},{"path":"/reference/codify.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a tidyproteomics data object — codify","title":"Build a tidyproteomics data object — codify","text":"data_codify() helper function","code":""},{"path":"/reference/codify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a tidyproteomics data object — codify","text":"","code":"codify(table = NULL, identifier = NULL, annotations = NULL)"},{"path":"/reference/codify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a tidyproteomics data object — codify","text":"table tidyproteomics data object identifier character vector annotations character vector","code":""},{"path":"/reference/codify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a tidyproteomics data object — codify","text":"tidyproteomics data object","code":""},{"path":"/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert peptide quantitative data into protein quantitative data — collapse","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"collapse() produces protein based tidyproteomics data-object peptide based tidyproteomics data-object.","code":""},{"path":"/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"","code":"collapse(   data = NULL,   collapse_to = \"protein\",   assign_by = c(\"all-possible\", \"razor-local\", \"razor-global\", \"non-homologous\"),   top_n = Inf,   split_abundance = FALSE,   fasta_path = NULL,   .verbose = TRUE,   .function = fsum )"},{"path":"/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"data tidyproteomics data-object collapse_to character string assign_by method combine peptides proteins top_n numeric indicate N number peptides summed account protein quantitative value, assumes peptides summed across charge states split_abundance boolean indicate abundances razor peptides split according protein prevalence fasta_path supplied, used fill annotation values description, protein_name gene_name .verbose boolean .function assignable protein abundance summary function, fsum, fmean, fgeomean fmedian constructed NAs must removed. Example: fmedian <- function(x)stats::median(x, na.rm = TRUE) Example: fquantile <- function(x)stats::quantile(x, .75, na.rm = TRUE)","code":""},{"path":"/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"tidyproteomics data-object","code":""},{"path":"/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert peptide quantitative data into protein quantitative data — collapse","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) # data <- ecoli_peptides %>% collapse() # data %>% summary('sample')"},{"path":"/reference/data_import.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data from ProteomeDiscoverer — data_import","title":"A helper function for importing peptide table data from ProteomeDiscoverer — data_import","text":"helper function importing peptide table data ProteomeDiscoverer","code":""},{"path":"/reference/data_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data from ProteomeDiscoverer — data_import","text":"","code":"data_import(file_names = NULL, platform = NULL, analyte = NULL, path = NULL)"},{"path":"/reference/data_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data from ProteomeDiscoverer — data_import","text":"file_names character vector file paths platform character string analyte character string path character string","code":""},{"path":"/reference/data_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data from ProteomeDiscoverer — data_import","text":"tidyproteomics list data-object","code":""},{"path":"/reference/down_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset a data frame — down_select","title":"Helper function to subset a data frame — down_select","text":"Helper function subset data frame","code":""},{"path":"/reference/down_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset a data frame — down_select","text":"","code":"down_select(   table = NULL,   variable = NULL,   operator = c(\"<\", \"<=\", \">\", \">=\", \"==\", \"!=\", \"%like%\", \"%!like%\"),   value = NULL )"},{"path":"/reference/down_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset a data frame — down_select","text":"table tibble variable character string operator character string value character string","code":""},{"path":"/reference/down_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset a data frame — down_select","text":"tibble","code":""},{"path":"/reference/ecoli_peptides.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample tidyproteomics data object — ecoli_peptides","title":"A sample tidyproteomics data object — ecoli_peptides","text":"dataset containing quantitative peptide data ten proteins 4 samples 3 replicates ","code":""},{"path":"/reference/ecoli_peptides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample tidyproteomics data object — ecoli_peptides","text":"","code":"ecoli_peptides"},{"path":"/reference/ecoli_peptides.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample tidyproteomics data object — ecoli_peptides","text":"list collection character values tibbles: quantitative tibble, protein quantitative data annotation tibble, protein annotation data","code":""},{"path":"/reference/ecoli_proteins.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample tidyproteomics data object — ecoli_proteins","title":"A sample tidyproteomics data object — ecoli_proteins","text":"dataset containing quantitative protein data thousands proteins 4 samples 3 replicates ","code":""},{"path":"/reference/ecoli_proteins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample tidyproteomics data object — ecoli_proteins","text":"","code":"ecoli_proteins"},{"path":"/reference/ecoli_proteins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample tidyproteomics data object — ecoli_proteins","text":"list collection character values tibbles: quantitative tibble, protein quantitative data annotation tibble, protein annotation data","code":""},{"path":"/reference/enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute protein enrichment — enrichment","title":"Compute protein enrichment — enrichment","text":"enrichment() analysis function computes protein summary statistics given tidyproteomics data object.","code":""},{"path":"/reference/enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute protein enrichment — enrichment","text":"","code":"enrichment(data = NULL, ..., .term = NULL, .method = c(\"gsea\", \"wilcoxon\"))"},{"path":"/reference/enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute protein enrichment — enrichment","text":"data tidyproteomics data object ... two sample comparison e.g. experimental/control .term character string referencing \".term\" annotations table .method character string","code":""},{"path":"/reference/enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute protein enrichment — enrichment","text":"tibble","code":""},{"path":"/reference/enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute protein enrichment — enrichment","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # using the default GSEA method ecoli_proteins %>%    expression(ko/wt) %>%    enrichment(ko/wt, .term = 'biological_process') %>%    export_analysis(ko/wt, .analysis = \"enrichment\") #> Warning: There are duplicate gene names, fgsea may produce unexpected results. #> Error in export_analysis(., ko/wt, .analysis = \"enrichment\"): `.term` must be a character vector, not NULL.  # using a Wilcoxon Rank Sum method ecoli_proteins %>%    expression(ko/wt) %>%    enrichment(ko/wt, .term = 'biological_process', .method = 'wilcoxon') %>%    export_analysis(ko/wt, .analysis = \"enrichment\") #> ℹ NA: had issues #> Error in export_analysis(., ko/wt, .analysis = \"enrichment\"): `.term` must be a character vector, not NULL."},{"path":"/reference/enrichment_gsea.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating term enrichment via GSEA — enrichment_gsea","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"function evaluating term enrichment via GSEA","code":""},{"path":"/reference/enrichment_gsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"","code":"enrichment_gsea(data_expression = NULL, data = NULL, term_group = NULL)"},{"path":"/reference/enrichment_gsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"data_expression tibble two sample expression difference analysis data tidyproteomics data object term_group character string referencing \"term\" annotations table","code":""},{"path":"/reference/enrichment_gsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating term enrichment via GSEA — enrichment_gsea","text":"tibble","code":""},{"path":"/reference/enrichment_wilcoxon.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"function evaluating term enrichment via Wilcoxon Rank Sum","code":""},{"path":"/reference/enrichment_wilcoxon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"","code":"enrichment_wilcoxon(   data_expression = NULL,   data = NULL,   term_group = NULL,   ... )"},{"path":"/reference/enrichment_wilcoxon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"data_expression tibble two sample expression difference analysis data tidyproteomics data object term_group character string referencing \"term\" annotations table ... pass arguments","code":""},{"path":"/reference/enrichment_wilcoxon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating term enrichment via Wilcoxon Rank Sum — enrichment_wilcoxon","text":"tibble","code":""},{"path":"/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the quantitative data from an romics data-object — export","title":"Export the quantitative data from an romics data-object — export","text":"export() returns main quantitative data object tibble identifier designation measured observation.","code":""},{"path":"/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the quantitative data from an romics data-object — export","text":"","code":"export(   data = NULL,   as = c(\"rds\", \"xlsx\", \"csv\", \"tsv\"),   raw_data = TRUE,   normalized = FALSE,   scaled = c(\"none\", \"between\", \"proportion\") )"},{"path":"/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the quantitative data from an romics data-object — export","text":"data tidyproteomics data object character string vector raw_data boolean normalized boolean scaled boolean","code":""},{"path":"/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the quantitative data from an romics data-object — export","text":"tibble","code":""},{"path":"/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the quantitative data from an romics data-object — export","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    normalize(\"loess\") %>%    export(as = \"xlsx\", normalized = \"loess\") #> ℹ Normalizing quantitative data #> ℹ ... using loess regression #> ✔ ... using loess regression [511ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess #> ℹ Exporting proteins_abundances_loess.xlsx #> ✔ Exporting proteins_abundances_loess.xlsx ... done #>"},{"path":"/reference/export_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the quantitative data from an tidyproteomics data-object — export_analysis","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"export() returns main quantitative data object tibble identifier designation measured observation.","code":""},{"path":"/reference/export_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"","code":"export_analysis(   data = NULL,   ...,   .analysis = NULL,   .term = NULL,   .file_name = NULL )"},{"path":"/reference/export_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"data tidyproteomics data object file_name character string vector raw_data boolean normalized boolean scaled boolean","code":""},{"path":"/reference/export_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"tibble","code":""},{"path":"/reference/export_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the quantitative data from an tidyproteomics data-object — export_analysis","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    expression(ko/wt) %>%    export_analysis(ko/wt, .analysis = \"expression\", .file_name = \"ecoli_expression_ko-wt.xlsx\")"},{"path":"/reference/export_quant.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the quantitative data from an tidyproteomics data-object — export_quant","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"export_quant() returns main quantitative data object tibble identifier designation measured observation.","code":""},{"path":"/reference/export_quant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"","code":"export_quant(   data = NULL,   file_name = NULL,   raw_data = TRUE,   normalized = FALSE,   scaled = c(\"none\", \"between\", \"proportion\") )"},{"path":"/reference/export_quant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"data tidyproteomics data object file_name character string vector raw_data boolean normalized boolean scaled boolean","code":""},{"path":"/reference/export_quant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"tibble","code":""},{"path":"/reference/export_quant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export the quantitative data from an tidyproteomics data-object — export_quant","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    normalize(.method = \"loess\") %>%    export_quant(file_name = \"ecoli_quant_data.xlsx\", normalized = \"loess\") #> ℹ Normalizing quantitative data #> ℹ ... using loess regression #> ✔ ... using loess regression [547ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected loess"},{"path":"/reference/expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data — expression","title":"Summarize the data — expression","text":"expression() analysis function computes protein summary statistics given tidyproteomics data object.","code":""},{"path":"/reference/expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data — expression","text":"","code":"expression(data = NULL, ..., .method = stats::t.test)"},{"path":"/reference/expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data — expression","text":"data tidyproteomics data object ... two sample comparison e.g. experimental/control .method two-distribution test function returning p_value null hypothesis. Example functions include t.test, wilcox.test, stats::ks.test, additionally, string \"limma\" can used select limma package compute empirical Bayesian estimation performs better non-linear distributions uneven replicate balance samples.","code":""},{"path":"/reference/expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data — expression","text":"tibble","code":""},{"path":"/reference/expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data — expression","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # simple t.test expression analysis ecoli_proteins %>%    expression(ko/wt) %>%    export_analysis(ko/wt, .analysis = \"expression\") #> # A tibble: 2,575 × 18 #>    protein imputed     n avera…¹ propo…² foldc…³ log2_…⁴ p_value adj_p…⁵ descr…⁶ #>    <chr>     <dbl> <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   #>  1 P76086    0         8  6.55e6 1.10e-5    4.79    2.26  0.182        1 Transc… #>  2 P76241    0.5       8  2.50e5 4.21e-7    2.85    1.51  0.286        1 HTH-ty… #>  3 P09152    0         8  7.49e6 1.26e-5    2.78    1.48  0.212        1 Respir… #>  4 P0AEU3    0.25      8  1.71e6 2.89e-6    2.48    1.31  0.560        1 Histid… #>  5 P10903    0.625     8  4.05e5 6.83e-7    2.36    1.24  0.347        1 Nitrat… #>  6 P0A9I8    0         8  2.89e6 4.87e-6    2.28    1.19  0.0353       1 Nitrit… #>  7 P0AF26    0.5       8  3.72e5 6.28e-7    2.22    1.15  0.308        1 Nitrat… #>  8 P0AC33    0         8  1.65e8 2.78e-4    2.19    1.13  0.204        1 Fumara… #>  9 P0ADT2    0         8  2.67e7 4.50e-5    2.14    1.10  0.165        1 UPF044… #> 10 P31825    0         8  7.59e6 1.28e-5    2.11    1.07  0.291        1 tRNA1(… #> # … with 2,565 more rows, 8 more variables: gene_id_entrez <chr>, #> #   gene_id_ensemble <chr>, gene_name <chr>, biological_process <chr>, #> #   cellular_component <chr>, molecular_function <chr>, wiki_pathway <chr>, #> #   reactome_pathway <chr>, and abbreviated variable names ¹​average_expression, #> #   ²​proportional_expression, ³​foldchange, ⁴​log2_foldchange, ⁵​adj_p_value, #> #   ⁶​description #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names  # a wilcox.test expression analysis ecoli_proteins %>%    expression(ko/wt, .method = stats::wilcox.test) %>%    export_analysis(ko/wt, .analysis = \"expression\") #> # A tibble: 2,575 × 18 #>    protein imputed     n avera…¹ propo…² foldc…³ log2_…⁴ p_value adj_p…⁵ descr…⁶ #>    <chr>     <dbl> <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   #>  1 P76086    0         8  6.55e6 1.10e-5    4.79    2.26   0.2         1 Transc… #>  2 P76241    0.5       8  2.50e5 4.21e-7    2.85    1.51   0.114       1 HTH-ty… #>  3 P09152    0         8  7.49e6 1.26e-5    2.78    1.48   0.114       1 Respir… #>  4 P0AEU3    0.25      8  1.71e6 2.89e-6    2.48    1.31   0.886       1 Histid… #>  5 P10903    0.625     8  4.05e5 6.83e-7    2.36    1.24   0.4         1 Nitrat… #>  6 P0A9I8    0         8  2.89e6 4.87e-6    2.28    1.19   0.114       1 Nitrit… #>  7 P0AF26    0.5       8  3.72e5 6.28e-7    2.22    1.15   0.343       1 Nitrat… #>  8 P0AC33    0         8  1.65e8 2.78e-4    2.19    1.13   0.686       1 Fumara… #>  9 P0ADT2    0         8  2.67e7 4.50e-5    2.14    1.10   0.2         1 UPF044… #> 10 P31825    0         8  7.59e6 1.28e-5    2.11    1.07   0.2         1 tRNA1(… #> # … with 2,565 more rows, 8 more variables: gene_id_entrez <chr>, #> #   gene_id_ensemble <chr>, gene_name <chr>, biological_process <chr>, #> #   cellular_component <chr>, molecular_function <chr>, wiki_pathway <chr>, #> #   reactome_pathway <chr>, and abbreviated variable names ¹​average_expression, #> #   ²​proportional_expression, ³​foldchange, ⁴​log2_foldchange, ⁵​adj_p_value, #> #   ⁶​description #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names  # a one-tailed wilcox.test expression analysis wilcoxon_less <- function(x, y) {    stats::wilcox.test(x, y, alternative = 'less') } ecoli_proteins <- ecoli_proteins %>%    expression(ko/wt, .method = stats::wilcox.test)  ecoli_proteins %>% export_analysis(ko/wt, .analysis = \"expression\") #> # A tibble: 2,575 × 18 #>    protein imputed     n avera…¹ propo…² foldc…³ log2_…⁴ p_value adj_p…⁵ descr…⁶ #>    <chr>     <dbl> <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   #>  1 P76086    0         8  6.55e6 1.10e-5    4.79    2.26   0.2         1 Transc… #>  2 P76241    0.5       8  2.50e5 4.21e-7    2.85    1.51   0.114       1 HTH-ty… #>  3 P09152    0         8  7.49e6 1.26e-5    2.78    1.48   0.114       1 Respir… #>  4 P0AEU3    0.25      8  1.71e6 2.89e-6    2.48    1.31   0.886       1 Histid… #>  5 P10903    0.625     8  4.05e5 6.83e-7    2.36    1.24   0.4         1 Nitrat… #>  6 P0A9I8    0         8  2.89e6 4.87e-6    2.28    1.19   0.114       1 Nitrit… #>  7 P0AF26    0.5       8  3.72e5 6.28e-7    2.22    1.15   0.343       1 Nitrat… #>  8 P0AC33    0         8  1.65e8 2.78e-4    2.19    1.13   0.686       1 Fumara… #>  9 P0ADT2    0         8  2.67e7 4.50e-5    2.14    1.10   0.2         1 UPF044… #> 10 P31825    0         8  7.59e6 1.28e-5    2.11    1.07   0.2         1 tRNA1(… #> # … with 2,565 more rows, 8 more variables: gene_id_entrez <chr>, #> #   gene_id_ensemble <chr>, gene_name <chr>, biological_process <chr>, #> #   cellular_component <chr>, molecular_function <chr>, wiki_pathway <chr>, #> #   reactome_pathway <chr>, and abbreviated variable names ¹​average_expression, #> #   ²​proportional_expression, ³​foldchange, ⁴​log2_foldchange, ⁵​adj_p_value, #> #   ⁶​description #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names  # Note: the userdefined function is preserved in the operations tracking ecoli_proteins %>% operations() #> ℹ Data Transformations #>   • Data files (pd_ecoli-hint_proteins.xlsx) were imported as proteins from #>   ProteomeDiscoverer #>   • Data reassigned sample to ko where 'sample like hint' #>   • Analysis: expression difference wilcox_test ko/wt  # limma expression analysis ecoli_proteins %>%    expression(ko/wt, .method = \"limma\") %>%    export_analysis(ko/wt, .analysis = \"expression\") #> # A tibble: 2,575 × 20 #>    protein imputed     n log2_…¹ foldc…² avera…³ propo…⁴ p_value adj_p…⁵ limma…⁶ #>    <chr>     <dbl> <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 P76086    0         8    1.67    3.19  3.54e6 6.04e-6 0.0688    0.995    2.07 #>  2 P76241    0.5       8    1.51    2.85  1.60e5 2.72e-7 0.0458    0.995    2.32 #>  3 P10903    0.625     8    1.37    2.58  2.86e5 4.88e-7 0.0910    0.995    1.96 #>  4 P09152    0         8    1.35    2.56  5.49e6 9.38e-6 0.0438    0.995    2.34 #>  5 P0A9I8    0         8    1.27    2.41  2.49e6 4.25e-6 0.00470   0.995    3.73 #>  6 P31825    0         8    1.27    2.41  4.98e6 8.50e-6 0.0810    0.995    1.96 #>  7 P33025    0         8    1.19    2.28  2.43e6 4.15e-6 0.0216    0.995    2.77 #>  8 P0ADT2    0         8    1.14    2.21  2.11e7 3.60e-5 0.0558    0.995    2.19 #>  9 P0AF26    0.5       8    1.10    2.14  2.70e5 4.61e-7 0.128     0.995    1.68 #> 10 P0AEU3    0.25      8    1.02    2.03  1.33e6 2.27e-6 0.189     0.995    1.42 #> # … with 2,565 more rows, 10 more variables: limma_B_statistic <dbl>, #> #   description <chr>, gene_id_entrez <chr>, gene_id_ensemble <chr>, #> #   gene_name <chr>, biological_process <chr>, cellular_component <chr>, #> #   molecular_function <chr>, wiki_pathway <chr>, reactome_pathway <chr>, and #> #   abbreviated variable names ¹​log2_foldchange, ²​foldchange, #> #   ³​average_expression, ⁴​proportional_expression, ⁵​adj_p_value, #> #   ⁶​limma_t_statistic #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"/reference/expression_limma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate expression differences between two-samples — expression_limma","title":"Calculate expression differences between two-samples — expression_limma","text":"expression_limma() function evaluating expression differences two sample sets via limma algorithm","code":""},{"path":"/reference/expression_limma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate expression differences between two-samples — expression_limma","text":"","code":"expression_limma(data = NULL, experiment = NULL, control = NULL)"},{"path":"/reference/expression_limma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate expression differences between two-samples — expression_limma","text":"data tidyproteomics data object experiment character string representing experimental sample set control character string representing control sample set","code":""},{"path":"/reference/expression_limma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate expression differences between two-samples — expression_limma","text":"tibble","code":""},{"path":"/reference/expression_test.html","id":null,"dir":"Reference","previous_headings":"","what":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"function evaluating expression differences two sample sets via limma algorithm","code":""},{"path":"/reference/expression_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"","code":"expression_test(   data = NULL,   experiment = NULL,   control = NULL,   m.test = stats::t.test,   ... )"},{"path":"/reference/expression_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"data tidyproteomics data object experiment character string representing experimental sample set control character string representing control sample set m.test two-distribution test function returning p_value null hypothesis. Default t.test. Example functions include t.test, wilcox.test, stats::ks.test ... ... pass arguments","code":""},{"path":"/reference/expression_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function for evaluating expression differences between two sample sets via the limma algorithm — expression_test","text":"tibble","code":""},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"Main function extracting quantitative data tidyproteomics data-object","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"","code":"extract(data = NULL, values = \"raw\", na.rm = FALSE)"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"data tidyproteomics data object values character string vector na.rm boolean","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for extracting quantitative data from a tidyproteomics data-object — extract","text":"tibble","code":""},{"path":"/reference/fgeomean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"Calculates geometric mean numeric vector NAs removed","code":""},{"path":"/reference/fgeomean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"","code":"fgeomean(x)"},{"path":"/reference/fgeomean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"x numeric vector","code":""},{"path":"/reference/fgeomean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"numeric","code":""},{"path":"/reference/fgeomean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the geometric mean of a numeric vector with NAs removed — fgeomean","text":"","code":"library(tidyproteomics) fgeomean(c(1,2,5,6,8,NA,NA)) #> [1] 3.437544"},{"path":"/reference/fmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the mean of a numeric vector with NAs removed — fmean","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"Calculates mean numeric vector NAs removed","code":""},{"path":"/reference/fmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"","code":"fmean(x)"},{"path":"/reference/fmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"x numeric vector","code":""},{"path":"/reference/fmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"numeric","code":""},{"path":"/reference/fmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the mean of a numeric vector with NAs removed — fmean","text":"","code":"library(tidyproteomics) fmean(c(1,2,5,6,8,NA,NA)) #> [1] 4.4"},{"path":"/reference/fmedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the median of a numeric vector with NAs removed — fmedian","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"Calculates median numeric vector NAs removed","code":""},{"path":"/reference/fmedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"","code":"fmedian(x)"},{"path":"/reference/fmedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"x numeric vector","code":""},{"path":"/reference/fmedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"numeric","code":""},{"path":"/reference/fmedian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the median of a numeric vector with NAs removed — fmedian","text":"","code":"library(tidyproteomics) fmedian(c(1,2,5,6,8,NA,NA)) #> [1] 5"},{"path":"/reference/fmin.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the minimum of a numeric vector with NAs removed — fmin","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"Calculates minimum numeric vector NAs removed","code":""},{"path":"/reference/fmin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"","code":"fmin(x)"},{"path":"/reference/fmin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"x numeric vector","code":""},{"path":"/reference/fmin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"numeric","code":""},{"path":"/reference/fmin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the minimum of a numeric vector with NAs removed — fmin","text":"","code":"library(tidyproteomics) fmin(c(1,2,5,6,8,NA,NA)) #> [1] 1"},{"path":"/reference/fsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the sum of a numeric vector with NAs removed — fsum","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"Calculates sum numeric vector NAs removed","code":""},{"path":"/reference/fsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"","code":"fsum(x)"},{"path":"/reference/fsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"x numeric vector","code":""},{"path":"/reference/fsum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"numeric","code":""},{"path":"/reference/fsum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the sum of a numeric vector with NAs removed — fsum","text":"","code":"library(tidyproteomics) fsum(c(1,2,5,6,8,NA,NA)) #> [1] 22"},{"path":"/reference/get_annotation_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_annotation_terms","title":"Helper function to get available terms — get_annotation_terms","text":"Helper function get available terms","code":""},{"path":"/reference/get_annotation_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_annotation_terms","text":"","code":"get_annotation_terms(data)"},{"path":"/reference/get_annotation_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_annotation_terms","text":"data tidyproteomics data object","code":""},{"path":"/reference/get_annotation_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_annotation_terms","text":"vector","code":""},{"path":"/reference/get_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all annotations for a given term — get_annotations","title":"Helper function to get all annotations for a given term — get_annotations","text":"Helper function get annotations given term","code":""},{"path":"/reference/get_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all annotations for a given term — get_annotations","text":"","code":"get_annotations(data = NULL, term = NULL)"},{"path":"/reference/get_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all annotations for a given term — get_annotations","text":"data tidyproteomics data object term character string","code":""},{"path":"/reference/get_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all annotations for a given term — get_annotations","text":"vector","code":""},{"path":"/reference/get_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_columns","title":"Helper function to get available terms — get_columns","text":"Helper function get available terms","code":""},{"path":"/reference/get_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_columns","text":"","code":"get_columns(   data = NULL,   segment = c(\"experiments\", \"quantitative\", \"annotations\", \"accounting\") )"},{"path":"/reference/get_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_columns","text":"data tidyproteomics data object segment character string","code":""},{"path":"/reference/get_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_columns","text":"vector","code":""},{"path":"/reference/get_quant_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the quantitative value names — get_quant_names","title":"Get the quantitative value names — get_quant_names","text":"get_quant_names() helper function returns names normalized quantitative values, raw, linear, loess","code":""},{"path":"/reference/get_quant_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the quantitative value names — get_quant_names","text":"","code":"get_quant_names(data)"},{"path":"/reference/get_quant_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the quantitative value names — get_quant_names","text":"data tidyproteomics data-object","code":""},{"path":"/reference/get_quant_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the quantitative value names — get_quant_names","text":"character vector","code":""},{"path":"/reference/get_quant_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the quantitative value names — get_quant_names","text":"","code":"library(tidyproteomics) get_quant_names(ecoli_proteins) #> [1] \"raw\""},{"path":"/reference/get_sample_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all sample names — get_sample_names","title":"Helper function to get all sample names — get_sample_names","text":"Helper function get sample names","code":""},{"path":"/reference/get_sample_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all sample names — get_sample_names","text":"","code":"get_sample_names(data = NULL)"},{"path":"/reference/get_sample_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all sample names — get_sample_names","text":"data tidyproteomics data object","code":""},{"path":"/reference/get_sample_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all sample names — get_sample_names","text":"vector","code":""},{"path":"/reference/get_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_segment","title":"Helper function to get available terms — get_segment","text":"Helper function get available terms","code":""},{"path":"/reference/get_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_segment","text":"","code":"get_segment(data = NULL, variable = NULL, .verbose = TRUE)"},{"path":"/reference/get_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_segment","text":"data tidyproteomics data object variable character string verbose boolean","code":""},{"path":"/reference/get_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_segment","text":"character","code":""},{"path":"/reference/get_unique_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get all sample names — get_unique_variables","title":"Helper function to get all sample names — get_unique_variables","text":"Helper function get sample names","code":""},{"path":"/reference/get_unique_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get all sample names — get_unique_variables","text":"","code":"get_unique_variables(data = NULL, variable = NULL)"},{"path":"/reference/get_unique_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get all sample names — get_unique_variables","text":"data tidyproteomics data object variable string character","code":""},{"path":"/reference/get_unique_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get all sample names — get_unique_variables","text":"vector","code":""},{"path":"/reference/get_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get available terms — get_variables","title":"Helper function to get available terms — get_variables","text":"Helper function get available terms","code":""},{"path":"/reference/get_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get available terms — get_variables","text":"","code":"get_variables(   data = NULL,   segment = c(\"experiments\", \"quantitative\", \"annotations\", \"accounting\") )"},{"path":"/reference/get_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get available terms — get_variables","text":"data tidyproteomics data object segment character string","code":""},{"path":"/reference/get_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get available terms — get_variables","text":"vector","code":""},{"path":"/reference/getpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for displaying path to data — getpath","title":"Helper function for displaying path to data — getpath","text":"Helper function displaying path data","code":""},{"path":"/reference/getpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for displaying path to data — getpath","text":"","code":"getpath(item = c(\"ecoli_proteins\", \"ecoli_peptides\", \"config\"))"},{"path":"/reference/getpath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for displaying path to data — getpath","text":"table tibble","code":""},{"path":"/reference/getpath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for displaying path to data — getpath","text":"print table console","code":""},{"path":"/reference/hash_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a crc32 hash on a vector — hash_vector","title":"Create a crc32 hash on a vector — hash_vector","text":"hash_vector() helper function returns crc32 hash vector","code":""},{"path":"/reference/hash_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a crc32 hash on a vector — hash_vector","text":"","code":"hash_vector(x)"},{"path":"/reference/hash_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a crc32 hash on a vector — hash_vector","text":"x vector","code":""},{"path":"/reference/hash_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a crc32 hash on a vector — hash_vector","text":"hash x","code":""},{"path":"/reference/hdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to take the head of a tibble and display as a data.frame — hdf","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"Helper function take head tibble display data.frame","code":""},{"path":"/reference/hdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"","code":"hdf(x, n = 5)"},{"path":"/reference/hdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"x tibble n display nth row","code":""},{"path":"/reference/hdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"data frame","code":""},{"path":"/reference/hdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to take the head of a tibble and display as a data.frame — hdf","text":"","code":"library(tidyproteomics) x <- tibble::tibble(a = 1:10, b = 11:20) hdf(x) #>   a  b #> 1 1 11 #> 2 2 12 #> 3 3 13 #> 4 4 14 #> 5 5 15 hdf(x, n = 3) #>   a  b #> 1 1 11 #> 2 2 12 #> 3 3 13"},{"path":"/reference/import.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for importing data to the tidyproteomics list object — import","title":"Main function for importing data to the tidyproteomics list object — import","text":"Main function importing data tidyproteomics list object","code":""},{"path":"/reference/import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for importing data to the tidyproteomics list object — import","text":"","code":"import(files = NULL, platform = NULL, analyte = NULL)"},{"path":"/reference/import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for importing data to the tidyproteomics list object — import","text":"files character vector file paths platform source data (ProteomeDiscoverer, MaxQuant) analyte omics analyte (proteins, peptides)","code":""},{"path":"/reference/import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for importing data to the tidyproteomics list object — import","text":"tidyproteomics list data-object","code":""},{"path":"/reference/import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main function for importing data to the tidyproteomics list object — import","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins <- path_to_package_data(\"ecoli-hint_proteins\") %>%    import(\"ProteomeDiscoverer\", \"proteins\") #> ℹ Importing pd_ecoli-hint_proteins.xlsx #> ! .. not all expected annotation columns present in import file #> ℹ Importing pd_ecoli-hint_proteins.xlsx #> ✔ Importing pd_ecoli-hint_proteins.xlsx [778ms] #>   ecoli_proteins %>% summary('sample') #>  #> ── Summary: sample ── #>  #>   sample files proteins protein_groups peptides peptides_unique quantifiable #>  hint_ko     4     2772           2772    31271           31025         98.4 #>       wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 #>"},{"path":"/reference/import_dn_peps.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data from ProteomeDiscoverer — import_dn_peps","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_dn_peps","text":"helper function importing peptide table data ProteomeDiscoverer","code":""},{"path":"/reference/import_dn_peps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_dn_peps","text":"","code":"import_dn_peps(file_names = NULL)"},{"path":"/reference/import_dn_peps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_dn_peps","text":"file_names character vector file paths","code":""},{"path":"/reference/import_dn_peps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_dn_peps","text":"tidyproteomics list data-object","code":""},{"path":"/reference/import_mq_peps.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data from MaxQuant — import_mq_peps","title":"A helper function for importing peptide table data from MaxQuant — import_mq_peps","text":"helper function importing peptide table data MaxQuant","code":""},{"path":"/reference/import_mq_peps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data from MaxQuant — import_mq_peps","text":"","code":"import_mq_peps(file_names = NULL)"},{"path":"/reference/import_mq_peps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data from MaxQuant — import_mq_peps","text":"file_names character vector file paths","code":""},{"path":"/reference/import_mq_peps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data from MaxQuant — import_mq_peps","text":"tidyproteomics list data-object","code":""},{"path":"/reference/import_mq_prots.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing protein table data from MaxQuant — import_mq_prots","title":"A helper function for importing protein table data from MaxQuant — import_mq_prots","text":"helper function importing protein table data MaxQuant","code":""},{"path":"/reference/import_mq_prots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing protein table data from MaxQuant — import_mq_prots","text":"","code":"import_mq_prots(file_names = NULL)"},{"path":"/reference/import_mq_prots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing protein table data from MaxQuant — import_mq_prots","text":"file_names character vector file paths","code":""},{"path":"/reference/import_mq_prots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing protein table data from MaxQuant — import_mq_prots","text":"list data object","code":""},{"path":"/reference/import_pd_peps.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data from ProteomeDiscoverer — import_pd_peps","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_pd_peps","text":"helper function importing peptide table data ProteomeDiscoverer","code":""},{"path":"/reference/import_pd_peps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_pd_peps","text":"","code":"import_pd_peps(file_names = NULL)"},{"path":"/reference/import_pd_peps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_pd_peps","text":"file_names character vector file paths","code":""},{"path":"/reference/import_pd_peps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_pd_peps","text":"tidyproteomics list data-object","code":""},{"path":"/reference/import_pd_prots.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing protein table data from ProteomeDiscoverer — import_pd_prots","title":"A helper function for importing protein table data from ProteomeDiscoverer — import_pd_prots","text":"helper function importing protein table data ProteomeDiscoverer","code":""},{"path":"/reference/import_pd_prots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing protein table data from ProteomeDiscoverer — import_pd_prots","text":"","code":"import_pd_prots(file_names = NULL)"},{"path":"/reference/import_pd_prots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing protein table data from ProteomeDiscoverer — import_pd_prots","text":"file_names character vector file paths","code":""},{"path":"/reference/import_pd_prots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing protein table data from ProteomeDiscoverer — import_pd_prots","text":"list data object","code":""},{"path":"/reference/import_sk_peps.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function for importing peptide table data from ProteomeDiscoverer — import_sk_peps","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_sk_peps","text":"helper function importing peptide table data ProteomeDiscoverer","code":""},{"path":"/reference/import_sk_peps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_sk_peps","text":"","code":"import_sk_peps(file_names = NULL)"},{"path":"/reference/import_sk_peps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_sk_peps","text":"file_names character vector file paths","code":""},{"path":"/reference/import_sk_peps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper function for importing peptide table data from ProteomeDiscoverer — import_sk_peps","text":"tidyproteomics list data-object","code":""},{"path":"/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Main method for imputing missing values — impute","title":"Main method for imputing missing values — impute","text":"Main method imputing missing values","code":""},{"path":"/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main method for imputing missing values — impute","text":"","code":"impute(   data = NULL,   impute_function = base::min,   method = c(\"within\", \"between\"),   minimum_to_impute = 0.25,   cores = 2 )"},{"path":"/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main method for imputing missing values — impute","text":"data tidyproteomics list data-object impute_function summary statistic function. Default base::min, examples functions include min, max, mean, sum. One write function lower 5%, lower5th <- function(x)  quantile(x, 0.05)[1] . Note, NAs removed function call. minimum_to_impute minimum ratio impute cores number threads used speed calculation","code":""},{"path":"/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main method for imputing missing values — impute","text":"tidyproteomics list data-object","code":""},{"path":"/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main method for imputing missing values — impute","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>% summary('sample') #>  #> ── Summary: sample ── #>  #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2772           2772    31271           31025         98.4 #>      wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 #>   ecoli_proteins %>% impute(impute_function = stats::median) %>% summary('sample') #> ℹ Imputing within samples by function (x, na.rm = FALSE, ...)  #> ✔ Imputing within samples by function (x, na.rm = FALSE, ...)  #>  #> ℹ ... 439 values imputed #>  #> ── Summary: sample ── #>  #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2772           2772    31271           31025         98.8 #>      wt     4     2772           2772    31271           31025         98.8 #>        CVs #>  0.1405982 #>  0.1638036 #>   ecoli_proteins %>% impute(impute_function = 'randomforest') %>% summary('sample') #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'impute_function_str' not found"},{"path":"/reference/impute_byfunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputes missing values based on a given function — impute_byfunction","title":"Imputes missing values based on a given function — impute_byfunction","text":"Imputes missing values based given function","code":""},{"path":"/reference/impute_byfunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputes missing values based on a given function — impute_byfunction","text":"","code":"impute_byfunction(   table = NULL,   impute_function = stats::median,   method = c(\"within\", \"between\"),   minimum_to_impute = 0.25 )"},{"path":"/reference/impute_byfunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputes missing values based on a given function — impute_byfunction","text":"table tibble impute_function summary statistic function. Default median, examples functions include min, max, mean, sum. One write function lower 5%, lower5th <- function(x)  quantile(x, 0.05)[1] . minimum_to_impute minimum ratio impute ","code":""},{"path":"/reference/impute_byfunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputes missing values based on a given function — impute_byfunction","text":"tibble","code":""},{"path":"/reference/impute_randomforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputes missing values based on the missForest function — impute_randomforest","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"Imputes missing values based missForest function","code":""},{"path":"/reference/impute_randomforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"","code":"impute_randomforest(table = NULL, minimum_to_impute = 0.25, cores = 2)"},{"path":"/reference/impute_randomforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"table tibble minimum_to_impute minimum ratio impute cores number threads used speed calculation","code":""},{"path":"/reference/impute_randomforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputes missing values based on the missForest function — impute_randomforest","text":"tibble","code":""},{"path":"/reference/impute_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for calculating imputation stats — impute_ratio","title":"Helper function for calculating imputation stats — impute_ratio","text":"Helper function calculating imputation stats","code":""},{"path":"/reference/impute_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for calculating imputation stats — impute_ratio","text":"","code":"impute_ratio(x)"},{"path":"/reference/impute_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for calculating imputation stats — impute_ratio","text":"x tibble","code":""},{"path":"/reference/impute_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for calculating imputation stats — impute_ratio","text":"list vectors","code":""},{"path":"/reference/invlog2.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Log 2 — invlog2","title":"Inverse Log 2 — invlog2","text":"Inverse Log 2","code":""},{"path":"/reference/invlog2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Log 2 — invlog2","text":"","code":"invlog2(x)"},{"path":"/reference/invlog2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Log 2 — invlog2","text":"x Numeric value calculate inverse log2","code":""},{"path":"/reference/invlog2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Log 2 — invlog2","text":"numeric","code":""},{"path":"/reference/list_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function Venn and Euler plots — list_venn","title":"Helper function Venn and Euler plots — list_venn","text":"Helper function Venn Euler plots","code":""},{"path":"/reference/list_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function Venn and Euler plots — list_venn","text":"","code":"list_venn(data = NULL, ...)"},{"path":"/reference/list_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function Venn and Euler plots — list_venn","text":"data tidyproteomics data object ... pass arguments","code":""},{"path":"/reference/list_venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function Venn and Euler plots — list_venn","text":"list vectors","code":""},{"path":"/reference/load_from_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project specific data — load_from_project","title":"Load project specific data — load_from_project","text":"load_from_project() simple function loads current project tidyproteomics data object","code":""},{"path":"/reference/load_from_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project specific data — load_from_project","text":"","code":"load_from_project(source = \"proteins\")"},{"path":"/reference/load_from_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project specific data — load_from_project","text":"source character string","code":""},{"path":"/reference/load_from_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load project specific data — load_from_project","text":"tidyproteomics data object","code":""},{"path":"/reference/load_from_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load project specific data — load_from_project","text":"","code":"library(tidyproteomics) protein_data <- load_from_project(source = \"proteins\")"},{"path":"/reference/load_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project specific data — load_local","title":"Load project specific data — load_local","text":"load_local() simple function loads current project tidyproteomics data object","code":""},{"path":"/reference/load_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project specific data — load_local","text":"","code":"load_local(source = c(\"peptides\", \"proteins\"))"},{"path":"/reference/load_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project specific data — load_local","text":"source character string","code":""},{"path":"/reference/load_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load project specific data — load_local","text":"tidyproteomics data object","code":""},{"path":"/reference/load_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load project specific data — load_local","text":"","code":"library(tidyproteomics) # ecoli_proteins <- load_omics(source = \"proteins\")"},{"path":"/reference/load_omics.html","id":null,"dir":"Reference","previous_headings":"","what":"Load project specific data — load_omics","title":"Load project specific data — load_omics","text":"load_from_project() simple function loads current project tidyproteomics data object","code":""},{"path":"/reference/load_omics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load project specific data — load_omics","text":"","code":"load_omics(source = c(\"peptides\", \"proteins\"))"},{"path":"/reference/load_omics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load project specific data — load_omics","text":"source character string","code":""},{"path":"/reference/load_omics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load project specific data — load_omics","text":"tidyproteomics data object","code":""},{"path":"/reference/load_omics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load project specific data — load_omics","text":"","code":"library(tidyproteomics) # ecoli_proteins <- load_omics(source = \"proteins\")"},{"path":"/reference/match_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"match a named vector to string vector — match_vect","title":"match a named vector to string vector — match_vect","text":"match named vector string vector","code":""},{"path":"/reference/match_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match a named vector to string vector — match_vect","text":"","code":"match_vect(un_vec, n_vec)"},{"path":"/reference/match_vect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"match a named vector to string vector — match_vect","text":"un_vec un-named vector n_vec named vector","code":""},{"path":"/reference/match_vect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"match a named vector to string vector — match_vect","text":"named vector","code":""},{"path":"/reference/meld.html","id":null,"dir":"Reference","previous_headings":"","what":"Meld a tidyproteomics data object into a single table — meld","title":"Meld a tidyproteomics data object into a single table — meld","text":"data_meld() helper function","code":""},{"path":"/reference/meld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meld a tidyproteomics data object into a single table — meld","text":"","code":"meld(data = NULL, single_quant_source = FALSE)"},{"path":"/reference/meld.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Meld a tidyproteomics data object into a single table — meld","text":"data tidyproteomics data object single_quant_source boolean indicate single quantitative value reported","code":""},{"path":"/reference/meld.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Meld a tidyproteomics data object into a single table — meld","text":"tibble","code":""},{"path":"/reference/merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple tidyproteomics data-objects — merge","title":"Merge multiple tidyproteomics data-objects — merge","text":"merge() returns single tidyproteomics data object multiple.","code":""},{"path":"/reference/merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple tidyproteomics data-objects — merge","text":"","code":"merge(data_list = NULL, quantitative_source = c(\"raw\", \"selected\", \"all\"))"},{"path":"/reference/merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple tidyproteomics data-objects — merge","text":"data_list list tidyproteomics data objects quantitative_source character string indicating quantitative value merge . selected chosen dataset's specific normalization used renamed 'abundance_selected'. chosen, possibility exists normalization values fillin NAs.","code":""},{"path":"/reference/merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple tidyproteomics data-objects — merge","text":"tidyproteomics data object","code":""},{"path":"/reference/merge_quantitative.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function merging normalized data back into the main data-object — merge_quantitative","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"Helper function merging normalized data back main data-object","code":""},{"path":"/reference/merge_quantitative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"","code":"merge_quantitative(data = NULL, data_quant = NULL, values = \"raw\")"},{"path":"/reference/merge_quantitative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"data tidyproteomics data subset tibble data_quant tidyproteomics data subset tibble values character string vector","code":""},{"path":"/reference/merge_quantitative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function merging normalized data back into the main data-object — merge_quantitative","text":"tibble","code":""},{"path":"/reference/modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the sample info — modify","title":"Modify the sample info — modify","text":"modify() enables editing sample descriptive experimental table. function replace sample string update replicate number.","code":""},{"path":"/reference/modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the sample info — modify","text":"","code":"modify(data = NULL, field = NULL, find = NULL, replace = NULL)"},{"path":"/reference/modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the sample info — modify","text":"data tidyproteomics data-object field character string find character string replace character string","code":""},{"path":"/reference/modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify the sample info — modify","text":"tidyproteomics data-object","code":""},{"path":"/reference/modify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the sample info — modify","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # check the experiment table ecoli_proteins %>% summary(\"experiment\") #>  #> ── Summary: experiment ── #>  #>  file_id sample replicate proteins protein_groups peptides peptides_unique #>       f1     ko         1     2625           2625    31068           30834 #>       f2     ko         2     2623           2623    31056           30823 #>       f3     ko         3     2626           2626    31056           30822 #>       f4     ko         4     2648           2648    31105           30870 #>       f5     wt         1     2624           2624    31070           30836 #>       f6     wt         2     2640           2640    31103           30859 #>       f7     wt         3     2624           2624    31067           30831 #>       f8     wt         4     2629           2629    31087           30852 #>  quantifiable #>          99.2 #>          99.2 #>          99.2 #>          99.2 #>          99.2 #>          99.2 #>          99.2 #>          99.2 #>   # find the data to change ecoli_proteins %>%    modify(field = \"sample\", \"hint_ko\") #> Error in modify(., field = \"sample\", \"hint_ko\"): did not find find in field`  # make the modification ecoli_proteins %>%    modify(field = \"sample\", \"hint_ko\", \"ko\") %>%    summary(\"sample\") #> Error in modify(., field = \"sample\", \"hint_ko\", \"ko\"): did not find hint_ko in sample  # modify specific file_ids ecoli_proteins %>%    modify(field = \"file_id\", \"f1\", \"ko\") %>%    modify(field = \"file_id\", \"f2\", \"ko\") %>%    summary(\"sample\") #>  #> ── Summary: sample ── #>  #>  files sample proteins protein_groups peptides peptides_unique quantifiable #>      4     ko     2727           2727    31072           30838         99.2 #>      4     wt     2720           2720    31082           30845         99.2 #>        CVs #>  0.1390292 #>  0.1618681 #>"},{"path":"/reference/munge_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"Main function munging peptide data extracted tidyproteomics data-object","code":""},{"path":"/reference/munge_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"","code":"munge_identifier(   data,   munge = c(\"combine\", \"separate\"),   identifiers = c(\"protein\", \"peptide\", \"modifications\") )"},{"path":"/reference/munge_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"data tidyproteomics data object munge character string vector (combine | separate) identifiers character vector identifiers","code":""},{"path":"/reference/munge_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for munging peptide data from an extracted tidyproteomics data-object — munge_identifier","text":"tibble","code":""},{"path":"/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"normalize() Main function normalizing quantitative data tidyproteomics data-object. passthrough function returns original tidyproteomics data-object additional quantitative column labeled normalization method(s) used. function can accommodate multiple normalization methods single pass, useful examining normalization effects data. Often adventitious select optimal normalization method based performance.","code":""},{"path":"/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"","code":"normalize(   data,   ...,   .method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\", \"svm\", \"randomforest\") )"},{"path":"/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"data tidyproteomics data object ... use subset data normalization see subset(). useful normalizing spike-set proteins method character vector (scaled, median, linear, limma, loess, randomforest)","code":""},{"path":"/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"tidyproteomics data-object","code":""},{"path":"/reference/normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main function for normalizing quantitative data in a tidyproteomics data-object — normalize","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%      normalize(.method = c('scaled', 'median')) %>%      summary('sample') #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [233ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [238ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  # normalize between samples according to a subset, then apply to all values #   this would be recommended with a pull-down experiment wherein a conserved #   protein complex acts as the majority content and individual inter-actors #   are of quantitative differentiation ecoli_proteins %>%      normalize(description %!like% 'Ribosome', .method = c('scaled', 'median')) %>%      summary('sample') #> !   normalization based on 2772 of 2661 identifiers #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [257ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [223ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found"},{"path":"/reference/normalize_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize the column names in a tibble — normalize_colnames","title":"Normalize the column names in a tibble — normalize_colnames","text":"Normalize column names tibble","code":""},{"path":"/reference/normalize_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize the column names in a tibble — normalize_colnames","text":"","code":"normalize_colnames(x)"},{"path":"/reference/normalize_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize the column names in a tibble — normalize_colnames","text":"x tibble","code":""},{"path":"/reference/normalize_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize the column names in a tibble — normalize_colnames","text":"tibble","code":""},{"path":"/reference/normalize_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize the column names in a tibble — normalize_colnames","text":"","code":"x <- tibble::tibble(`Col A` = 1:10, `Col B` = 11:20) normalize_colnames(x) #> Error in normalize_colnames(x): could not find function \"normalize_colnames\""},{"path":"/reference/normalize_limma.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_limma","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_limma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"","code":"normalize_limma(data = NULL)"},{"path":"/reference/normalize_limma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"data tidyproteomics data object","code":""},{"path":"/reference/normalize_limma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_limma","text":"tibble","code":""},{"path":"/reference/normalize_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_linear","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"","code":"normalize_linear(data = NULL, data_centered = NULL)"},{"path":"/reference/normalize_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"/reference/normalize_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_linear","text":"tibble","code":""},{"path":"/reference/normalize_loess.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_loess","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_loess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"","code":"normalize_loess(data = NULL, data_centered = NULL)"},{"path":"/reference/normalize_loess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"/reference/normalize_loess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_loess","text":"tibble","code":""},{"path":"/reference/normalize_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_median","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"","code":"normalize_median(data = NULL, data_centered = NULL)"},{"path":"/reference/normalize_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"/reference/normalize_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_median","text":"tibble","code":""},{"path":"/reference/normalize_randomforest.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_randomforest","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_randomforest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"","code":"normalize_randomforest(data = NULL, data_centered = NULL)"},{"path":"/reference/normalize_randomforest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"/reference/normalize_randomforest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_randomforest","text":"tibble","code":""},{"path":"/reference/normalize_scaled.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_scaled","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_scaled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"","code":"normalize_scaled(data = NULL, data_centered = NULL)"},{"path":"/reference/normalize_scaled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"/reference/normalize_scaled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_scaled","text":"tibble","code":""},{"path":"/reference/normalize_svm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization function for a tidyproteomics data-object — normalize_svm","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"Normalization function tidyproteomics data-object","code":""},{"path":"/reference/normalize_svm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"","code":"normalize_svm(data = NULL, data_centered = NULL)"},{"path":"/reference/normalize_svm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"data tidyproteomics list data-object data_centered tibble centered values used normalization","code":""},{"path":"/reference/normalize_svm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization function for a tidyproteomics data-object — normalize_svm","text":"tibble","code":""},{"path":"/reference/operations.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the data transformations — operations","title":"Returns the data transformations — operations","text":"operations() returns transformative operations performed data.","code":""},{"path":"/reference/operations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the data transformations — operations","text":"","code":"operations(data = NULL, destination = c(\"print\", \"save\"))"},{"path":"/reference/operations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the data transformations — operations","text":"data tidyproteomics data object destination character string","code":""},{"path":"/reference/operations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the data transformations — operations","text":"character","code":""},{"path":"/reference/operations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the data transformations — operations","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins <- path_to_package_data(\"ecoli-hint_proteins\") %>%    import(\"ProteomeDiscoverer\", \"proteins\") %>%    reassign(\"sample\", \"hint_ko\", \"ko\") %>%    impute() %>%    normalize(.method = c(\"linear\",\"loess\")) #> ℹ Importing pd_ecoli-hint_proteins.xlsx #> ! .. not all expected annotation columns present in import file #> ℹ Importing pd_ecoli-hint_proteins.xlsx #> ✔ Importing pd_ecoli-hint_proteins.xlsx [658ms] #>  #> ℹ Imputing within samples by .Primitive(\"min\") #> ✔ Imputing within samples by .Primitive(\"min\") [54ms] #>  #> ℹ ... 439 values imputed #> ℹ Normalizing quantitative data #> ℹ ... using linear regression #> ✔ ... using linear regression [164ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [601ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected linear  ecoli_proteins %>% operations() #> ℹ Data Transformations #>   • Data files (pd_ecoli-hint_proteins.xlsx) were imported as proteins from #>   ProteomeDiscoverer #>   • Data reassigned sample to ko where 'sample like hint_ko' #>   • Missing values imputed within samples via .Primitive(\"min\"). #>   • ... 439 values imputed #>   • Data normalized via linear, loess. #>   • Normalization automatically selected as linear."},{"path":"/reference/path_to_package_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for displaying path to data — path_to_package_data","title":"Helper function for displaying path to data — path_to_package_data","text":"Helper function displaying path data","code":""},{"path":"/reference/path_to_package_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for displaying path to data — path_to_package_data","text":"","code":"path_to_package_data(item = c(\"proteins\", \"peptides\", \"fasta\"))"},{"path":"/reference/path_to_package_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for displaying path to data — path_to_package_data","text":"item character string","code":""},{"path":"/reference/path_to_package_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for displaying path to data — path_to_package_data","text":"print table console","code":""},{"path":"/reference/plot.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object plot definition — plot.tidyproteomics","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"Tidy-Quant data object plot definition","code":""},{"path":"/reference/plot.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"","code":"# S3 method for tidyproteomics plot(obj)"},{"path":"/reference/plot.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"obj tidyproteomics data object","code":""},{"path":"/reference/plot.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object plot definition — plot.tidyproteomics","text":"print object summary","code":""},{"path":"/reference/plot.tidyquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object plot definition — plot.tidyquant","title":"Tidy-Quant data object plot definition — plot.tidyquant","text":"Tidy-Quant data object plot definition","code":""},{"path":"/reference/plot.tidyquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object plot definition — plot.tidyquant","text":"","code":"# S3 method for tidyproteomics plot(obj)"},{"path":"/reference/plot.tidyquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object plot definition — plot.tidyquant","text":"obj tidyproteomics data object","code":""},{"path":"/reference/plot.tidyquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object plot definition — plot.tidyquant","text":"print object summary","code":""},{"path":"/reference/plot_compexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparative analysis between two expression tests — plot_compexp","title":"Comparative analysis between two expression tests — plot_compexp","text":"plot_compexp() GGplot2 implementation plotting comparison expression differences two methods two sets groups. example, one run expression difference two different conditions (B) prodived experiment contained 3 samples condition , condition B WT, compare results. proteins showing union (purple) indicate common targets condition B.","code":"expdiff_a <- protein_data %>%    expression(experiment = \"condition_a\", control = \"wt\")  expdiff_b <- protein_data %>%    expression(experiment = \"condition_b\", control = \"wt\")  plot_compexp(expdiff_a, expdiff_b)"},{"path":"/reference/plot_compexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparative analysis between two expression tests — plot_compexp","text":"","code":"plot_compexp(   table_a = NULL,   table_b = NULL,   log2fc_min = 2,   log2fc_column = \"log2_foldchange\",   significance_max = 0.05,   significance_column = \"adj_p_value\",   labels_column = \"protein\",   point_size = NULL,   show_lines = TRUE,   color_a = \"dodgerblue\",   color_b = \"firebrick1\",   color_u = \"purple\" )"},{"path":"/reference/plot_compexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparative analysis between two expression tests — plot_compexp","text":"table_a tibble table_b tibble log2fc_min numeric defining minimum log2 foldchange highlight. log2fc_column character defining column name log2 foldchange values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. labels_column character defining column name column labeling. point_size numeric changing point size. show_lines boolean showing threshold lines. color_a character defining color table_a expression. color_b character defining color table_b expression. color_u character defining color union tables.","code":""},{"path":"/reference/plot_compexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparative analysis between two expression tests — plot_compexp","text":"ggplot2 object","code":""},{"path":"/reference/plot_compexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparative analysis between two expression tests — plot_compexp","text":"","code":"library(ggplot2, warn.conflicts = FALSE) library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # comparing two analytical methods, in substitute for two conditions exp_a <- ecoli_proteins %>% expression(ko/wt) %>%      export_analysis(ko/wt, .analysis = 'expression')  exp_b <- ecoli_proteins %>% expression(ko/wt, .method = \"limma\") %>%      export_analysis(ko/wt, .analysis = 'expression')  plot_compexp(exp_a, exp_b, log2fc_min = 1, significance_column = 'p_value') +      ggplot2::labs(x = \"(log2 FC) Wilcoxon Rank Sum\",                    y = \"(log2 FC) Emperical Bayes (limma)\",                    title = \"Ecoli Hint KO ~ WT\")"},{"path":"/reference/plot_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variation in normalized values — plot_counts","title":"Plot the variation in normalized values — plot_counts","text":"plot_counts() GGplot2 implementation plotting counting statistics.","code":""},{"path":"/reference/plot_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variation in normalized values — plot_counts","text":"","code":"plot_counts(   data = NULL,   accounting = c(\"protein_groups\", \"proteins\", \"peptides\", \"peptides_unique\"),   impute_max = 0.5,   palette = \"YlGnBu\",   ... )"},{"path":"/reference/plot_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variation in normalized values — plot_counts","text":"data tidyproteomics data object accounting character string impute_max numeric representing largest allowable imputation percentage palette string representing palette scale_fill_brewer() ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variation in normalized values — plot_counts","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the variation in normalized values — plot_counts","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>% plot_counts() #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found"},{"path":"/reference/plot_dynamic_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CVs by abundance — plot_dynamic_range","title":"Plot CVs by abundance — plot_dynamic_range","text":"plot_dynamic_range() GGplot2 implementation plotting normalization effects CVs abundance, visualized 2d density plot. Layered top loess smoothed regression CVs abundance, median CV shown red dynamic range represented box plot top. point plot examine CVs minimized abundance profile. normalization methods function well high abundance yet leave retain high CVs lower abundance.","code":""},{"path":"/reference/plot_dynamic_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CVs by abundance — plot_dynamic_range","text":"","code":"plot_dynamic_range(data = NULL, ...)"},{"path":"/reference/plot_dynamic_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CVs by abundance — plot_dynamic_range","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_dynamic_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot CVs by abundance — plot_dynamic_range","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_dynamic_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot CVs by abundance — plot_dynamic_range","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%   normalize(.method = c(\"linear\", \"loess\", \"randomforest\")) %>%   plot_dynamic_range() #> ℹ Normalizing quantitative data #> ℹ ... using linear regression #> ✔ ... using linear regression [143ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [525ms] #>  #> ℹ ... using randomforest regression #> ✔ ... using randomforest regression [16s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest"},{"path":"/reference/plot_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Bubble plot of enrichment values — plot_enrichment","title":"Bubble plot of enrichment values — plot_enrichment","text":"plot_enrichment() GGplot2 implementation plotting enrichment values. function can take either tidyproteomics data object table required headers.","code":""},{"path":"/reference/plot_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bubble plot of enrichment values — plot_enrichment","text":"","code":"plot_enrichment(   data = NULL,   ...,   .term = NULL,   enrichment_min = 1,   enrichment_column = \"enrichment\",   significance_max = 0.01,   significance_column = \"p_value\",   term_column = \"annotation\",   size_column = \"size\",   destination = \"plot\",   height = 5,   width = 8 )"},{"path":"/reference/plot_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bubble plot of enrichment values — plot_enrichment","text":"... two sample comparison enrichment_min numeric defining minimum log2 enrichment highlight. enrichment_column character defining column name enrichment values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. term_column character defining column name labeling. size_column character defining column name term size. destination character string height numeric width numeric table tibble","code":""},{"path":"/reference/plot_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bubble plot of enrichment values — plot_enrichment","text":"ggplot2 object","code":""},{"path":"/reference/plot_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bubble plot of enrichment values — plot_enrichment","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(ggplot2, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    expression(ko/wt, .method = stats::t.test) %>%    enrichment(ko/wt, .term = 'biological_process', .method = 'wilcoxon') %>%    plot_enrichment(ko/wt, .term = 'biological_process') +    labs(title = \"Ecoli: Term Enrichment\", subtitle = \"KO / WT\") #> ℹ NA: had issues"},{"path":"/reference/plot_euler.html","id":null,"dir":"Reference","previous_headings":"","what":"GGplot2 extension to plot a Euler diagram — plot_euler","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"GGplot2 extension plot Euler diagram","code":""},{"path":"/reference/plot_euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"","code":"plot_euler(data, ...)"},{"path":"/reference/plot_euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_euler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GGplot2 extension to plot a Euler diagram — plot_euler","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    subset(match_between_runs == FALSE) %>%    plot_euler() #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>    ecoli_proteins %>%    subset(match_between_runs == FALSE) %>%    subset(cellular_component %like% 'cytosol') %>%    plot_euler() #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>  #>  #> ℹ Subsetting data: cellular_component %like% cytosol #> ✔ Subsetting data: cellular_component %like% cytosol ... done #>"},{"path":"/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a heatmap of quantitative values by sample — plot_heatmap","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"plot_heatmap() pheatmap implementation plotting commonly visualized quantitative heatmap according sample. samples quantitative values clustered visualized.","code":""},{"path":"/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"","code":"plot_heatmap(data = NULL, tag = NULL, row_names = FALSE, ...)"},{"path":"/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"data tidyproteomics data object tag character string row_names boolean ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a heatmap of quantitative values by sample — plot_heatmap","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   select_normalization() %>%   plot_heatmap() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [204ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [223ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [126ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [239ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [515ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled"},{"path":"/reference/plot_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot normalized values — plot_normalization","title":"Plot normalized values — plot_normalization","text":"plot_normalization() GGplot2 implementation plotting normalization effects visualized box plot.","code":""},{"path":"/reference/plot_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot normalized values — plot_normalization","text":"","code":"plot_normalization(data = NULL, ...)"},{"path":"/reference/plot_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot normalized values — plot_normalization","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot normalized values — plot_normalization","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot normalized values — plot_normalization","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   plot_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [273ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [240ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [164ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [266ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [582ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #> Warning: Removed 8382 rows containing non-finite values (stat_boxplot)."},{"path":"/reference/plot_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA values — plot_pca","title":"Plot PCA values — plot_pca","text":"plot_pca() GGplot2 implementation plotting two principal components PCA analysis, visualized scatter.","code":""},{"path":"/reference/plot_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA values — plot_pca","text":"","code":"plot_pca(   data = NULL,   variables = c(\"PC1\", \"PC2\"),   labels = TRUE,   label_size = 3,   ... )"},{"path":"/reference/plot_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA values — plot_pca","text":"data tidyproteomics data object variables character vector 2 PCs plot. Acceptable values include (PC1, PC2, PC3 ... PC9). Default c('PC1','PC2'). labels boolean label_size numeric ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA values — plot_pca","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCA values — plot_pca","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins <- ecoli_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   select_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [268ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [264ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [350ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [221ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [524ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled  ecoli_proteins %>% plot_pca()   # a different PC set ecoli_proteins %>% plot_pca(variables = c(\"PC2\", \"PC3\"))   # a PC scree plot ecoli_proteins %>% plot_pca(\"scree\")"},{"path":"/reference/plot_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot proportional expression values — plot_proportion","title":"Plot proportional expression values — plot_proportion","text":"plot_proportion() GGplot2 implementation plotting expression differences foldchange ~ scaled abundance. allows visualization selected proteins See also plot_volcano(). function can take either tidyproteomics data object table required headers.","code":""},{"path":"/reference/plot_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot proportional expression values — plot_proportion","text":"","code":"plot_proportion(   data = NULL,   ...,   log2fc_column = \"log2_foldchange\",   log2fc_min = 2,   significance_column = \"adj_p_value\",   significance_max = 0.05,   proportion_column = \"proportional_expression\",   proportion_min = 0.01,   labels_column = \"protein\",   label_significance = TRUE,   show_panels = FALSE,   show_lines = TRUE,   show_fc_scale = TRUE,   point_size = NULL,   color_positive = \"dodgerblue\",   color_negative = \"firebrick1\",   destination = \"plot\",   height = 5,   width = 8 )"},{"path":"/reference/plot_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot proportional expression values — plot_proportion","text":"... two sample comparison log2fc_column character defining column name log2 foldchange values. log2fc_min numeric defining minimum log2 foldchange highlight. significance_column character defining column name statistical significance values. significance_max numeric defining maximum statistical significance highlight. proportion_column character defining column name proportional expression values. proportion_min numeric defining minimum proportional expression highlight. labels_column character defining column name column labeling. label_significance boolean labeling values significance threshold. show_panels boolean showing colored /expression panels. show_lines boolean showing threshold lines. show_fc_scale boolean showing secondary foldchange scale. point_size numeric shanging point size. color_positive character defining color positive () expression. color_negative character defining color negative () expression. destination character string height numeric width numeric table tibble","code":""},{"path":"/reference/plot_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot proportional expression values — plot_proportion","text":"ggplot2 object","code":""},{"path":"/reference/plot_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot proportional expression values — plot_proportion","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    expression(ko/wt) %>%    plot_proportion(ko/wt, log2fc_min = 0.5, significance_column = 'p_value') #> ℹ proportional_expression appears to sum to 1 adjusting values to 100(%)   # generates the same out come # ecoli_proteins %>% #    expression(ko/wt) %>% #    export_analysis(ko/wt, .analysis = 'expression) %>% #    plot_proportion(log2fc_min = 0.5, significance_column = 'p_value')  # display the gene name instead ecoli_proteins %>%    expression(ko/wt) %>%    plot_proportion(ko/wt, log2fc_min = 0.5, significance_column = 'p_value', labels_column = \"gene_name\") #> ℹ proportional_expression appears to sum to 1 adjusting values to 100(%)"},{"path":"/reference/plot_protein.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize mapped sequence data — plot_protein","title":"Visualize mapped sequence data — plot_protein","text":"Visualize mapped sequence data","code":""},{"path":"/reference/plot_protein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize mapped sequence data — plot_protein","text":"","code":"plot_protein(   mapped_data = NULL,   protein = NULL,   row_length = 50,   samples = NULL,   modifications = NULL,   ncol = NULL,   nrow = NULL,   color_sequence = \"grey60\",   color_modifications = c(\"red\", \"blue\", \"orange\", \"skyblue\", \"purple\", \"yellow\"),   show_modification_precent = TRUE )"},{"path":"/reference/plot_protein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize mapped sequence data — plot_protein","text":"mapped_data tidyproteomics data-object, specifically sequencing origin protein character string row_length numeric samples character string modifications character string ncol numeric nrow numeric color_sequence character string color_modifications character vector show_modification_precent boolean","code":""},{"path":"/reference/plot_protein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize mapped sequence data — plot_protein","text":"list protein mappings","code":""},{"path":"/reference/plot_protein.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize mapped sequence data — plot_protein","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  ecoli_protein_map <- ecoli_peptides %>%    protein_map(fasta = path_to_package_data('fasta')) #> ℹ Parsing FASTA file ecoli.fasta #> ✔ Parsing FASTA file ecoli.fasta ... done #>  #> ℹ Sequence mapping #>   Sequence mapping ■■■■■■■                           20% | ETA: 22s #>   Sequence mapping ■■■■■■■■■■                        30% | ETA: 26s #>   Sequence mapping ■■■■■■■■■■■■■                     40% | ETA: 28s #>   Sequence mapping ■■■■■■■■■■■■■■■■                  50% | ETA: 22s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■               60% | ETA: 18s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■            70% | ETA: 15s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA: 10s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      90% | ETA:  5s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> ℹ Sequence mapping #> ✔ Sequence mapping ... done #>   ecoli_protein_map %>% plot_protein('P0A6Y8')"},{"path":"/reference/plot_quantrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variation in normalized values — plot_quantrank","title":"Plot the variation in normalized values — plot_quantrank","text":"plot_quantrank() GGplot2 implementation plotting variability normalized values, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"/reference/plot_quantrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variation in normalized values — plot_quantrank","text":"","code":"plot_quantrank(   data = NULL,   accounting = \"protein\",   type = c(\"points\", \"lines\"),   show_error = TRUE,   show_rank_scale = FALSE,   limit_rank = NULL,   display_filter = c(\"none\", \"log2_foldchange\", \"p_value\", \"adj_p_value\"),   display_cutoff = 1,   palette = \"YlGnBu\",   impute_max = 0.5,   ... )"},{"path":"/reference/plot_quantrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variation in normalized values — plot_quantrank","text":"data tidyproteomics data object accounting character string type character string show_error boolean show_rank_scale boolean limit_rank numerical vector 2 display_filter numeric 0 1 display_cutoff numeric 0 1 palette string representing palette scale_fill_brewer() impute_max numeric representing largest allowable imputation percentage ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_quantrank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variation in normalized values — plot_quantrank","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_quantrank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the variation in normalized values — plot_quantrank","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>% plot_quantrank()   ecoli_proteins %>% plot_quantrank(type = 'lines')   ecoli_proteins %>% plot_quantrank(display_filter = 'log2_foldchange', display_cutoff = 1) #> Warning: ggrepel: 17 unlabeled data points (too many overlaps). Consider increasing max.overlaps   ecoli_proteins %>% plot_quantrank(limit_rank = c(1,50), show_rank_scale = TRUE)"},{"path":"/reference/plot_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for saving plots — plot_save","title":"Helper function for saving plots — plot_save","text":"plot_save helper function","code":""},{"path":"/reference/plot_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for saving plots — plot_save","text":"","code":"plot_save(   plot,   data,   file_name,   destination = c(\"plot\", \"save\", \"png\", \"svg\", \"tiff\", \"jpeg\"),   height = 5,   width = 8,   ... )"},{"path":"/reference/plot_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for saving plots — plot_save","text":"plot ggplot2 object data tidyproteomics data object file_name character string destination character string height numeric width numeric","code":""},{"path":"/reference/plot_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for saving plots — plot_save","text":"ggplot2 object","code":""},{"path":"/reference/plot_variation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variation in normalized values — plot_variation","title":"Plot the variation in normalized values — plot_variation","text":"plot_variation() GGplot2 implementation plotting variability normalized values, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"/reference/plot_variation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variation in normalized values — plot_variation","text":"","code":"plot_variation(data = NULL, ...)"},{"path":"/reference/plot_variation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variation in normalized values — plot_variation","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_variation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variation in normalized values — plot_variation","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_variation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the variation in normalized values — plot_variation","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%   normalize(c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   plot_variation() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using median shift [471ms] #>  #> ℹ ... using median shift #> ✔ ... using linear regression [217ms] #>  #> ℹ ... using linear regression #> ✔ ... using limma regression [139ms] #>  #> ℹ ... using limma regression #> ✔ ... using loess regression [230ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [511ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled"},{"path":"/reference/plot_variation_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the variation in normalized values — plot_variation_cv","title":"Plot the variation in normalized values — plot_variation_cv","text":"plot_variation_cv() GGplot2 implementation plotting variability normalized values, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"/reference/plot_variation_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the variation in normalized values — plot_variation_cv","text":"","code":"plot_variation_cv(data = NULL, ...)"},{"path":"/reference/plot_variation_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the variation in normalized values — plot_variation_cv","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_variation_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the variation in normalized values — plot_variation_cv","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_variation_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the variation in normalized values — plot_variation_cv","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\")) %>%   plot_variation_cv() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [203ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [207ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [133ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [244ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [524ms] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected scaled"},{"path":"/reference/plot_variation_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the PCA variation in normalized values — plot_variation_pca","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"plot_variation_pca() GGplot2 implementation plotting variability normalized values PCA analysis, generating two facets. left facet plot CVs normalization method. right facet plot 95%CI abundance, essentially conservative dynamic range. goal select normalization method minimizes CVs also retaining dynamic range.","code":""},{"path":"/reference/plot_variation_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"","code":"plot_variation_pca(data = NULL, ...)"},{"path":"/reference/plot_variation_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_variation_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_variation_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the PCA variation in normalized values — plot_variation_pca","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%   normalize(.method = c(\"linear\", \"loess\", \"randomforest\")) %>%   plot_variation_pca() #> ℹ Normalizing quantitative data #> ℹ ... using linear regression #> ✔ ... using linear regression [214ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [538ms] #>  #> ℹ ... using randomforest regression #> ✔ ... using randomforest regression [16.7s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest"},{"path":"/reference/plot_venn.html","id":null,"dir":"Reference","previous_headings":"","what":"GGplot2 extension to plot a Venn diagram — plot_venn","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"GGplot2 extension plot Venn diagram","code":""},{"path":"/reference/plot_venn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"","code":"plot_venn(data, ...)"},{"path":"/reference/plot_venn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"data tidyproteomics data object ... passthrough ggsave see plotting","code":""},{"path":"/reference/plot_venn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_venn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GGplot2 extension to plot a Venn diagram — plot_venn","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    subset(match_between_runs == FALSE) %>%    plot_venn() #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>"},{"path":"/reference/plot_venneuler.html","id":null,"dir":"Reference","previous_headings":"","what":"GGplot2 extension to plot a Venn or Euler diagram — plot_venneuler","title":"GGplot2 extension to plot a Venn or Euler diagram — plot_venneuler","text":"GGplot2 extension plot Venn Euler diagram","code":""},{"path":"/reference/plot_venneuler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GGplot2 extension to plot a Venn or Euler diagram — plot_venneuler","text":"","code":"plot_venneuler(   data = NULL,   destination = c(\"plot\", \"save\"),   height = 5,   width = 8,   type = c(\"Venn\", \"Euler\"),   ... )"},{"path":"/reference/plot_venneuler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GGplot2 extension to plot a Venn or Euler diagram — plot_venneuler","text":"data tidyproteomics data object destination character string one (save, plot) height numeric width numeric type character string one (Venn, Euler) ... passthrough ggsave","code":""},{"path":"/reference/plot_venneuler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GGplot2 extension to plot a Venn or Euler diagram — plot_venneuler","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/plot_volcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Volcano plot of expression values — plot_volcano","title":"Volcano plot of expression values — plot_volcano","text":"plot_volcano() GGplot2 implementation plotting expression differences foldchange ~ statistical significance. See also plot_proportion().  function can take either tidyproteomics data object table required headers.","code":""},{"path":"/reference/plot_volcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Volcano plot of expression values — plot_volcano","text":"","code":"plot_volcano(   data = NULL,   ...,   log2fc_min = 2,   log2fc_column = \"log2_foldchange\",   significance_max = 0.05,   significance_column = \"adj_p_value\",   labels_column = \"protein\",   show_pannels = TRUE,   show_lines = TRUE,   show_fc_scale = TRUE,   point_size = NULL,   color_positive = \"dodgerblue\",   color_negative = \"firebrick1\",   destination = \"plot\",   height = 5,   width = 8 )"},{"path":"/reference/plot_volcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Volcano plot of expression values — plot_volcano","text":"... two sample comparison log2fc_min numeric defining minimum log2 foldchange highlight. log2fc_column character defining column name log2 foldchange values. significance_max numeric defining maximum statistical significance highlight. significance_column character defining column name statistical significance values. labels_column character defining column name column labeling. show_pannels boolean showing colored /expression panels. show_lines boolean showing threshold lines. show_fc_scale boolean showing secondary foldchange scale. point_size numeric changing point size. color_positive character defining color positive () expression. color_negative character defining color negative () expression. destination character string height numeric width numeric table tibble","code":""},{"path":"/reference/plot_volcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Volcano plot of expression values — plot_volcano","text":"ggplot2 object","code":""},{"path":"/reference/plot_volcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Volcano plot of expression values — plot_volcano","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    expression(ko/wt) %>%    plot_volcano(ko/wt, log2fc_min = 0.5, significance_column = 'p_value')   # generates the same out come # ecoli_proteins %>% #     expression(ko/wt) %>% #     export_analysis(ko/wt, .analysis = 'expression) %>% #     plot_volcano(log2fc_min = 0.5, significance_column = 'p_value')  # display the gene name instead ecoli_proteins %>%    expression(ko/wt) %>%    plot_volcano(ko/wt, log2fc_min = 0.5, significance_column = 'p_value', labels_column = \"gene_name\")"},{"path":"/reference/print.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — print.tidyproteomics","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"Tidy-Quant data object print definition","code":""},{"path":"/reference/print.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"","code":"# S3 method for tidyproteomics print(obj)"},{"path":"/reference/print.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"obj tidyproteomics data object","code":""},{"path":"/reference/print.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — print.tidyproteomics","text":"print object summary","code":""},{"path":"/reference/print.tidyquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — print.tidyquant","title":"Tidy-Quant data object print definition — print.tidyquant","text":"Tidy-Quant data object print definition","code":""},{"path":"/reference/print.tidyquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — print.tidyquant","text":"","code":"# S3 method for tidyproteomics print(obj)"},{"path":"/reference/print.tidyquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — print.tidyquant","text":"obj tidyproteomics data object","code":""},{"path":"/reference/print.tidyquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — print.tidyquant","text":"print object summary","code":""},{"path":"/reference/println.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for printing messages — println","title":"Helper function for printing messages — println","text":"Helper function printing messages","code":""},{"path":"/reference/println.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for printing messages — println","text":"","code":"println(name = \"\", message = \"\", pad_length = 15)"},{"path":"/reference/println.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for printing messages — println","text":"name string message string pad_length string","code":""},{"path":"/reference/println.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for printing messages — println","text":"console print line","code":""},{"path":"/reference/protein_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample romics data object — protein_data","title":"A sample romics data object — protein_data","text":"dataset containing quantitative data thousands proteins 4 samples 3 replicates ","code":""},{"path":"/reference/protein_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample romics data object — protein_data","text":"","code":"protein_data"},{"path":"/reference/protein_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample romics data object — protein_data","text":"list collection character values tibbles: quantitative tibble, protein quantitative data annotation tibble, protein annotation data","code":""},{"path":"/reference/protein_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a peptide data to protein sequences for visualization — protein_map","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"Align peptide data protein sequences visualization","code":""},{"path":"/reference/protein_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"","code":"protein_map(data = NULL, fasta_path = NULL)"},{"path":"/reference/protein_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"data tidyproteomics data-object, specifically peptide origin fasta_path character string representing path fasta file","code":""},{"path":"/reference/protein_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"list protein mappings","code":""},{"path":"/reference/protein_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align a peptide data to protein sequences for visualization — protein_map","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  ecoli_protein_map <- ecoli_peptides %>%    protein_map(fasta = path_to_package_data('fasta')) #> ℹ Parsing FASTA file ecoli.fasta #> ✔ Parsing FASTA file ecoli.fasta ... done #>  #> ℹ Sequence mapping #>   Sequence mapping ■■■■■■■                           20% | ETA: 17s #>   Sequence mapping ■■■■■■■■■■                        30% | ETA: 23s #>   Sequence mapping ■■■■■■■■■■■■■                     40% | ETA: 26s #>   Sequence mapping ■■■■■■■■■■■■■■■■                  50% | ETA: 21s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■               60% | ETA: 17s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■            70% | ETA: 14s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA: 10s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      90% | ETA:  5s #>   Sequence mapping ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s #> ℹ Sequence mapping #> ✔ Sequence mapping ... done #>"},{"path":"/reference/protein_map_munge.html","id":null,"dir":"Reference","previous_headings":"","what":"Align a peptide data to protein sequences for visualization — protein_map_munge","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"Align peptide data protein sequences visualization","code":""},{"path":"/reference/protein_map_munge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"","code":"protein_map_munge(   mapped_data = NULL,   protein = NULL,   row_length = 50,   samples = NULL,   modifications = NULL )"},{"path":"/reference/protein_map_munge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"mapped_data tidyproteomics data-object, specifically peptide origin protein character string row_length numeric samples character string modifications character string","code":""},{"path":"/reference/protein_map_munge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align a peptide data to protein sequences for visualization — protein_map_munge","text":"plot munged list protein mappings","code":""},{"path":"/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data by format type — read_data","title":"Read data by format type — read_data","text":"read_data() helper function assumes format type data table checking ending path string","code":""},{"path":"/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data by format type — read_data","text":"","code":"read_data(path = NULL, ...)"},{"path":"/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data by format type — read_data","text":"path path character string ... readr passthrough options","code":""},{"path":"/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data by format type — read_data","text":"tibble","code":""},{"path":"/reference/reassign.html","id":null,"dir":"Reference","previous_headings":"","what":"reassign the sample info — reassign","title":"reassign the sample info — reassign","text":"reassign() enables editing sample descriptive experimental table. function replace sample string update replicate number.","code":""},{"path":"/reference/reassign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reassign the sample info — reassign","text":"","code":"reassign(data = NULL, field = NULL, pattern = NULL, replace = NULL)"},{"path":"/reference/reassign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reassign the sample info — reassign","text":"data tidyproteomics data-object field character string pattern character string replace character string","code":""},{"path":"/reference/reassign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reassign the sample info — reassign","text":"tidyproteomics data-object","code":""},{"path":"/reference/reassign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"reassign the sample info — reassign","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # check the experiment table ecoli_proteins %>% summary(\"experiment\") #> ! Variable `experiment` not found in data. #> NULL  # make the modification ecoli_proteins %>%    reassign(field = \"sample\", pattern = \"ko\", replace = \"hint_ko\") %>%    summary(\"sample\") #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  # reassign specific file_ids ecoli_proteins %>%    reassign(field = \"sample_file\", pattern = \"f1\", replace = \"new\") %>%    reassign(field = \"sample_file\", pattern = \"f2\", replace = \"new\") %>%    summary(\"sample\") #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found"},{"path":"/reference/remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data subset — remove","title":"Create a data subset — remove","text":"subset() main function sub-setting quantitative data tidyproteomics data-object based regular expression targeted annotation. function return smaller tidyproteomics data-object. See also subset_in() subset_out.","code":""},{"path":"/reference/remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data subset — remove","text":"","code":"remove(   data = NULL,   metric = c(\"match_between_runs\", \"imputed\", \"num_peptides\", \"num_unique_peptides\"),   operator = c(\"<\", \"<=\", \">\", \">=\", \"==\"),   value = 0,   verbose = TRUE,   abort_on_zero = TRUE )"},{"path":"/reference/remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data subset — remove","text":"data tidyproteomics data object metric character string operator mathematical comparator value numeric verbose boolean abort_on_zero boolean","code":""},{"path":"/reference/remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data subset — remove","text":"tibble","code":""},{"path":"/reference/remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data subset — remove","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # remove match_between_runs proteins and summarize ecoli_proteins %>%    remove('match_between_runs') %>%    summary(\"sample\") #> ℹ Filtering data to remove match_between_runs == 1 #> ✔ Filtering data to remove match_between_runs == 1 [20ms] #>  #>  #> ── Summary: sample ── #>  #>  files sample proteins protein_groups peptides peptides_unique quantifiable #>      4     ko     2683           2683    30779           30562         99.3 #>      4     wt     2666           2666    30811           30589         99.3 #>        CVs #>  0.1335458 #>  0.1563057 #>   # remove proteins with only 1 peptide ecoli_proteins %>%    remove('num_peptides', \"<=\", 1) %>%    summary() #> ℹ Filtering data to remove num_peptides <= 1 #> ✔ Filtering data to remove num_peptides <= 1 [14ms] #>  #>  #> ── Summary: global ── #>  #>  files proteins protein_groups peptides peptides_unique quantifiable       CVs #>      8     2451           2451    30869           30633         99.2 0.1512679 #>"},{"path":"/reference/reverselog_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse the plot axis for log transformation — reverselog_transformation","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"Reverse plot axis log transformation","code":""},{"path":"/reference/reverselog_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"","code":"reverselog_transformation(base = exp(1))"},{"path":"/reference/reverselog_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"base numeric","code":""},{"path":"/reference/reverselog_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse the plot axis for log transformation — reverselog_transformation","text":"ggplot scale transformation","code":""},{"path":"/reference/rollup.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert peptide quantitative data into protein quantitative data — rollup","title":"Convert peptide quantitative data into protein quantitative data — rollup","text":"rollup() produces protein based tidyproteomics data-object peptide based tidyproteomics data-object.","code":""},{"path":"/reference/rollup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert peptide quantitative data into protein quantitative data — rollup","text":"","code":"rollup(   data = NULL,   assign_by = c(\"all-possible\", \"razor-local\", \"razor-global\", \"non-homologous\"),   top_n = Inf,   split_abundance = FALSE,   fasta_path = NULL,   .function = fsum )"},{"path":"/reference/rollup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert peptide quantitative data into protein quantitative data — rollup","text":"data tidyproteomics data-object assign_by method combine peptides proteins top_n numeric indicate N number peptides summed account protein quantitative value, assumes peptides summed across charge states split_abundance boolean indicate abundances razor peptides split according protein prevalence fasta_path supplied, used fill annotation values description, protein_name gene_name .function assignable protein abundance summary function, fsum, fmean, fgeomean fmedian constructed NAs must removed. Example: fmedian <- function(x)stats::median(x, na.rm = TRUE) Example: fquantile <- function(x)stats::quantile(x, .75, na.rm = TRUE)","code":""},{"path":"/reference/rollup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert peptide quantitative data into protein quantitative data — rollup","text":"tidyproteomics data-object","code":""},{"path":"/reference/rollup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert peptide quantitative data into protein quantitative data — rollup","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) data <- ecoli_peptides %>% rollup() #> ℹ Rolling up top ALL peptides into proteins for all-possible by sum(x, na_rm = T) #> ℹ ... gathering peptides #> ✔ ... gathering peptides [209ms] #>  #> ℹ ... accounting for homology #> ✔ ... accounting for homology [9ms] #>  #> ℹ ... computing protein stats #> ✔ ... computing protein stats [70ms] #>  data %>% summary('sample') #>  #> ── Summary: sample ── #>  #>  files  sample proteins peptides peptides_unique quantifiable        CVs #>      4 hint_ko       10      983             983          100 0.09875255 #>      4      wt       10      970             970          100 0.08859894 #>"},{"path":"/reference/romics_quo.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset a data frame — romics_quo","title":"Helper function to subset a data frame — romics_quo","text":"Helper function subset data frame","code":""},{"path":"/reference/romics_quo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset a data frame — romics_quo","text":"","code":"tidyproteomics_quo(...)"},{"path":"/reference/romics_quo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset a data frame — romics_quo","text":"table tibble variable character string value character string operator character string","code":""},{"path":"/reference/romics_quo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset a data frame — romics_quo","text":"tibble","code":""},{"path":"/reference/save_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Store data locally — save_local","title":"Store data locally — save_local","text":"save_local() save tidyproteomics data-object local project, based given type directory ./data/ either proteins.rds peptides.rds. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/save_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store data locally — save_local","text":"","code":"save_local(data = NULL)"},{"path":"/reference/save_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store data locally — save_local","text":"data tidyproteomics data object","code":""},{"path":"/reference/save_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store data locally — save_local","text":"tidyproteomics data object","code":""},{"path":"/reference/save_omics.html","id":null,"dir":"Reference","previous_headings":"","what":"Store data locally — save_omics","title":"Store data locally — save_omics","text":"save_omics() save tidyproteomics data-object local project, based given type directory ./data/ either proteins.rds peptides.rds. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/save_omics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store data locally — save_omics","text":"","code":"save_omics(data = NULL)"},{"path":"/reference/save_omics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store data locally — save_omics","text":"data tidyproteomics data object","code":""},{"path":"/reference/save_omics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store data locally — save_omics","text":"tidyproteomics data object","code":""},{"path":"/reference/save_omics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store data locally — save_omics","text":"","code":"library(tidyproteomics) save_omics(ecoli_proteins) #> ℹ Saving proteins #> ✔ Saving proteins ... done #>"},{"path":"/reference/save_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Write table data locally — save_table","title":"Write table data locally — save_table","text":"save_table() save summary tibble root directory local project, based extension given file name. passthrough function returns original tibble.","code":""},{"path":"/reference/save_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write table data locally — save_table","text":"","code":"save_table(table, file_name = NULL)"},{"path":"/reference/save_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write table data locally — save_table","text":"table tibble file_name file name extensions one (.csv, .tsv, .rds, .xlsx)","code":""},{"path":"/reference/save_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write table data locally — save_table","text":"tibble","code":""},{"path":"/reference/save_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write table data locally — save_table","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>%    expression(ko/wt) %>%    export_analysis(ko/wt, .analysis = 'expression') %>%    save_table(\"expression_limma_ko_over_wt.csv\") #> ℹ Save table expression_limma_ko_over_wt.csv #> ✔ Save table expression_limma_ko_over_wt.csv ... done #>  #> # A tibble: 2,575 × 18 #>    protein imputed     n avera…¹ propo…² foldc…³ log2_…⁴ p_value adj_p…⁵ descr…⁶ #>    <chr>     <dbl> <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <chr>   #>  1 P76086    0         8  6.55e6 1.10e-5    4.79    2.26  0.182        1 Transc… #>  2 P76241    0.5       8  2.50e5 4.21e-7    2.85    1.51  0.286        1 HTH-ty… #>  3 P09152    0         8  7.49e6 1.26e-5    2.78    1.48  0.212        1 Respir… #>  4 P0AEU3    0.25      8  1.71e6 2.89e-6    2.48    1.31  0.560        1 Histid… #>  5 P10903    0.625     8  4.05e5 6.83e-7    2.36    1.24  0.347        1 Nitrat… #>  6 P0A9I8    0         8  2.89e6 4.87e-6    2.28    1.19  0.0353       1 Nitrit… #>  7 P0AF26    0.5       8  3.72e5 6.28e-7    2.22    1.15  0.308        1 Nitrat… #>  8 P0AC33    0         8  1.65e8 2.78e-4    2.19    1.13  0.204        1 Fumara… #>  9 P0ADT2    0         8  2.67e7 4.50e-5    2.14    1.10  0.165        1 UPF044… #> 10 P31825    0         8  7.59e6 1.28e-5    2.11    1.07  0.291        1 tRNA1(… #> # … with 2,565 more rows, 8 more variables: gene_id_entrez <chr>, #> #   gene_id_ensemble <chr>, gene_name <chr>, biological_process <chr>, #> #   cellular_component <chr>, molecular_function <chr>, wiki_pathway <chr>, #> #   reactome_pathway <chr>, and abbreviated variable names ¹​average_expression, #> #   ²​proportional_expression, ³​foldchange, ⁴​log2_foldchange, ⁵​adj_p_value, #> #   ⁶​description #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"/reference/save_to_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Store data locally — save_to_project","title":"Store data locally — save_to_project","text":"save_to_project() save tidyproteomics data-object local project, based given type directory ./data/ either proteins.rds peptides.rds. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/save_to_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store data locally — save_to_project","text":"","code":"save_to_project(data)"},{"path":"/reference/save_to_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store data locally — save_to_project","text":"data tidyproteomics data object","code":""},{"path":"/reference/save_to_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store data locally — save_to_project","text":"tidyproteomics data object","code":""},{"path":"/reference/save_to_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store data locally — save_to_project","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) protein_data <- protein_data %>% save_to_project() #> Error in check_ui(scaled, c(FALSE, \"between\", \"proportion\"), \"export:scaled\"): ✖ Input FALSE is a logical must be of type character"},{"path":"/reference/select_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a normalization method — select_normalization","title":"Select a normalization method — select_normalization","text":"select_normalization() selects best normalization method base low CVs, low PCA (PC1), wide Dynamic Range. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/select_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a normalization method — select_normalization","text":"","code":"select_normalization(data = NULL, normalization = NULL)"},{"path":"/reference/select_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a normalization method — select_normalization","text":"data tidyproteomics data object normalization character string","code":""},{"path":"/reference/select_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a normalization method — select_normalization","text":"tidyproteomics data-object","code":""},{"path":"/reference/select_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a normalization method — select_normalization","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins <- ecoli_proteins %>%   normalize(.method = c(\"scaled\", \"median\", \"linear\", \"limma\", \"loess\",\"randomforest\")) %>%   select_normalization() #> ℹ Normalizing quantitative data #> ℹ ... using scaled shift #> ✔ ... using scaled shift [210ms] #>  #> ℹ ... using median shift #> ✔ ... using median shift [205ms] #>  #> ℹ ... using linear regression #> ✔ ... using linear regression [137ms] #>  #> ℹ ... using limma regression #> ✔ ... using limma regression [239ms] #>  #> ℹ ... using loess regression #> ✔ ... using loess regression [509ms] #>  #> ℹ ... using randomforest regression #> ✔ ... using randomforest regression [16.1s] #>  #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest #> ℹ Selecting best normalization method #> ✔ Selecting best normalization method ... done #>  #> ℹ  ... selected randomforest"},{"path":"/reference/set_vect.html","id":null,"dir":"Reference","previous_headings":"","what":"set a named vector — set_vect","title":"set a named vector — set_vect","text":"set named vector","code":""},{"path":"/reference/set_vect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set a named vector — set_vect","text":"","code":"set_vect(config = NULL, category = NULL)"},{"path":"/reference/set_vect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set a named vector — set_vect","text":"config data.frame configuration values category character string","code":""},{"path":"/reference/set_vect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set a named vector — set_vect","text":"named vector","code":""},{"path":"/reference/show_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the current annotation data — show_annotation","title":"Display the current annotation data — show_annotation","text":"Display current annotation data","code":""},{"path":"/reference/show_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the current annotation data — show_annotation","text":"","code":"show_annotation(data, term = NULL)"},{"path":"/reference/show_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the current annotation data — show_annotation","text":"data tidyproteomics data object","code":""},{"path":"/reference/show_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the current annotation data — show_annotation","text":"vector","code":""},{"path":"/reference/show_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the current annotation data — show_annotation","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  ecoli_proteins %>% show_annotation() #> ℹ Current Annotation Terms #>   • protein #>   • description #>   • biological_process #>   • cellular_component #>   • molecular_function #>   • entrez_gene_id #>   • gene_symbol #>   • gene_name #>   • ensembl_gene_id #>   • reactome_pathways #>   • wikipathways  ecoli_proteins %>% show_annotation('reactome_pathways') #> ℹ Descriptions for reactome_pathways #>   • Formation of the cornified envelope #>   • Neutrophil degranulation #>   • Type I hemidesmosome assembly #>   • Keratinization"},{"path":"/reference/show_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the current annotation data — show_annotations","title":"Display the current annotation data — show_annotations","text":"Display current annotation data","code":""},{"path":"/reference/show_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the current annotation data — show_annotations","text":"","code":"show_annotations(data, term = NULL)"},{"path":"/reference/show_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the current annotation data — show_annotations","text":"data tidyproteomics data object term character string","code":""},{"path":"/reference/show_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the current annotation data — show_annotations","text":"vector","code":""},{"path":"/reference/show_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the current annotation data — show_annotations","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  ecoli_proteins %>% show_annotations() #> ℹ Current Annotation Terms #>   • protein #>   • description #>   • gene_id_entrez #>   • gene_id_ensemble #>   • gene_name #>   • biological_process #>   • cellular_component #>   • molecular_function #>   • wiki_pathway #>   • reactome_pathway  ecoli_proteins %>% show_annotations('reactome_pathway') #> ℹ Descriptions for reactome_pathway #>   • NA #>   • Formation of the cornified envelope #>   • Neutrophil degranulation #>   • Type I hemidesmosome assembly #>   • Keratinization"},{"path":"/reference/stats_contamination.html","id":null,"dir":"Reference","previous_headings":"","what":"Assess the relative amount of protein contamination — stats_contamination","title":"Assess the relative amount of protein contamination — stats_contamination","text":"stats_contamination() analysis function can take regular expression means assign subsets proteins contaminant.","code":""},{"path":"/reference/stats_contamination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assess the relative amount of protein contamination — stats_contamination","text":"","code":"stats_contamination(data = NULL, pattern = \"CRAP\")"},{"path":"/reference/stats_contamination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assess the relative amount of protein contamination — stats_contamination","text":"data tidyproteomics data object pattern character string, regular expression","code":""},{"path":"/reference/stats_contamination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assess the relative amount of protein contamination — stats_contamination","text":"tibble","code":""},{"path":"/reference/stats_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for displaying data — stats_print","title":"Helper function for displaying data — stats_print","text":"Helper function displaying data","code":""},{"path":"/reference/stats_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for displaying data — stats_print","text":"","code":"stats_print(table, title = NULL)"},{"path":"/reference/stats_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for displaying data — stats_print","text":"table tibble title character string","code":""},{"path":"/reference/stats_print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for displaying data — stats_print","text":"print table console","code":""},{"path":"/reference/stats_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the protein accounting — stats_summary","title":"Summarize the protein accounting — stats_summary","text":"stats_summary() analysis function computes protein summary statistics given tidyproteomics data object.","code":""},{"path":"/reference/stats_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the protein accounting — stats_summary","text":"","code":"stats_summary(   data,   group_by = c(\"global\", \"sample\", \"replicate\", \"experiment\") )"},{"path":"/reference/stats_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the protein accounting — stats_summary","text":"data tidyproteomics data object group_by summarize","code":""},{"path":"/reference/stats_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the protein accounting — stats_summary","text":"tibble","code":""},{"path":"/reference/str_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize the column names in a tibble — str_normalize","title":"Normalize the column names in a tibble — str_normalize","text":"Normalize column names tibble","code":""},{"path":"/reference/str_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize the column names in a tibble — str_normalize","text":"","code":"str_normalize(x)"},{"path":"/reference/str_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize the column names in a tibble — str_normalize","text":"x vector","code":""},{"path":"/reference/str_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize the column names in a tibble — str_normalize","text":"vector","code":""},{"path":"/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data subset — subset","title":"Create a data subset — subset","text":"subset() main function sub-setting quantitative data tidyproteomics data-object based regular expression targeted annotation. function return smaller tidyproteomics data-object.","code":""},{"path":"/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data subset — subset","text":"","code":"subset(data = NULL, ..., .verbose = TRUE)"},{"path":"/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data subset — subset","text":"data tidyproteomics data object ... three part expression (eg. x == ) .verbose boolean","code":""},{"path":"/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data subset — subset","text":"tibble","code":""},{"path":"/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data subset — subset","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # creates a subset of just Ribosomes, based on the string in the annotation # protein_description ecoli_proteins %>%    subset(description %like% 'Ribosome') %>%    summary() #>  #> ℹ Subsetting data: description %like% Ribosome #> ✔ Subsetting data: description %like% Ribosome ... done #>  #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  # creates a subset without Ribosomes ecoli_proteins %>%    subset(description %!like% 'Ribosome') %>%    summary() #>  #> ℹ Subsetting data: description %!like% Ribosome #> ✔ Subsetting data: description %!like% Ribosome ... done #>  #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found"},{"path":"/reference/subset_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset with include — subset_in","title":"Helper function to subset with include — subset_in","text":"Helper function subset include","code":""},{"path":"/reference/subset_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset with include — subset_in","text":"","code":"subset_in(...)"},{"path":"/reference/subset_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset with include — subset_in","text":"...","code":""},{"path":"/reference/subset_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset with include — subset_in","text":"tibble","code":""},{"path":"/reference/subset_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset with exclude — subset_out","title":"Helper function to subset with exclude — subset_out","text":"Helper function subset exclude","code":""},{"path":"/reference/subset_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset with exclude — subset_out","text":"","code":"subset_out(...)"},{"path":"/reference/subset_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset with exclude — subset_out","text":"...","code":""},{"path":"/reference/subset_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset with exclude — subset_out","text":"tibble","code":""},{"path":"/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data — summary","title":"Summarize the data — summary","text":"summary() analysis function computes protein summary statistics given tidyproteomics data object. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data — summary","text":"","code":"summary(   data,   by = c(\"global\"),   destination = c(\"print\", \"save\", \"return\"),   contamination = NULL )"},{"path":"/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data — summary","text":"data tidyproteomics data object summarize destination character string, one (save, print) contamination character string","code":""},{"path":"/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data — summary","text":"tibble print, tidyproteomics data-object save","code":""},{"path":"/reference/summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data — summary","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # a global summary ecoli_proteins %>% summary() #>  #> ── Summary: global ── #>  #>  files proteins protein_groups peptides peptides_unique quantifiable       CVs #>      8     2772           2772    31271           31025         98.5 0.1573717 #>   # a summary by sample ecoli_proteins %>% summary(\"sample\") #>  #> ── Summary: sample ── #>  #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2772           2772    31271           31025         98.4 #>      wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 #>   # a summary by sample with match_between_runs removed ecoli_proteins %>%    subset(match_between_runs == FALSE) %>%    summary(\"sample\") #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>  #>  #> ── Summary: sample ── #>  #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2683           2683    30779           30562         99.1 #>      wt     4     2666           2666    30811           30589         99.1 #>        CVs #>  0.1329208 #>  0.1558694 #>   # a summary of match_between_runs ecoli_proteins %>% summary('match_between_runs') #>  #> ── Summary: match_between_runs ── #>  #>  match_between_runs files proteins protein_groups peptides peptides_unique #>               FALSE     8     2772           2772    30795           30576 #>                TRUE     8      527            527      477             450 #>  quantifiable       CVs #>          99.1 0.1532708 #>          55.7 0.2856872 #>   ecoli_proteins %>% summary(\"cellular_component\") #>  #> ── Summary: cellular_component ── #>  #>            cellular_component files proteins protein_groups peptides #>                  cytoskeleton     8     2772           2772    31271 #>                       cytosol     8      589            589     8894 #>  non-structural extracellular     8        3              3        9 #>                       nucleus     8        1              1        5 #>          other cell component     8      433            433     4684 #>   other cytoplasmic organelle     8     2772           2772    31271 #>               other membranes     8       61             61      744 #>               plasma membrane     8     2772           2772    31271 #>       translational apparatus     8        3              3       11 #>  peptides_unique quantifiable       CVs #>            31025         98.5 0.1573717 #>             8828         99.1 0.1329716 #>                9         88.9 0.1248169 #>                5        100.0 0.1301963 #>             4652         98.6 0.1632274 #>            31025         98.5 0.1573717 #>              739         97.5 0.1871234 #>            31025         98.5 0.1573717 #>               11        100.0 0.4519613 #>   ecoli_proteins %>% summary(\"biological_process\") #>  #> ── Summary: biological_process ── #>  #>                biological_process files proteins protein_groups peptides #>                    DNA metabolism     8     2772           2772    31271 #>   RNA metabolism OR transcription     8     2772           2772    31271 #>                     cell adhesion     8        1              1        1 #>  cell cycle OR cell proliferation     8        3              3       39 #>  cell organization and biogenesis     8       15             15      198 #>               cell-cell signaling     8     2772           2772    31271 #>           developmental processes     8        3              3        4 #>        other biological processes     8      175            175     1262 #>         other metabolic processes     8      610            610     8233 #>                protein metabolism     8       18             18      332 #>               signal transduction     8        1              1       18 #>                   stress response     8       45             45      330 #>                         transport     8      196            196     1542 #>  peptides_unique quantifiable       CVs #>            31025         98.5 0.1573717 #>            31025         98.5 0.1573717 #>                1         62.5 0.2738303 #>               39        100.0 0.1084535 #>              197         98.4 0.1615593 #>            31025         98.5 0.1573717 #>                4         75.0 0.1980664 #>             1258         98.4 0.1752463 #>             8179         98.6 0.1511318 #>              332         99.9 0.1944947 #>               18        100.0 0.1228771 #>              316         93.6 0.1537054 #>             1529         97.6 0.1815972 #>"},{"path":"/reference/summary.tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data — summary.tidyproteomics","title":"Summarize the data — summary.tidyproteomics","text":"summary() analysis function computes protein summary statistics given tidyproteomics data object. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/summary.tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data — summary.tidyproteomics","text":"","code":"# S3 method for tidyproteomics summary(   data,   by = c(\"global\"),   destination = c(\"print\", \"save\", \"return\"),   contamination = NULL )"},{"path":"/reference/summary.tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data — summary.tidyproteomics","text":"data tidyproteomics data object summarize destination character string, one (save, print) contamination character string","code":""},{"path":"/reference/summary.tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data — summary.tidyproteomics","text":"tibble print, tidyproteomics data-object save","code":""},{"path":"/reference/summary.tidyproteomics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data — summary.tidyproteomics","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # a global summary ecoli_proteins %>% summary() #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  # a summary by sample ecoli_proteins %>% summary(\"sample\") #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  # a summary by sample with match_between_runs removed ecoli_proteins %>%    subset(match_between_runs == FALSE) %>%    summary(\"sample\") #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>  #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  # a summary of match_between_runs ecoli_proteins %>% summary('match_between_runs') #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  ecoli_proteins %>% summary(\"cellular_component\") #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found  ecoli_proteins %>% summary(\"biological_process\") #> Error in eval(expr, envir = list(`?` = function(...) stop()), enclos = envir): object 'method' not found"},{"path":"/reference/summary.tidyquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the data — summary.tidyquant","title":"Summarize the data — summary.tidyquant","text":"summary() analysis function computes protein summary statistics given tidyproteomics data object. passthrough function returns original tidyproteomics data-object.","code":""},{"path":"/reference/summary.tidyquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the data — summary.tidyquant","text":"","code":"# S3 method for tidyproteomics summary(   data,   by = c(\"global\"),   destination = c(\"print\", \"save\", \"return\"),   contamination = NULL )"},{"path":"/reference/summary.tidyquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the data — summary.tidyquant","text":"data tidyproteomics data object summarize destination character string, one (save, print) contamination character string","code":""},{"path":"/reference/summary.tidyquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the data — summary.tidyquant","text":"tibble print, tidyproteomics data-object save","code":""},{"path":"/reference/summary.tidyquant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the data — summary.tidyquant","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics)  # a global summary ecoli_proteins %>% summary() #>  #> ── Summary: global ── #>  #>  files proteins protein_groups peptides peptides_unique quantifiable       CVs #>      8     2772           2772    31271           31025         98.5 0.1573717 #>   # a summary by sample ecoli_proteins %>% summary(\"sample\") #>  #> ── Summary: sample ── #>  #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2772           2772    31271           31025         98.4 #>      wt     4     2772           2772    31271           31025         98.5 #>        CVs #>  0.1380689 #>  0.1612074 #>   # a summary by sample with match_between_runs removed ecoli_proteins %>%    subset(match_between_runs == FALSE) %>%    summary(\"sample\") #>  #> ℹ Subsetting data: match_between_runs == FALSE #> ✔ Subsetting data: match_between_runs == FALSE ... done #>  #>  #> ── Summary: sample ── #>  #>  sample files proteins protein_groups peptides peptides_unique quantifiable #>      ko     4     2683           2683    30779           30562         99.1 #>      wt     4     2666           2666    30811           30589         99.1 #>        CVs #>  0.1329208 #>  0.1558694 #>   # a summary of match_between_runs ecoli_proteins %>% summary('match_between_runs') #>  #> ── Summary: match_between_runs ── #>  #>  match_between_runs files proteins protein_groups peptides peptides_unique #>               FALSE     8     2772           2772    30795           30576 #>                TRUE     8      527            527      477             450 #>  quantifiable       CVs #>          99.1 0.1532708 #>          55.7 0.2856872 #>   ecoli_proteins %>% summary(\"cellular_component\") #>  #> ── Summary: cellular_component ── #>  #>            cellular_component files proteins protein_groups peptides #>                  cytoskeleton     8     2772           2772    31271 #>                       cytosol     8      589            589     8894 #>  non-structural extracellular     8        3              3        9 #>                       nucleus     8        1              1        5 #>          other cell component     8      433            433     4684 #>   other cytoplasmic organelle     8     2772           2772    31271 #>               other membranes     8       61             61      744 #>               plasma membrane     8     2772           2772    31271 #>       translational apparatus     8        3              3       11 #>  peptides_unique quantifiable       CVs #>            31025         98.5 0.1573717 #>             8828         99.1 0.1329716 #>                9         88.9 0.1248169 #>                5        100.0 0.1301963 #>             4652         98.6 0.1632274 #>            31025         98.5 0.1573717 #>              739         97.5 0.1871234 #>            31025         98.5 0.1573717 #>               11        100.0 0.4519613 #>   ecoli_proteins %>% summary(\"biological_process\") #>  #> ── Summary: biological_process ── #>  #>                biological_process files proteins protein_groups peptides #>                    DNA metabolism     8     2772           2772    31271 #>   RNA metabolism OR transcription     8     2772           2772    31271 #>                     cell adhesion     8        1              1        1 #>  cell cycle OR cell proliferation     8        3              3       39 #>  cell organization and biogenesis     8       15             15      198 #>               cell-cell signaling     8     2772           2772    31271 #>           developmental processes     8        3              3        4 #>        other biological processes     8      175            175     1262 #>         other metabolic processes     8      610            610     8233 #>                protein metabolism     8       18             18      332 #>               signal transduction     8        1              1       18 #>                   stress response     8       45             45      330 #>                         transport     8      196            196     1542 #>  peptides_unique quantifiable       CVs #>            31025         98.5 0.1573717 #>            31025         98.5 0.1573717 #>                1         62.5 0.2738303 #>               39        100.0 0.1084535 #>              197         98.4 0.1615593 #>            31025         98.5 0.1573717 #>                4         75.0 0.1980664 #>             1258         98.4 0.1752463 #>             8179         98.6 0.1511318 #>              332         99.9 0.1944947 #>               18        100.0 0.1228771 #>              316         93.6 0.1537054 #>             1529         97.6 0.1815972 #>"},{"path":"/reference/summary_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for displaying data — summary_print","title":"Helper function for displaying data — summary_print","text":"Helper function displaying data","code":""},{"path":"/reference/summary_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for displaying data — summary_print","text":"","code":"summary_print(table, title = NULL)"},{"path":"/reference/summary_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for displaying data — summary_print","text":"table tibble","code":""},{"path":"/reference/summary_print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for displaying data — summary_print","text":"print table console","code":""},{"path":"/reference/table_quantrank.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to quantitation plots — table_quantrank","title":"Helper function to quantitation plots — table_quantrank","text":"table_quantrank()","code":""},{"path":"/reference/table_quantrank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to quantitation plots — table_quantrank","text":"","code":"table_quantrank(   data = NULL,   accounting = \"protein\",   display_filter = c(\"none\", \"log2_foldchange\", \"p_value\", \"adj_p_value\") )"},{"path":"/reference/table_quantrank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to quantitation plots — table_quantrank","text":"data tidyproteomics data object accounting character string display_filter numeric 0 1","code":""},{"path":"/reference/table_quantrank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to quantitation plots — table_quantrank","text":"(tidyproteomics data-object | ggplot-object)","code":""},{"path":"/reference/table_quantrank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to quantitation plots — table_quantrank","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tidyproteomics) ecoli_proteins %>% plot_quantrank()   ecoli_proteins %>% plot_quantrank(type = 'lines')   ecoli_proteins %>% plot_quantrank(type = 'lines', display_filter = 'log2_foldchange', display_cutoff = 1) #> Warning: ggrepel: 17 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"/reference/theme_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for having nice colors — theme_palette","title":"helper function for having nice colors — theme_palette","text":"helper function nice colors","code":""},{"path":"/reference/theme_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for having nice colors — theme_palette","text":"","code":"theme_palette()"},{"path":"/reference/theme_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for having nice colors — theme_palette","text":"character vector curated html colors","code":""},{"path":"/reference/tidyproteomics.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — tidyproteomics","title":"Tidy-Quant data object print definition — tidyproteomics","text":"Tidy-Quant data object print definition","code":""},{"path":"/reference/tidyproteomics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — tidyproteomics","text":"","code":"tidyproteomics(obj)"},{"path":"/reference/tidyproteomics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — tidyproteomics","text":"obj tidyproteomics data object","code":""},{"path":"/reference/tidyproteomics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — tidyproteomics","text":"print object summary","code":""},{"path":"/reference/tidyproteomics_quo.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset a data frame — tidyproteomics_quo","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"Helper function subset data frame","code":""},{"path":"/reference/tidyproteomics_quo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"","code":"tidyproteomics_quo(...)"},{"path":"/reference/tidyproteomics_quo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"table tibble variable character string value character string operator character string","code":""},{"path":"/reference/tidyproteomics_quo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset a data frame — tidyproteomics_quo","text":"tibble","code":""},{"path":"/reference/tidyquant.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy-Quant data object print definition — tidyquant","title":"Tidy-Quant data object print definition — tidyquant","text":"Tidy-Quant data object print definition","code":""},{"path":"/reference/tidyquant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy-Quant data object print definition — tidyquant","text":"","code":"tidyproteomics(obj)"},{"path":"/reference/tidyquant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy-Quant data object print definition — tidyquant","text":"obj tidyproteomics data object","code":""},{"path":"/reference/tidyquant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy-Quant data object print definition — tidyquant","text":"print object summary","code":""},{"path":"/reference/tidyquant_quo.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to subset a data frame — tidyquant_quo","title":"Helper function to subset a data frame — tidyquant_quo","text":"Helper function subset data frame","code":""},{"path":"/reference/tidyquant_quo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to subset a data frame — tidyquant_quo","text":"","code":"tidyproteomics_quo(...)"},{"path":"/reference/tidyquant_quo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to subset a data frame — tidyquant_quo","text":"table tibble variable character string value character string operator character string","code":""},{"path":"/reference/tidyquant_quo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to subset a data frame — tidyquant_quo","text":"tibble","code":""},{"path":"/reference/transform_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"helper function normalizing quantitative data tidyproteomics data-object","code":""},{"path":"/reference/transform_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"","code":"transform_factor(data, data_factor = NULL, ...)"},{"path":"/reference/transform_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"data tidyproteomics data object data_factor tidyproteomics data object ... pass arguments","code":""},{"path":"/reference/transform_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_factor","text":"tibble","code":""},{"path":"/reference/transform_log2.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing a quantitative table — transform_log2","title":"helper function for normalizing a quantitative table — transform_log2","text":"helper function normalizing quantitative table","code":""},{"path":"/reference/transform_log2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing a quantitative table — transform_log2","text":"","code":"transform_log2(table, values = \"abundance\")"},{"path":"/reference/transform_log2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing a quantitative table — transform_log2","text":"table tibble values character string","code":""},{"path":"/reference/transform_log2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing a quantitative table — transform_log2","text":"tibble","code":""},{"path":"/reference/transform_median.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"helper function normalizing quantitative data tidyproteomics data-object","code":""},{"path":"/reference/transform_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"","code":"transform_median(data, group_by = c(\"identifier\"), rename = \"log2_med\")"},{"path":"/reference/transform_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"data tidyproteomics data object group_by character vector rename character string","code":""},{"path":"/reference/transform_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for normalizing quantitative data from a tidyproteomics data-object — transform_median","text":"tibble","code":""},{"path":"/reference/write_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functio to write data table locally — write_local","title":"Helper functio to write data table locally — write_local","text":"write_local() save data table local project,","code":""},{"path":"/reference/write_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functio to write data table locally — write_local","text":"","code":"write_local(table = NULL, file_name = NULL)"},{"path":"/reference/write_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functio to write data table locally — write_local","text":"table tibble file_name tibble","code":""},{"path":"/reference/write_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functio to write data table locally — write_local","text":"tidyproteomics data object","code":""}]
